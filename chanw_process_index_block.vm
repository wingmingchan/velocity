#*
This format defines macros to process an index block.
Do not process the entire block. Instead, select system-page,
system-folder, etc, and process each individual page/folder, etc.

Example code:

#import( 'site://_common_assets/formats/library/velocity/chanw_process_index_block' )

#set( $page = $_XPathTool.selectSingleNode( $contentRoot, "calling-page/system-page" ) )
#chanwProcessSystemPage( $page )
$S_PRE

$systemPageName
$systemPageIsPublished

$chanwDynamicMetatdataNameValuesMap.get( "exclude-from-menu" )
$E_PRE

#set( $folder = $_XPathTool.selectSingleNode( $contentRoot, "system-folder" ) )
#chanwProcessSystemFolder( $folder )
$S_PRE

$systemFolderName
$systemFolderIsPublished

$chanwDynamicMetatdataNameValuesMap.get( "exclude-from-left" )
$E_PRE

Output:
test-process-index-block
true

[Yes]

/
true

[]
*#
#import( '/formats/library/velocity/chanw_macro_utilities' )

#macro( chanwProcessDynamicData $dynamicDataNode )
    #if( $dynamicDataNode.name != $cascadeXML_ELEMENT_DYNAMIC_METADATA )
        Not a dynamic data!!!$BR
        #stop
    #end
    
    #set( $chanwDynamicMetatdataNameValuesList = [] )
    #set( $chanwDynamicMetatdataValues         = $dynamicDataNode.getChildren( 'value' ) )
    
    #foreach( $value in $chanwDynamicMetatdataValues )
        #set( $void = $chanwDynamicMetatdataNameValuesList.add( $value.value ) )
    #end
    
    #set( $void = $chanwDynamicMetatdataNameValuesMap.put( 
        $dynamicDataNode.getChild( 'name' ).value,
        $chanwDynamicMetatdataNameValuesList ) )
#end

## generate macros that process index blocks
#set( $index_block_element_map = {
    "chanwProcessRSSItem" :        [ "item", "rssXML_ELEMENT_ITEM", "rssItemVarElementMap" ],
    "chanwProcessSystemBlock" :    [ "block", "cascadeXML_ELEMENT_SYSTEM_BLOCK", "systemBlockVarElementMap" ],
    "chanwProcessSystemFile" :     [ "file", "cascadeXML_ELEMENT_SYSTEM_FILE", "systemFileVarElementMap" ],
    "chanwProcessSystemSymlink" :  [ "symlink", "cascadeXML_ELEMENT_SYSTEM_SYMLINK", "systemSymlinkVarElementMap" ]
} )

#set( $indexBlockMapKeys = $index_block_element_map.keySet() )

#foreach( $macro_name in $indexBlockMapKeys )
    #set( $macro_list = $index_block_element_map[ $macro_name ] )
    #set( $chanwStatement = $index_block_code.replaceAll( "-macro_name-", $macro_name ).replaceAll(
        "-node_type-", $macro_list[ 0 ] ).replaceAll(
        "-element_name-", $macro_list[ 1 ] ).replaceAll(
        "-map_name-", $macro_list[ 2 ] ) )
    #evaluate( $chanwStatement )
#end

#macro( chanwProcessSystemFolder $folderNode )
    #if( $folderNode.name != $cascadeXML_ELEMENT_SYSTEM_FOLDER )
        Not a folder!!!$BR
        #stop
    #end
    #chanwGetNodeValues( $folderNode $systemFolderVarElementMap )
    #chanwGetNodeSets( $folderNode, { 
        'systemFolderDynamicMetadata':$cascadeXML_ELEMENT_DYNAMIC_METADATA, 
        'systemFolderSystemBlock':    $cascadeXML_ELEMENT_SYSTEM_BLOCK,
        'systemFolderSystemFile':     $cascadeXML_ELEMENT_SYSTEM_FILE,
        'systemFolderSystemFolder':   $cascadeXML_ELEMENT_SYSTEM_FOLDER,
        'systemFolderSystemPage':     $cascadeXML_ELEMENT_SYSTEM_PAGE,
        'systemFolderSystemSymlink':  $cascadeXML_ELEMENT_SYSTEM_SYMLINK } )
        
    #set( $chanwDynamicMetatdataNameValuesMap  = {} )
    
    #if( $systemFolderDynamicMetadata.size() > 0 )
        #foreach( $dmd in $systemFolderDynamicMetadata )
            #chanwProcessDynamicData( $dmd )
        #end
    #end
    
    #set( $chanwSystemFolderChildren = [] )
    
    #foreach( $child in $folderNode.Children )
        #if( $chanwFolderContainedAssets.contains( $child.name ) )
            #set( $void = $chanwSystemFolderChildren.add( $child ) )
        #end
    #end
#end

#macro( chanwProcessSystemPage $pageNode )
    #if( $pageNode.name != $cascadeXML_ELEMENT_SYSTEM_PAGE )
        Not a page!!!$BR
        #stop
    #end
    #chanwGetNodeValues( $pageNode $systemPageVarElementMap )
    
    #chanwGetNodeSets( $pageNode, { 
        'systemPageDynamicMetadata':    $cascadeXML_ELEMENT_DYNAMIC_METADATA,
        'systemPageSystemDataStructure':$cascadeXML_ELEMENT_SYSTEM_DATA_STRUCTURE } )
        
    #set( $chanwDynamicMetatdataNameValuesMap  = {} )
    
    #if( $systemPageDynamicMetadata.size() > 0 )
        #foreach( $dmd in $systemPageDynamicMetadata )
            #chanwProcessDynamicData( $dmd )
        #end
    #end
#end