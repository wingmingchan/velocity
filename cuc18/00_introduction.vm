================================================================================
A Tree-Driven Approach
================================================================================

All formats shown in the presentation can be found: 
https://github.com/wingmingchan/velocity/tree/master/cuc18
Reference site: http://www.upstate.edu/standard-model/

Questions for the audience:
================================================================================
1. Can you define the internal structure of the DEFAULT region of a template
   in the template? And can you move elements out of DEFAULT and
   insert them into other regions?
2. Can you attach a block to region A to swap region B and region C,
   to add a new region D, or to remove region E?
3. Can you configure a template, so that the same template can be used to
   publish a fully rendered page as well as partial page, including just
   the header, the footer, or just the content of the page WYSIWYG?
4. Can you add a new region to a page at the page level,
   without affecting all other pages associated with the same content type? 

The problems with templates and regions:
================================================================================
1. Templates: text files, cannot be modified or maniplulated programmatically;
   though represented by a Cascade API class, no methods defined
2. Regions: lack of internal structures; the number, the order, and the names
   of regions are fixed
3. Requirement of pairing blocks and processing formats
4. Mixing data with presentation: XHTML structure is presentational
5. Lack of flexibility, configurability, inheritance, reusability, and partiality
6. Lack of communication among page parts
7. Proliferation of configuration sets and content types
8. Loss of data when switching content types

Demo (site configurations):
================================================================================
1. standard-model: the hh design (except architecture )
2. java:           folder nav on the right
3. web-services:   adding prefooter

folder configurations:
standard-model/architecture/setup (partial pages)