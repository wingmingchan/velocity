#*doc
《code》
《copyright》
Author: Wing Ming Chan
Copyright (c) 2019 Wing Ming Chan <chanw@upstate.edu>
MIT Licensed
Modification history:
9/11/2017 Added documentation to chanwDisplayEvaluatedResult.
9/8/2017 Removed call of chanwLocateAsset from chanwGetScriptFormatCode.
8/7/2017 Started using macro names as namespace prefixes for local parameters.
7/12/2017 Added import and evaluate elements.
7/6/2017 Added code to process the evaluate element.
4/8/2017 Fixed a bug.
《/copyright》
《evaluate execute=“false”》
《div id=“hide-code1”》
《h2》Test Code and Results《/h2》
《pre》
$DOUBLE_HASH Display the code of chanwMatches
#chanwGetMacroCode( "chanw-regex-utilities" "formats/library/velocity" "_master" "chanwMatches" )
$_EscapeTool.xml( $chanwGetMacroCode )
《/pre》
《/div》
《/evaluate》
《documentation id=“top”》
《h2》Introduction《/h2》
《p》This format retrieves Velocity code from formats and displays the
documentation, possibly with the source code.《/p》
《p》For these macros to work properly, make sure that:《/p》
《ul》
《li》Annotation markups inside comments always use the four special unicode
characters: &#12298;, &#12299;, &#8220; and &#8221;.《/li》
《li》No single quotes are used in annotation markups.《/li》
《li》Annotation markups, after being transformed back to normal XML markups,
are well-formed.《/li》
《li》To display the documentation or code of individual macros, the
《code》macro《/code》 tags in the macro annotations must have id's, and macro
names must be passed in to macros like 《code》#chanwDisplayMacroCode《/code》
and 《code》#chanwDisplayMacroDocumentation《/code》.《/li》
《/ul》
《p》Characters like 《code》<《/code》 and 《code》&《/code》 can be used in
documentation because the contents of documentation go through
《code》$_EscapeTool.xml《/code》.《/p》
《p》The map 《code》$chanwMacroNameDocumentationMap《/code》 is used to store
macro-documentation element pairs. For example, after
《code》#chanwGetScriptFormatRootElement( "chanw-initialization"
"core/library/velocity/chanw" "_brisk" )《/code》 is executed, the map
stores the following:《/p》
《pre》
{
chanwBuildXMLContentRoot=[Element: <documentation />], 
chanwCallJavaMethod=[Element: <documentation />], 
chanwConvertToPascalCase=[Element: <documentation />], 
chanwCreateDatabasePHPCode=[Element: <documentation />],
etc.
}
《/pre》
《/documentation》
《import》
doc*###
#import( 'core/library/velocity/chanw/chanw-initialization' )
#*doc
《/import》
《global-variables》
doc*###
## strings for documentation use
#set( $SOURCE_CODE = "The Source Code" )
#set( $chanwDisplayVelocityCodeGlobalVariables = [ 
    "chanwBottomDocumentationElement",
    "chanwFormatCode",
    "chanwFormatXml",
    "chanwGetDocumentationElements",
    "chanwGetGlobalVariablesElement",
    "chanwGetMacroCode",
    "chanwGetMacroDocumentation",
    "chanwGetRootElementFromXMLBlock",
    "chanwGetScriptFormatCode",
    "chanwGetScriptFormatRootElement",
    "chanwTopDocumentationElement",
    "chanwWithSource"
] )
#set( $chanwStartChar  = "&#12298;" )
#set( $chanwEndChar    = "&#12299;" )
#set( $chanwStartQuote = "&#8220;" )
#set( $chanwEndQuote   = "&#8221;" )
#set( $chanwMacroNameDocumentationMap = {} )
#set( $chanwDocumentationMacroNameMap = {} )
#set( $chanwStartDoc   = "#\*doc" )
#set( $chanwEndDoc     = "doc\*#" + $_EscapeTool.getH() + $_EscapeTool.getH() )
#*doc
《/global-variables》
《documentation》
《code》#chanwDisplayDocumentation( $format_name $folder_path $site_name $with_source )《/code》
《p》Displays the documentation of a format, possibly including the source code.
This macro should be used as an entry point to this library format. Example:《/p》
《pre》
#chanwDisplayDocumentation(
    "chanw-display-velocity-code" "formats/library/velocity" "_common_assets" )
《/pre》
《/documentation》
《macro id=“chanwDisplayDocumentation”》
doc*###
#macro( chanwDisplayDocumentation $chanwDisplayDocumentationFormatName $chanwDisplayDocumentationFolderPath $chanwDisplayDocumentationSiteName $chanwDisplayDocumentationWithSource $chanwDisplayDocumentationShowTestResult )
#**### reinitialize all global variables
#**##chanwReinitializeDisplayVelocityCodeGlobalVariables
##
#**### the $chanwDisplayDocumentationWithSource variable is a bool defaulted to true
#**##if( !$chanwDisplayDocumentationWithSource.Class.Name || $chanwDisplayDocumentationWithSource == "true" || $chanwDisplayDocumentationWithSource == true ) 
#*    *##set( $chanwWithSource = true )
#**### don't assign $chanwDisplayDocumentationWithSource because it can be a string
#**##else
#*    *##set( $chanwWithSource = false ) 
#**##end
##
#**### get the root element of the script
#**##chanwGetScriptFormatRootElement( $chanwDisplayDocumentationFormatName $chanwDisplayDocumentationFolderPath $chanwDisplayDocumentationSiteName )
#**### retrieve all documentation elements
#**##chanwGetDocumentationElements( $chanwGetScriptFormatRootElement )
#**### display documentation elements
#**##chanwDisplayDocumentationElements( $chanwGetDocumentationElements $chanwDisplayDocumentationShowTestResult )
##
#**### display the source code
#**##if( $chanwGetScriptFormatCode != "" && $chanwWithSource )
#*    *##chanwDisplayHideVelocityCode( $chanwGetScriptFormatCode )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwDisplayDocumentationElements( $docElements )《/code》
《p》Displays the set of documentation elements, each as an li. The first
documentation element should contain general introduction of the format.
Example:《/p》
《pre》
#chanwDisplayDocumentationElements( $chanwGetDocumentationElements )
《/pre》
《/documentation》
《macro id=“chanwDisplayDocumentationElements”》
doc*###
#macro( chanwDisplayDocumentationElements $chanwDisplayDocumentationElementsDocElements $chanwDisplayDocumentationElementsShowTestResult )
#**### evaluate embedded code
#chanwDisplayEvaluatedResult
#if( $chanwDisplayDocumentationElementsShowTestResult && $chanwDisplayDocumentationElementsShowTestResult == true )<div id="show-code1"></div>#end
#**### output introduction
#**##if( $chanwTopDocumentationElement.Class && $chanwTopDocumentationElement != "" )
#*    *#$_SerializerTool.serialize( $chanwTopDocumentationElement, true )
#**##end
##
#**##if( $chanwDisplayDocumentationElementsDocElements && $chanwDisplayDocumentationElementsDocElements.size() > 0 )
#*    *### display global variables
#*    *##if( $chanwGetGlobalVariablesElement.Class && $chanwGetGlobalVariablesElement != "" )
#*        *#${S_H2}Global Variables$E_H2
#*        *#$S_PRE$_SerializerTool.serialize( $chanwGetGlobalVariablesElement, true ).trim()$E_PRE
#*    *##end
##
#*    *### display list of macros
#*    *##set( $chanwMacroNames = $chanwMacroNameDocumentationMap.keySet() )
##
#*    *##if( $chanwMacroNames.size() > 0 )
#*        *#${S_H2}List of Macros and Parts$E_H2
#*        *#$S_UL
#*        *##foreach( $macroName in $chanwMacroNames )
#*            *#${S_LI}<a href="#${macroName}">$macroName</a>$E_LI
#*        *##end
#*        *#$E_UL
##
#*        *### output heading
#*        *#${S_H2}Macros and Parts$E_H2
##            
#*        *### output macro documentation
#*        *#$S_UL
#*        *##foreach( $doc in $chanwDisplayDocumentationElementsDocElements )
#*            *##set( $chanwMacroName = $chanwDocumentationMacroNameMap.get( $doc ) )
#*            *#${S_LI}<a name="${chanwMacroName}"></a>$_SerializerTool.serialize( $doc, true )$E_LI
#*        *##end
#*        *#$E_UL
#*    *##end
##
#*    *### output postscript
#*    *##if( $chanwBottomDocumentationElement.Class && $chanwBottomDocumentationElement != "" )
#*        *#$_SerializerTool.serialize( $chanwBottomDocumentationElement, true )
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwDisplayEvaluatedResult《/code》
《p》Displays the test result.《/p》
《pre》
#chanwGetScriptFormatRootElement( "20library-format" "_cascade/cuc17" "cascade-admin" )
#chanwDisplayEvaluatedResult
《/pre》
《/documentation》
《macro id=“chanwDisplayEvaluatedResult”》
doc*###
#macro( chanwDisplayEvaluatedResult )
#**##if( $chanwGetEvaluateElement )
#*    *##if( $chanwGetEvaluateElement.getAttribute( "execute" ).Value == "true" )
#*        *##set( $chanwCodeToBeEvaluated = $_SerializerTool.serialize( $chanwGetEvaluateElement, true ) )
#*        *##evaluate( $chanwCodeToBeEvaluated.replaceAll( "&gt;", ">" ).replaceAll( "&lt;", "<" ).replaceAll( "&amp;&amp;", "&&" ) )
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwDisplayHideVelocityCode( $code $id $create_id_div $output_h2 )《/code》
《p》Displays a piece of code, wrapped inside a pre element, possibly wrapped
in an outer div element with an ID like "hide-code1". For this to work, both
an ID string and a true must be passed in. The last parameter controls whether
an h2 should be added to the output. Example:《/p》
《pre》
#chanwDisplayHideVelocityCode( $chanwGetScriptFormatCode )
#chanwDisplayHideVelocityCode( $chanwGetScriptFormatCode "hide-code1" true )
《/pre》
《/documentation》
《macro id=“chanwDisplayHideVelocityCode”》
doc*###
#macro( chanwDisplayHideVelocityCode $chanwDisplayHideVelocityCodeCode $chanwDisplayHideVelocityCodeId $chanwDisplayHideVelocityCodeCreateIdDiv $chanwDisplayHideVelocityCodeOutputH2 )
#**### a jdom.Element object
#**##if( $chanwDisplayHideVelocityCodeCode.Class.Name == $ORG_JDOM_ELEMENT_CLASS_NAME )
#*    *##set( $chanwCode = $_SerializerTool.serialize( $chanwDisplayHideVelocityCodeCode, true ) )
#**### plain code
#**##else
#*    *##set( $chanwCode = $_EscapeTool.xml( $chanwDisplayHideVelocityCodeCode ).trim().replaceAll( "-aa-", "&amp;&amp;" ) )
#**##end
##
#**##if( !$chanwDisplayHideVelocityCodeCreateIdDiv )
#**#$S_H2$SOURCE_CODE$E_H2 $S_PRE$chanwCode$E_PRE
#**##else
#*    *##set( $chanwStartDiv = '<div id="' + $chanwDisplayHideVelocityCodeId + '">' )
##
#*    *### no pre for documentation
#*    *##if( $chanwDisplayHideVelocityCodeCode.Class.Name == $ORG_JDOM_ELEMENT_CLASS_NAME )
#*        *#$chanwStartDiv$chanwCode$E_DIV
#*    *### use pre for code
#*    *##else
#*        *##if( $chanwDisplayHideVelocityCodeOutputH2 && ( $chanwDisplayHideVelocityCodeOutputH2 == true || $chanwDisplayHideVelocityCodeOutputH2 == "true" ) )
#*            *#$chanwStartDiv$S_H2$SOURCE_CODE$E_H2$S_PRE$chanwCode$E_PRE$E_DIV
#*        *##else
#*            *#$chanwStartDiv$S_PRE$chanwCode$E_PRE$E_DIV
#*        *##end
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwDisplayMacroCode( $format_name $folder_path $site_name $macro_name )《/code》
《p》Displays the code of the macro bearing the ID. Example:《/p》
《pre》
#chanwDisplayMacroCode( "chanw-display-velocity-code" "formats/library/velocity"
    "_common_assets" "chanwDisplayMacroCode" )
《/pre》
《/documentation》
《macro id=“chanwDisplayMacroCode”》
doc*###
#macro( chanwDisplayMacroCode $chanwDisplayMacroCodeFormatName $chanwDisplayMacroCodeFolderPath $chanwDisplayMacroCodeSiteName $chanwDisplayMacroCodeMacroName )
#**##chanwGetMacroCode( $chanwDisplayMacroCodeFormatName $chanwDisplayMacroCodeFolderPath $chanwDisplayMacroCodeSiteName $chanwDisplayMacroCodeMacroName )
##
#**##if( $chanwGetMacroCode != "" )
#*    *#$S_PRE$_EscapeTool.xml( $chanwGetMacroCode ).replaceAll( $chanwStartDoc, '' ).replaceAll( $chanwEndDoc, '' ).trim()$E_PRE
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwDisplayMacroDocumentation( $format_name $folder_path $site_name $macro_name )《/code》
《p》Displays the documentation of the macro bearing the ID. Example:《/p》
《pre》
#chanwDisplayMacroDocumentation( "chanw-display-velocity-code" "formats/library/velocity"
    "_common_assets" "chanwDisplayMacroCode" )
《/pre》
《/documentation》
《macro id=“chanwDisplayMacroDocumentation”》
doc*###
#macro( chanwDisplayMacroDocumentation $chanwDisplayMacroDocumentationFormatName $chanwDisplayMacroDocumentationFolderPath $chanwDisplayMacroDocumentationSiteName $chanwDisplayMacroDocumentationMacroName )
#**##chanwGetMacroDocumentation( $chanwDisplayMacroDocumentationFormatName $chanwDisplayMacroDocumentationFolderPath $chanwDisplayMacroDocumentationSiteName $chanwDisplayMacroDocumentationMacroName )
##
#**##if( $chanwGetMacroDocumentation != "" )
#*    *#$_SerializerTool.serialize( $chanwGetMacroDocumentation, true )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwDisplayScriptBlockCode( $block_path $site_name $id )《/code》
《p》Wraps the code of an XML block in a pre element. Since the
《code》locateBlock《/code》 method is called, there is no need to split the
path of the block into two (the parent folder path and the name of the block).
This macro invokes 《code》#chanwDisplayHideVelocityCode《/code》. Example:《/p》
《pre》

《/pre》
《/documentation》
《macro id=“chanwDisplayScriptBlockCode”》
doc*###
#macro( chanwDisplayScriptBlockCode $chanwDisplayScriptBlockCodeBlockPath $chanwDisplayScriptBlockCodeSiteName $chanwDisplayScriptBlockCodeId )
#**##set( $code = $_.locateBlock( $chanwDisplayScriptBlockCodeBlockPath, $chanwDisplayScriptBlockCodeSiteName ).XML )
#**##chanwDisplayHideVelocityCode( $code )
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetDocumentationElements( $root )《/code》
《p》Gets all 《code》documentation《/code》 descendants of the root element.
The elements are stored in a map named
《code》$chanwDocumentationMacroNameMap《/code》, with macro names as keys.
Example:《/p》
《pre》

《/pre》
《/documentation》
《macro id=“chanwGetDocumentationElements”》
doc*###
#macro( chanwGetDocumentationElements $chanwGetDocumentationElementsRoot )
#**##if( $chanwGetDocumentationElementsRoot.Class.Name == $ORG_JDOM_ELEMENT_CLASS_NAME )
#*    *### get all the parts
#*    *##set( $chanwTopDocumentationElement    = $_XPathTool.selectSingleNode( $chanwGetDocumentationElementsRoot, "//documentation[@id='top']" ) )
#*    *##set( $chanwBottomDocumentationElement = $_XPathTool.selectSingleNode( $chanwGetDocumentationElementsRoot, "//documentation[@id='bottom']" ) )
#*    *##set( $chanwGetDocumentationElements   = $_XPathTool.selectNodes( $chanwGetDocumentationElementsRoot, "//documentation[not(@id='top') and not(@id='bottom')]" ) )
#*    *##set( $chanwMacros                     = $_XPathTool.selectNodes( $chanwGetDocumentationElementsRoot, "//macro" ) )
##
#*    *##foreach( $macro in $chanwMacros )
#*        *##set( $chanwMacroName = $macro.getAttributeValue( "id" ) )
#*        *### get all preceding documentation elements
#*        *##set( $chanwPrecedingDocumentationNodes = $_XPathTool.selectNodes( $macro, "preceding-sibling::documentation" ) )
#*        *### the last element
#*        *##if( $chanwPrecedingDocumentationNodes.size() > 0 )
#*            *##set( $chanwLastNode = $chanwPrecedingDocumentationNodes.size() - 1 )
#*            *##set( $chanwMacroDocumentation = $chanwPrecedingDocumentationNodes[ $chanwLastNode ] )
#*            *##set( $void = $chanwMacroNameDocumentationMap.put( $chanwMacroName, $chanwMacroDocumentation ) )
#*            *##set( $void = $chanwDocumentationMacroNameMap.put( $chanwMacroDocumentation, $chanwMacroName ) )
#*        *##end
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetGlobalVariablesElement( $root )《/code》
《p》Gets the global-variables element. The result is stored in
《code》$chanwGetGlobalVariablesElement《/code》. Example:《/p》
《pre》
#chanwGetGlobalVariablesElement( $chanwGetScriptFormatRootElement )
《/pre》
《/documentation》
《macro id=“chanwGetGlobalVariablesElement”》
doc*###
#macro( chanwGetGlobalVariablesElement $chanwGetGlobalVariablesElementRoot )
    #set( $chanwGetGlobalVariablesElement = "" )
#**##if( $chanwGetGlobalVariablesElementRoot.Class.Name == $ORG_JDOM_ELEMENT_CLASS_NAME )
#*    *##set( $chanwGetGlobalVariablesElement = $_XPathTool.selectSingleNode( $chanwGetGlobalVariablesElementRoot, "//global-variables" ) )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetEvaluateElement( $root )《/code》
《p》Gets the evaluate element. The result is stored in
《code》$chanwGetEvaluateElement《/code》. Example:《/p》
《pre》
#chanwGetEvaluateElement( $chanwGetScriptFormatRootElement )
《/pre》
《/documentation》
《macro id=“chanwGetEvaluateElement”》
doc*###
#macro( chanwGetEvaluateElement $chanwGetEvaluateElementRoot )
#**##if( $chanwGetEvaluateElementRoot.Class.Name == $ORG_JDOM_ELEMENT_CLASS_NAME )
#*    *##set( $chanwGetEvaluateElement = $_XPathTool.selectSingleNode( $chanwGetEvaluateElementRoot, "//evaluate" ) )
#**##end
#end
##
#*doc
《/macro》
《documentation》
《code》#chanwGetMacroCode( $format_name $folder_path $site_name $macro_name )《/code》
《p》Returns the code of the macro bearing the ID. The result is stored in
《code》$chanwGetMacroCode《/code》. Example:《/p》
《pre》
## a String element
#chanwGetMacroCode( "chanw-display-velocity-code" "formats/library/velocity"
    "_common_assets" "chanwDisplayDocumentation" )
$chanwGetMacroCode.Class.Name
$_EscapeTool.xml( $chanwGetMacroCode )
《/pre》
《/documentation》
《macro id=“chanwGetMacroCode”》
doc*###
#macro( chanwGetMacroCode $chanwGetMacroCodeFormatName $chanwGetMacroCodeFolderPath $chanwGetMacroCodeSiteName $chanwGetMacroCodeMacroName )
#**### reinitialize all global variables
#**##chanwReinitializeDisplayVelocityCodeGlobalVariables
#**##chanwGetScriptFormatRootElement( $chanwGetMacroCodeFormatName $chanwGetMacroCodeFolderPath $chanwGetMacroCodeSiteName )
#**#
#**##set( $chanwGetMacroCode = $_XPathTool.selectSingleNode( $chanwGetScriptFormatRootElement, "//macro[@id='$chanwGetMacroCodeMacroName']" ).Value )
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetMacroDocumentation( $format_name $folder_path $site_name $macro_name )《/code》
《p》Returns the documentation element of the macro bearing the ID. The result
is stored in 《code》$chanwGetMacroDocumentation《/code》. Example:《/p》
《pre》
## an org.jdom.Element
#chanwGetMacroDocumentation( "chanw-display-velocity-code" "formats/library/velocity"
"_common_assets" "chanwDisplayDocumentation" )
$_SerializerTool.serialize( $chanwGetMacroDocumentation, true )
《/pre》
《/documentation》
《macro id=“chanwGetMacroDocumentation”》
doc*###
#macro( chanwGetMacroDocumentation $chanwGetMacroDocumentationFormatName $chanwGetMacroDocumentationFolderPath $chanwGetMacroDocumentationSiteName $chanwGetMacroDocumentationMacroName )
#**### reinitialize all global variables
#**##chanwReinitializeDisplayVelocityCodeGlobalVariables
#**##chanwGetScriptFormatRootElement( $chanwGetMacroDocumentationFormatName $chanwGetMacroDocumentationFolderPath $chanwGetMacroDocumentationSiteName )
#**##chanwGetDocumentationElements( $chanwGetScriptFormatRootElement )
##
#**##set( $chanwGetMacroDocumentation = $chanwMacroNameDocumentationMap.get( $chanwGetMacroDocumentationMacroName ) )
#end
#*doc
《/macro》
《documentation》
《code》chanwGetScriptFormatCode( $format_name $folder_path $site_name )《/code》
《p》Gets the Velocity code in a script format. The result
is stored in 《code》$chanwGetScriptFormatCode《/code》. Example:《/p》
《pre》
#chanwGetScriptFormatCode( $format_name $folder_path $site_name )
《/pre》
《/documentation》
《macro id=“chanwGetScriptFormatCode”》
doc*###
#macro( chanwGetScriptFormatCode $chanwGetScriptFormatCodeFormatName $chanwGetScriptFormatCodeFolderPath $chanwGetScriptFormatCodeSiteName )
    #set( $chanwFolderPath = $chanwGetScriptFormatCodeFolderPath )
    ## add slaches to folder path
    #if( !$chanwFolderPath.startsWith( "/" ) )
        #set( $chanwFolderPath = "/" + $chanwFolderPath )
    #end
    #if( !$chanwFolderPath.endsWith( "/" ) )
        #set( $chanwFolderPath = $chanwFolderPath + "/" )
    #end
##
	#set( $chanwLocatePath = $chanwFolderPath + $chanwGetScriptFormatCodeFormatName )
	#set( $chanwScriptFormat = "" )
	#set( $chanwScriptFormat = $_.locate( $chanwLocatePath, $CASCADE_API_FORMAT_TYPE, $chanwGetScriptFormatCodeSiteName ) )
##
    #if( $chanwScriptFormat != "" && $chanwScriptFormat.Class.Name == $COM_CASCADE_SCRIPT_FORMAT_CLASS_NAME )
#*    *##set( $chanwGetScriptFormatCode = $chanwScriptFormat.Script )
#**##else
#*    *##set( $chanwGetScriptFormatCode = "" )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetScriptFormatRootElement( $format_name $folder_path $site_name )《/code》
《p》Creates a 《code》org.jdom.Element《/code》 object, containing all the code
retrieved from a Velocity format. This macros invokes other macros to store
values in global variables. This is the starting point of this library format.
Example:《/p》
《pre》
#chanwGetScriptFormatRootElement(
    "chanw-display-velocity-code" "formats/library/velocity" "_common_assets" )
#if( $chanwGetDocumentationElements != "" )
    $chanwGetDocumentationElements.size()
#end
《/pre》
《/documentation》
《macro id=“chanwGetScriptFormatRootElement”》
doc*###
#macro( chanwGetScriptFormatRootElement $chanwGetScriptFormatRootElementFormatName $chanwGetScriptFormatRootElementFolderPath $chanwGetScriptFormatRootElementSiteName )
#**### get the format code
#**##chanwGetScriptFormatCode( $chanwGetScriptFormatRootElementFormatName $chanwGetScriptFormatRootElementFolderPath $chanwGetScriptFormatRootElementSiteName )
##
#**##if( $chanwGetScriptFormatCode != "" )
#*    *### turn code to a presentable xml string
#*    *##set( $chanwFormatCode = $_EscapeTool.xml( $chanwGetScriptFormatCode ) )
#*    *### remove all comment markers
#*    *##set( $chanwFormatXml = $chanwFormatCode.replaceAll( $chanwStartDoc, '' ).replaceAll( $chanwEndDoc, '' ).trim() )
#*    *### turn the four special characters back to XML characters
#*    *##set( $chanwFormatXml = $chanwFormatXml.replaceAll( $chanwStartChar, '<' ).replaceAll( $chanwEndChar, '>' ).replaceAll( $chanwStartQuote, '"' ).replaceAll( $chanwEndQuote, '"' ) )

#*    *### build root element
#*    *##chanwBuildXMLContentRoot( $chanwFormatXml )
##
#*    *##if( $chanwBuildXMLContentRoot && $chanwBuildXMLContentRoot.Class.Name == $ORG_JDOM_ELEMENT_CLASS_NAME )
#*        *### store the root element
#*        *##set( $chanwGetScriptFormatRootElement = $chanwBuildXMLContentRoot )
#*        *### store the documentation elements
#*        *##chanwGetDocumentationElements( $chanwGetScriptFormatRootElement )
#*        *### store code to be evaluated
#*        *##chanwGetEvaluateElement( $chanwGetScriptFormatRootElement )
#*        *### store the global-variables element
#*        *##chanwGetGlobalVariablesElement( $chanwGetScriptFormatRootElement )
#*    *##end
#**##else
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $CHANW_INITIALIZATION_FORMAT_NAME "No code available." "nv4noip4in;" )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetXMLBlockRootElement( $block_path $site_name )《/code》
《p》Gets the root element of the XML block. The result 
《code》org.jdom.Element《/code》 object is stored in
《code》$chanwGetXMLBlockRootElement《/code》. Example:《/p》
《pre》

《/pre》
《/documentation》
《macro id=“chanwGetXMLBlockRootElement”》
doc*###
#macro( chanwGetXMLBlockRootElement $chanwGetXMLBlockRootElementBlockPath $chanwGetXMLBlockRootElementSiteName )
#**##set( $chanwGetXMLBlockRootElement = "" )
#**##set( $chanwGetXMLBlockRootElement = $_.locateBlock( $chanwGetXMLBlockRootElementBlockPath, $chanwGetXMLBlockRootElementSiteName ).XMLAsXMLElement )
#end
#*doc
《/macro》
《documentation》
《code》#chanwReinitializeDisplayVelocityCodeGlobalVariables《/code》
《p》Reinitializes all global variables created in this format. Example:《/p》
《pre》
#chanwReinitializeDisplayVelocityCodeGlobalVariables
《/pre》
《/documentation》
《macro id=“chanwReinitializeDisplayVelocityCodeGlobalVariables”》
doc*###
#macro( chanwReinitializeDisplayVelocityCodeGlobalVariables )
#**###chanwReinitializeListOfVariables( $chanwDisplayVelocityCodeGlobalVariables )
#**##set( $chanwMacroNameDocumentationMap = {} )
#**##set( $chanwDocumentationMacroNameMap = {} )
#end
#*doc
《/macro》
《documentation id=“bottom”》
《/documentation》
《/code》
doc*###