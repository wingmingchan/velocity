#*
《code》
《copyright》
Author: Wing Ming Chan
Copyright (c) 2017 Wing Ming Chan <chanw@upstate.edu>
MIT Licensed
Modification history:
4/26/2017 Added #chanwGetUserCountAuditByActionDays.
4/18/2017 Changed Statement to readonly.
4/10/2017 Fixed bugs in #chanwGetHTMLTableFromResultSet.
          Added #chanwGetIdCachepathBySqlSiteName, #chanwGetIdCachepathWithSpaceBySiteName,
          #chanwGetIdCachepathWithUppercaseCharBySiteName.
4/6/2017 Simplified the code of #chanwGetNumberOfRecordsInResultSet.
         Added #chanwGetBlockOrphanIdCachepathBySiteName and
         #chanwGetFileOrphanIdCachepathBySiteName.
3/31/2017 Added #chanwGetRecordListFromResultSet, #chanwGetIndexableChildrenIdTypeMap,
          #chanwGetAssetInfoById, #chanwGetAssetById, #chanwGetSiteIdBySiteName,
          #chanwGetSiteNameBySiteId,
          and rewrote #chanwGetHTMLTableFromResultSet.
1/12/2017 Added more code for Oracle
1/9/2017 Added #chanwGetAllTableNames
《/copyright》
《documentation id=“top”》
《h2》Introduction《/h2》
《p》This format defines utility macros to access the Cascade database. At the end
of the format using this library format, put in 《code》#chanwCleanUp《/code》
as the last line of the code.《/p》
《p class=“text_red”》Important: Before importing the library, set the variable
《code》$chanwOracleDB《/code》 to 《code》false《/code》 if your database is
MySql:《/p》
《pre》#set( $chanwOracleDB = false )
#import( 'site://mycore/formats/library/velocity/chanw_library_import' )
《/pre》
《p》Also note that table names used in SQL statement are case-sensitive.
Use uppercase for Oracle, and lowercase for MySql.《/p》
《/documentation》
*#
#import( 'formats/library/velocity/chanw_global_macros' )
#import( 'formats/library/velocity/chanw_process_cascade_api' )
#*
《global-variables》
*#
#set( $chanwDatabaseUtilitiesGlobalVariables = [ 
    "chanwAssetCachePath",
    "chanwAssetSiteName",
    "chanwAssetType",
    "chanwColumnCount",
    "chanwConnection",
    "chanwContext",
    "chanwData",
    "chanwDataSource",
    "chanwDBMetadata",
    "chanwDBMetadataRS",
    "chanwFolderId",
    "chanwGetAllTableNames",
    "chanwGetAssetById",
    "chanwGetAssetInfoById",
    "chanwGetBlockOrphanIdCachepathBySiteName",
    "chanwGetDatabasStatement",
    "chanwGetFileOrphanIdCachepathBySiteName",
    "chanwGetHTMLTableFromSql",
    "chanwGetIdCachepathBySqlSiteName",
    "chanwGetIdCachepathWithSpaceBySiteName",
    "chanwGetIdCachepathWithUppercaseCharBySiteName",
    "chanwGetIndexableChildrenIdTypeMap",
    "chanwGetMetaDataRS",
    "chanwGetNumberOfRecordsInResultSet",
    "chanwGetNumberOfRecordsInTable",
    "chanwGetRecordListFromResultSet",
    "chanwGetResultSet",
    "chanwGetSiteIdBySiteName",
    "chanwGetSiteNameBySiteId",
    "chanwGetTableColumnNames",
    "chanwGetUserCountAuditByActionDays",
    "chanwLastRecordNumber",
    "chanwMetaData",
    "chanwNumberOfRecords",
    "chanwOracleDB",
    "chanwPastCalendarObject",
    "chanwPastDateObject",
    "chanwPastTimestamp",
    "chanwRecord",
    "chanwRecordList",
    "chanwResultSet",
    "chanwResultSetColumnCount",
    "chanwResultSetMetadata",
    "chanwSql",
    "sqlBlockOrphan",
    "sqlFileOrphan",
    "sqlCachepathWithSpace",
    "sqlCachepathWithUppercaseChar"
] )

#if( $_PropertyTool.isNull( $chanwOracleDB ) )
    #set( $chanwOracleDB = true )  ## defaulted to Oracle
#end

## SQL statements that work for both Oracle and MySql
#set( $sqlCachepathWithSpace = "select f.id, f.cachepath from cxml_foldercontent f " +
    "where f.cachepath like '% %' and f.iscurrentversion=1 and f.siteid=" +
    "(select s.id from cxml_site s where s.name='-siteName-')" )
#set( $sqlCachepathWithUppercaseChar = "select f.id, f.cachepath from cxml_foldercontent f " +
    "where not(lower(f.cachepath)=f.cachepath)  and f.siteid=" +
    "(select s.id from cxml_site s where s.name='-siteName-') " )
#set( $sqlBlockOrphan = "select f.* from (select id, cachepath from cxml_foldercontent " +
    "where siteid=(select id from cxml_site where name='-siteName-') and assettype='BLO' " +
    "and iscurrentversion=1) f left join cxml_structureddata sd on f.id = sd.blockid " +
    "where sd.blockid is null" )
#set( $sqlFileOrphan = "select id, cachepath from cxml_foldercontent where id in " +
    "(select fc1.id from ((select f.id from (select id, cachepath from cxml_foldercontent " +
    "where siteid=(select id from cxml_site where name='-siteName-') and assettype='FIL' " +
    "and iscurrentversion=1) f left join cxml_structureddata sd on f.id = sd.fileid " +
    "where sd.fileid is null ) fc1 join (select ff.id from (select id, cachepath from cxml_foldercontent " +
    "where siteid=(select id from cxml_site where name='-siteName-') and assettype='FIL' " +
    "and iscurrentversion=1) ff left join cxml_entityrelation er on ff.id = er.fileid " +
    "where er.fileid is null) fc2 on fc1.id=fc2.id))" )
#*
《/global-variables》
《documentation》
《code》#chanwCheckResultSet( $rs )《/code》
《p》Checks the variable 《code》$rs《/code》 to make sure that it is associated
with a valid result set. This macro is used by other macros.《/p》
《/documentation》
《macro id=“chanwCheckResultSet”》
*#
#macro( chanwCheckResultSet $rs )
    #chanwIsInstanceOf( $rs $JAVA_SQL_RESULT_SET_CLASS_NAME )
    
    #if( !$chanwIsInstanceOf )
    A ResultSet object is required.
    #stop
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwCheckStatement( $stmt )《/code》
《p》Checks the variable 《code》$stmt《/code》 to make sure that it is associated
with a valid statement. This macro is used by other macros.《/p》
《/documentation》
《macro id=“chanwCheckStatement”》
*#
#macro( chanwCheckStatement $stmt )
    #chanwIsInstanceOf( $stmt $JAVA_SQL_STATEMENT_CLASS_NAME )
    
    #if( !$chanwIsInstanceOf )
    A Statement object is required.
    #stop
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwCleanUp《/code》
《p》Cleans up the connection and statement objects. Note that once this macro
is invoked, the connection to the database is closed. To open the connecton again,
invoke 《code》#chanwGetDatabaseStatement《/code》 like this:《/p》
《pre》
#if( !$chanwConnection || $chanwConnection.isClosed() )
    #chanwGetDatabaseStatement
#end
《/pre》
《/documentation》
《macro id=“chanwCleanUp”》
*#
#macro( chanwCleanUp )
    #if( $chanwConnection )
        ##still open
        $chanwConnection.close()
    #end
    
    #if( $chanwGetDatabaseStatement )
        $chanwGetDatabaseStatement.close()
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwCreateDatabasePHPCode( $data )《/code》
《p》Creates PHP code containing a variable named 《code》$view《/code》,
pointing to an array of values drawn from the result set 《code》$data《/code》.
The first column of the view must be keys, and the view must have at least two
columns. The resulting code is stored in 《code》$globalStringBuffer《/code》.
To build a one-column list, use 《code》#chanwGetDatabaseList《/code》 instead.
Example:《/p》
《pre》
#import( 'site://_common_assets/formats/library/velocity/chanw_library_import' )

#set( $sql  = "SELECT userName, email, fullName FROM cxml_user" )
#chanwGetResultSet( $sql )
#chanwCreateDatabasePHPCode( $chanwGetResultSet )
$globalStringBuffer.toString()
《/pre》
《p》The PHP code generated will be something like:《/p》
《pre》
$view=array(
"wing"=&gt; array("wing@upstate.edu","Wing"),);
《/pre》
《p》To use the PHP code, publish the code in an XML page, then read the page
contents using the page URL. Once the code is read, replace all instances of
《code》&gt;《/code》 with 《code》<《/code》, and then evaluate the code.
The variable 《code》$view《/code》 will be associated with an associative array,
with usernames as keys and emails and full names as values.《/p》
《/documentation》
《macro id=“chanwCreateDatabasePHPCode”》
*#
#macro( chanwCreateDatabasePHPCode $data )
    #chanwCheckResultSet( $data )
    
    #if( $data.last() )
        #set( $chanwLastRecordNumber = $data.Row )
    #end

    #set( $chanwColumnCount = $data.getMetaData().getColumnCount() )
    $globalStringBuffer.setLength( 0 )
    #set( $void = $globalStringBuffer.append( '$view=array(' ) )
    
    #if( $chanwLastRecordNumber > 0 )
        #set( $void = $data.first() )
        ## the code is formatted in this way to avoid too much space within 
        ## foreach to avoid hanging
        ## the first record
        #foreach( $count in [ 1..$chanwColumnCount ] )##
            #if( $count == 1 )#set(
                $void = $globalStringBuffer.append( '"' ).append( $data.getString(##
                $count ) ).append( '"=>array(' ) )##
            #else#set( $void = $globalStringBuffer.append( '"' ).append(##
                $data.getString( $count ) ).append( '"' ) )##
                #if( $count == $chanwColumnCount )#set( $void = $globalStringBuffer.append( ")," ) )##
                #else#set( $void = $globalStringBuffer.append( "," ) )##
                #end##
            #end##
        #end##
        
        ## loop through all remaining records
#foreach( $i in [ 2..$chanwLastRecordNumber ] )##
#set( $void = $data.next() )##
#foreach( $j in [ 1..$chanwColumnCount ] )##
#if( $j == 1 )#set( $void = $globalStringBuffer.append( '"' ).append(##
$data.getString( $j ) ).append( '"=>array(' ) )##
#else##
#set( $void = $globalStringBuffer.append( '"' ).append(##
$data.getString( $j ) ).append( '"' ) )##
#if( $j == $chanwColumnCount )##
#set( $void = $globalStringBuffer.append( ")," ) )##
#else##
#set( $void = $globalStringBuffer.append( "," ) )##
#end##
#end##
#end##
#end##
#end##
    
    #set( $void = $globalStringBuffer.append( ");" ) )
#end
#*
《/macro》
《documentation》
《code》#chanwGetAllTableNames《/code》
《p》Creates a global variable named 《code》$chanwGetAllTableNames《/code》, which
stores all table names. Example:《/p》
《pre》
#chanwGetAllTableNames
$chanwGetAllTableNames
《/pre》
《/documentation》
《macro id=“chanwGetAllTableNames”》
*#
#macro( chanwGetAllTableNames )
    #if( !$chanwConnection || $chanwConnection.isClosed() )
        #chanwGetDatabaseStatement
    #end
    ## Oracle
    #if( $chanwOracleDB )
        #set( $chanwSql = "SELECT tablespace_name, table_name FROM all_tables " +
             "WHERE tablespace_name LIKE 'C%' " +
             "AND table_name like 'CXML_%' " +
             "ORDER BY table_name" )
        
        #chanwGetResultSet( $chanwSql )

        #if( $chanwGetResultSet.next() )
            #set( $chanwTableName = '"' + $chanwGetResultSet.getString( 2 ).toLowerCase() + '"' )
            #set( $void = $chanwGetAllTableNames.add( $chanwTableName ) )
        
            #foreach( $num in [ 1..500 ] )
                #if( $chanwGetResultSet.next() )
                    #set( $chanwTableName = '"' + $chanwGetResultSet.getString( 2 ).toLowerCase() + '"' )
                    #set( $void = $chanwGetAllTableNames.add( $chanwTableName ) )
                #else
                    #break
                #end
            #end
        #end
    ## MySQL
    #else
        #set( $chanwDBMetadata    = $chanwConnection.getMetaData() )
        #set( $chanwDBMetadataRS  = $chanwDBMetadata.getTables( null, null, "%", null ) )
        #set( $chanwGetAllTableNames = [] )

        #if( $chanwDBMetadataRS.next() )
            #if( $chanwDBMetadataRS.getString( 3 ).startsWith( "cxml_" ) )
                #set( $chanwTableName = '"' + $chanwDBMetadataRS.getString( 3 ).toLowerCase() + '"' )
                #set( $void = $chanwGetAllTableNames.add( $chanwTableName ) )
            #end
        
            #foreach( $num in [ 1..500 ] )
                #if( $chanwDBMetadataRS.next() )
                    #if( $chanwDBMetadataRS.getString( 3 ).startsWith( "cxml_" ) )
                        #set( $chanwTableName = '"' + $chanwDBMetadataRS.getString( 3 ).toLowerCase() + '"' )
                        #set( $void = $chanwGetAllTableNames.add( $chanwTableName ) )
                    #end
                #else
                    #break
                #end
            #end
        #end
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetAssetById( $id )《/code》
《p》Returns the asset (a Cascade API object) bearing that id. Example:《/p》
《pre》
#chanwGetAssetById( '8d3a06308b7f08ee37c14fb2544459d1' )
$chanwGetAssetById.Class.Name
《/pre》
《/documentation》
《macro id=“chanwGetAssetById”》
*#
#macro( chanwGetAssetById $id )
    #set( $chanwGetAssetById = "" )
    #chanwGetAssetInfoById( $id )
    
    #if( $chanwAssetCachePath != "" )
        #set( $chanwGetAssetById = $_.locate( $chanwAssetCachePath, $chanwAssetType, $chanwAssetSiteName ) )
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetAssetInfoById( $id )《/code》
《p》Returns 《code》$chanwGetAssetInfoById《/code》, a list of values related to
the asset bearing that id. Besides populating the list, three other variables
are also created: 《code》$chanwAssetCachePath《/code》 (storing the path),
《code》$chanwAssetType《/code》 (storing the type), and
《code》$chanwAssetSiteName《/code》 (storing the site name). Example:《/p》
《pre》
#chanwGetAssetInfoById( '8d3a06308b7f08ee37c14fb2544459d1' )
$chanwGetAssetInfoById
《/pre》
《/documentation》
《macro id=“chanwGetAssetInfoById”》
*#
#macro( chanwGetAssetInfoById $id )
    #set( $chanwGetAssetInfoById = "" )
    #set( $chanwAssetCachePath   = "" )
    #set( $chanwAssetType        = "" )
    #set( $chanwAssetSiteName    = "" )
    #set( $chanwGetAssetInfoById = [] )
    #set( $chanwSql = "select f.CACHEPATH, f.ASSETTYPE, s.name from cxml_foldercontent f, cxml_site s where f.id='$id' and f.SITEID=s.id" )
    #chanwGetResultSet( $chanwSql )
    #chanwGetRecordListFromResultSet( $chanwGetResultSet )

    #if( $chanwGetRecordListFromResultSet.size() > 1 )
        #set( $chanwRecord           = $chanwGetRecordListFromResultSet.get( 1 ) )
        #set( $chanwAssetCachePath   = $chanwRecord.get( 0 ) )
        #set( $void                  = $chanwGetAssetInfoById.add( $chanwAssetCachePath ) )
        #set( $chanwAssetType        = $CASCADE_TABLE_TYPE_ASSET_TYPE_MAP.get( $chanwRecord.get( 1 ) ) )
        #set( $void                  = $chanwGetAssetInfoById.add( $chanwAssetType ) )
        #set( $chanwAssetSiteName    = $chanwRecord.get( 2 ) )
        #set( $void                  = $chanwGetAssetInfoById.add( $chanwAssetSiteName ) )
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetBlockOrphanIdCachepathBySiteName( $siteName )《/code》
《p》Returns a list containing ids and paths of block orphans in the site.《/p》
《pre》
#set( $siteName = "cascade-admin" )
#chanwGetBlockOrphanIdCachepathBySiteName( $siteName )
$chanwGetBlockOrphanIdCachepathBySiteName
《/pre》
《/documentation》
《macro id=“chanwGetBlockOrphanIdCachepathBySiteName”》
*#
#macro( chanwGetBlockOrphanIdCachepathBySiteName $siteName )
    #chanwGetIdCachepathBySqlSiteName( $sqlBlockOrphan $siteName )
    #set( $chanwGetBlockOrphanIdCachepathBySiteName = $chanwGetIdCachepathBySqlSiteName )
#end
#*
《/macro》
《documentation》
《code》#chanwGetDatabaseList( $listName $sql )《/code》
《p》Creates a global variable out of the name 《code》$listName《/code》, and associates
the global variable with a list of values drawn from the database. The SQL string
associated with 《code》$sql《/code》 should be an SQL statement selecting a single value
from a table. Example:《/p》
《pre》
#chanwGetDatabaseList( "upstateSiteName" "select name from cxml_site" )
《/pre》
《/documentation》
《macro id=“chanwGetDatabaseList”》
*#
#macro( chanwGetDatabaseList $listName $sql )
    #chanwCheckString( $listName "A name for a global variable is required" )
    #chanwGetResultSet( $sql )
    #set( $chanwData = $chanwGetResultSet )
    #set( $chanwStmt = '#set($' + $listName + '=[])' )
    #evaluate( $chanwStmt )

    #if( $chanwData.next() )
        ## the first record
        #set( $void = $chanwData.first() )
        #set( $chanwStmt = '#set($void=$' + $listName +
            '.add($chanwData.getString( 1 ) ) )' )
        #evaluate( $chanwStmt )
    
        ## loop through all other records
        #foreach( $num in [ 1..$INTEGER_MAX_VALUE ] )
            #if( $chanwData.next() )
                #set( $chanwStmt = '#set($void=$' + $listName +
                    '.add( $chanwData.getString( 1 ) ) )' )
                #evaluate( $chanwStmt )
            #else
                #break
            #end
        #end
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetDatabaseStatement《/code》
《p》Creates a 《code》DatabaseMetaData《/code》 object named 《code》$chanwMetaData《/code》
and a 《code》Statement《/code》 object named 《code》$chanwGetDatabaseStatement《/code》
associated with the Cascade database. This macro is used by other macros.《/p》
《/documentation》
《macro id=“chanwGetDatabaseStatement”》
*#
#macro( chanwGetDatabaseStatement )
    #set( $chanwGetDatabasStatement = "" )
    #chanwGetObjectByClassName( "javax.naming.InitialContext" )
    #set( $chanwContext    = $chanwGetObjectByClassName )
    #set( $chanwDataSource = $chanwContext.lookup( "java:comp/env" ).lookup(
        "jdbc/CascadeDS" ) )
    #set( $chanwConnection = $chanwDataSource.Connection )
    $chanwConnection.setReadOnly( true )
    #set( $chanwMetaData   = $chanwConnection.MetaData )
    #set( $chanwGetDatabaseStatement = $chanwConnection.createStatement( 
        $_FieldTool.in( "java.sql.ResultSet" ).TYPE_SCROLL_INSENSITIVE, 
        $_FieldTool.in( "java.sql.ResultSet" ).CONCUR_READ_ONLY ) )
#end
#*
《/macro》
《documentation》
《code》#chanwGetFileOrphanIdCachepathBySiteName( $siteName )《/code》
《p》Returns a list containing ids and paths of file orphans in the site.《/p》
《pre》
#set( $siteName = "cascade-admin" )
#chanwGetFileOrphanIdCachepathBySiteName( $siteName )
$chanwGetFileOrphanIdCachepathBySiteName
《/pre》
《/documentation》
《macro id=“chanwGetFileOrphanIdCachepathBySiteName”》
*#
#macro( chanwGetFileOrphanIdCachepathBySiteName $siteName )
    ##set( $chanwSql = $sqlFileOrphan.replaceAll( '-siteName-', $siteName ) )
    ##chanwGetResultSet( $chanwSql )
    ##chanwGetRecordListFromResultSet( $chanwGetResultSet false )
    #chanwGetIdCachepathBySqlSiteName( $sqlFileOrphan $siteName )
    #set( $chanwGetFileOrphanIdCachepathBySiteName = $chanwGetRecordListFromResultSet )
#end
#*
《/macro》
《documentation》
《code》#chanwGetHTMLTableFromResultSet( $rs )《/code》
《p》Creates an XHTML table out of the result set. The resulting table is stored
in 《code》$globalStringBuffer《/code》. This macro is used by
《code》#chanwGetHTMLTableFromSql《/code》.《/p》
《pre》
#chanwGetResultSet( "SELECT count(*) Count FROM CXML_ASSETFACTORY" )
#chanwGetHTMLTableFromResultSet( $chanwGetResultSet )
$globalStringBuffer.toString()
《/pre》
《/documentation》
《macro id=“chanwGetHTMLTableFromResultSet”》
*#
#macro( chanwGetHTMLTableFromResultSet $rs )
    #chanwGetRecordListFromResultSet( $rs )
    $globalStringBuffer.setLength( 0 )
    
    #if( $chanwGetRecordListFromResultSet.size() == 0 )
        Empty result set
    #else
        #set( $chanwRecordListFromResultSetLastIndex = 
            $chanwGetRecordListFromResultSet.size() - 1 )
	    #set( $chanwResultSetMetadataList = $chanwGetRecordListFromResultSet.get( 0 ) )
	    
        #set( $void = $globalStringBuffer.append(
            "<table class='tcellspacing1 tcellpadding5' summary='Table'>" ) )
        #set( $void = $globalStringBuffer.append(
            "<tr class='bg1 text_white'>" ) )

        #set( $chanwLastColumnIndex = $chanwResultSetColumnCount - 1 )

        #foreach( $col in [ 0..$chanwLastColumnIndex ] )
            #set( $void = $globalStringBuffer.append( "<th>" ) )
            #set( $void = $globalStringBuffer.append(
                $chanwResultSetMetadataList.get( $col ) ) )
            #set( $void = $globalStringBuffer.append( "</th>" ) )
        #end

        #set( $void = $globalStringBuffer.append( "</tr>" ) )

        #foreach( $counter in [ 0..$chanwRecordListFromResultSetLastIndex ] )
            #set( $chanwRecordList = $chanwGetRecordListFromResultSet.get( $counter ) )
        
            #if( $counter % 2 == 0 )
                #set( $void = $globalStringBuffer.append( "<tr>" ) )
            #else
                #set( $void = $globalStringBuffer.append(
                    "<tr class='tablerow1'>" ) )
            #end
                
            #foreach( $col in [ 0..$chanwLastColumnIndex ] )
                #set( $void = $globalStringBuffer.append( "<td>" ) )
                #set( $void = $globalStringBuffer.append( $chanwRecordList.get( $col ) ) )
                #set( $void = $globalStringBuffer.append( "</td>" ) )
            #end
                
            #set( $void = $globalStringBuffer.append( "</tr>" ) )
        #end

        #set( $void = $globalStringBuffer.append( "</table>" ) )
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetHTMLTableFromSql( $sql )《/code》
《p》Creates an XHTML table out of the result set associated with the SQL statement.
The resulting table is stored in 《code》$chanwGetHTMLTableFromSql《/code》. Example:《/p》
《pre》
#set( $sql = "SELECT tablespace_name, table_name FROM all_tables " +
             "WHERE tablespace_name LIKE 'C%' " +
             "AND table_name like 'CXML_%' " +
             "ORDER BY table_name" )
#chanwGetHTMLTableFromSql( $sql )
$chanwGetHTMLTableFromSql
《/pre》
《/documentation》
《macro id=“chanwGetHTMLTableFromSql”》
*#
#macro( chanwGetHTMLTableFromSql $sql )
    #if( !$chanwGetDatabasStatement )
        #chanwGetDatabaseStatement()
        #chanwCheckStatement( $chanwGetDatabaseStatement )
    #end
    
    #chanwCheckString( $sql "An SQL string is required." )
    #chanwGetResultSet( $sql )
    
    #if( $chanwGetResultSet != "" )
        #chanwGetHTMLTableFromResultSet( $chanwGetResultSet )
    #end
    #set( $chanwGetHTMLTableFromSql = $globalStringBuffer.toString() )
#end
#*
《/macro》
《documentation》
《code》#chanwGetIdCachepathBySqlSiteName( $sql $siteName )《/code》
《p》Returns a list of id strings and cache paths of assets using the supplied
SQL and site name. This macro is used by other marcros. Example:《/p》
《pre》
#chanwGetIdCachepathBySqlSiteName( $sqlCachepathWithSpace $siteName )
《/pre》
《/documentation》
《macro id=“chanwGetIdCachepathBySqlSiteName”》
*#
#macro( chanwGetIdCachepathBySqlSiteName $sql $siteName )
    #set( $chanwGetIdCachepathBySqlSiteName = "" )
    #set( $chanwSql = $sql.replaceAll( '-siteName-', $siteName ) )
    #chanwGetResultSet( $chanwSql )
    #chanwGetRecordListFromResultSet( $chanwGetResultSet false )
    #set( $chanwGetIdCachepathBySqlSiteName = $chanwGetRecordListFromResultSet )
#end
#*
《/macro》
《documentation》
《code》#chanwGetIdCachepathWithSpaceBySiteName( $siteName )《/code》
《p》Returns a list of id strings and cache paths of assets whose system names
contain space characters. Example:《/p》
《pre》
#chanwGetIdCachepathWithSpaceBySiteName( "cascade-admin" )
$chanwGetIdCachepathWithSpaceBySiteName
《/pre》
《/documentation》
《macro id=“chanwGetIdCachepathWithSpaceBySiteName”》
*#
#macro( chanwGetIdCachepathWithSpaceBySiteName $siteName )
    #chanwGetIdCachepathBySqlSiteName( $sqlCachepathWithSpace $siteName )
    #set( $chanwGetIdCachepathWithSpaceBySiteName = $chanwGetIdCachepathBySqlSiteName )
#end
#*
《/macro》
《documentation》
《code》#chanwGetIdCachepathWithUppercaseCharBySiteName( $siteName )《/code》
《p》Returns a list of id strings and cache paths of assets whose system names
contain uppercase characters. Example:《/p》
《pre》
#chanwGetIdCachepathWithUppercaseCharBySiteName( "cascade-admin" )
$chanwGetIdCachepathWithUppercaseCharBySiteName
《/pre》
《/documentation》
《macro id=“chanwGetIdCachepathWithUppercaseCharBySiteName”》
*#
#macro( chanwGetIdCachepathWithUppercaseCharBySiteName $siteName )
    #chanwGetIdCachepathBySqlSiteName( $sqlCachepathWithUppercaseChar $siteName )
    #set( $chanwGetIdCachepathWithUppercaseCharBySiteName = $chanwGetIdCachepathBySqlSiteName )
#end
#*
《/macro》
《documentation》
《code》#chanwGetIndexableChildrenIdTypeMap( $folder )《/code》
《p》Returns a map, containing information of indexable children of a folder.
The folder must be a Cascade API object. The keys of the map are id strings of
these children, and the values are the types of the children.
Example:《/p》
《pre》
#set( $folder = $currentPage.ParentFolder )
#chanwGetIndexableChildrenIdTypeMap( $folder )
$chanwGetIndexableChildrenIdTypeMap
《/pre》
《/documentation》
《macro id=“chanwGetIndexableChildrenIdTypeMap”》
*#
#macro( chanwGetIndexableChildrenIdTypeMap $folder )
    #chanwGetAssetId( $folder )
    #set( $chanwFolderId = $chanwGetAssetId )
    #set( $chanwSql = 
        "select id, assettype from cxml_foldercontent where parentfolderid='$chanwGetAssetId' " +
        "and shouldbeindexed=1 and iscurrentversion=1" )
    #chanwGetResultSet( $chanwSql )
    
    #set( $chanwGetIndexableChildrenIdTypeMap = {} )

    #if( $chanwGetResultSet.next() )
        $chanwGetResultSet.beforeFirst()
        
        #foreach( $count in [ 1..$INTEGER_MAX_VALUE ] )
            #if( $chanwGetResultSet.next() )
                #set( $dummy = $chanwGetIndexableChildrenIdTypeMap.put(
                    $chanwGetResultSet.getString( 1 ), $chanwGetResultSet.getString( 2 ) ) )
            #else
                #break
            #end
        #end
        ## move cursor back to the front
        $chanwGetResultSet.beforeFirst()
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetMetaDataRS( $table )《/code》
《p》Creates a 《code》ResultSet《/code》 object named 《code》$chanwGetMetaDataRS《/code》
associated with the Cascade database. This macro is used by other macros.《/p》
《p》Using the 《code》$chanwGetMetaDataRS《/code》 object:《/p》
《pre》
#set( $metaData = $chanwGetMetaDataRS.MetaData )

#foreach( $col in [ 1..$columnCount ] )
    $metaData.getColumnLabel( $col )
#end
《/pre》
《p》This outputs:《/p》
《pre》
    TABLE_CAT
    TABLE_SCHEM
    TABLE_NAME
    COLUMN_NAME
    DATA_TYPE
    TYPE_NAME
    COLUMN_SIZE
    BUFFER_LENGTH
    DECIMAL_DIGITS
    NUM_PREC_RADIX
    NULLABLE
    REMARKS
    COLUMN_DEF
    SQL_DATA_TYPE
    SQL_DATETIME_SUB
    CHAR_OCTET_LENGTH
    ORDINAL_POSITION
    IS_NULLABLE
    SCOPE_CATALOG
    SCOPE_SCHEMA
    SCOPE_TABLE
    SOURCE_DATA_TYPE
    IS_AUTOINCREMENT
《/pre》
《p》These column labels can be used to retrieve values from 《code》$chanwGetMetaDataRS《/code》.
See 《code》#chanwGetTableColumnNames《/code》 for example.《/p》
《/documentation》
《macro id=“chanwGetMetaDataRS”》
*#
#macro( chanwGetMetaDataRS $table )
    #if( !$chanwMetaData )
        Invoke chanwGetDatabaseStatement first.
        #stop
    #end
    
    #set( $chanwGetMetaDataRS = $chanwMetaData.getColumns( null, null, $table, "%" ) )
#end
#*
《/macro》
《documentation》
《code》#chanwGetNumberOfRecordsInResultSet( $rs )《/code》
《p》Returns the number of records in the result set. The returned value is stored in 
the global variable 《code》$chanwGetNumberOfRecordsInResultSet《/code》. Example:《/p》
《pre》
#set( $sql  = "SELECT userName, email, fullName FROM cxml_user" )
#chanwGetResultSet( $sql )
#chanwGetNumberOfRecordsInResultSet( $chanwGetResultSet )
$chanwGetNumberOfRecordsInResultSet
《/pre》
《/documentation》
《macro id=“chanwGetNumberOfRecordsInResultSet”》
*#
#macro( chanwGetNumberOfRecordsInResultSet $rs )
    #chanwCheckResultSet( $rs )
    #set( $chanwGetNumberOfRecordsInResultSet = 0 )

    #if( $rs.next() )
        #set( $void = $rs.last() )
        #set( $chanwGetNumberOfRecordsInResultSet = $rs.getRow() )
        ## move cursor back to the front
        $rs.beforeFirst()
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetNumberOfRecordsInTable( $table )《/code》
《p》Returns the number of records in the table. The returned value is stored in 
the global variable 《code》$chanwGetNumberOfRecordsInTable《/code》. Example:《/p》
《pre》
#chanwGetNumberOfRecordsInTable( "cxml_aclentry" )
$chanwGetNumberOfRecordsInTable
《/pre》
《/documentation》
《macro id=“chanwGetNumberOfRecordsInTable”》
*#
#macro( chanwGetNumberOfRecordsInTable $table )
    #if( !$chanwGetDatabasStatement )
        #chanwGetDatabaseStatement()
        #chanwCheckStatement( $chanwGetDatabaseStatement )
    #end
    
    #chanwCheckString( $table "A table name is required." )
    
    #set( $chanwSql       = "SELECT count(*) FROM $table " )
    #set( $chanwResultSet = $chanwGetDatabaseStatement.executeQuery( $chanwSql ) )

    #if( $chanwResultSet.next() )
        #set( $chanwGetNumberOfRecordsInTable = $globalApacheMathTool.toNumber(
            $chanwResultSet.getString( 1 ) ) )
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetRecordListFromResultSet( $rs )《/code》
《p》Returns a list of lists, containing values of the result set. The outer
list stores lists representing rows, and each inner list stores values of a row.
When a true is passed in as the second parameter, the first inner list stores
metadata (column names or aliases) of the result set. The second parameter is
defaulted to false. Example:《/p》
《pre》
#chanwGetResultSet( "SELECT count(*) Count FROM CXML_ASSETFACTORY" )
#chanwGetRecordListFromResultSet( $chanwGetResultSet )
$chanwGetRecordListFromResultSet
《/pre》
《/documentation》
《macro id=“chanwGetRecordListFromResultSet”》
*#
#macro( chanwGetRecordListFromResultSet $rs $withColNames )
    #chanwCheckResultSet( $rs )
    
    #if( !$_PropertyTool.isNull( $withColNames ) && $withColNames )
        #set( $chanwWithColNames = true ) 
    #else
        #set( $chanwWithColNames = false ) ## defaulted to false
    #end
    
    #set( $chanwResultSetMetadata    = $rs.MetaData )
    #set( $chanwResultSetColumnCount = $chanwResultSetMetadata.ColumnCount )
    #set( $chanwGetRecordListFromResultSet = [] )
    
    ## store metadata
    #set( $chanwRecordList = [] )
    
    #if( $chanwWithColNames )
        #foreach( $col in [ 1..$chanwResultSetColumnCount ] )
            #set( $void = $chanwRecordList.add(
                $chanwResultSetMetadata.getColumnName( $col ) ) )
        #end
        #set( $void = $chanwGetRecordListFromResultSet.add( $chanwRecordList ) )
    #end
    
    #set( $chanwNumberOfRecords = 0 )
    $rs.beforeFirst()
        
    #foreach( $counter in [ 1..$INTEGER_MAX_VALUE ] )
        #if( $rs.next() )
        	#set( $chanwRecordList = [] )
            #set( $chanwNumberOfRecords = $chanwNumberOfRecords + 1 )
                
            #foreach( $col in [ 1..$chanwResultSetColumnCount ] )
                #set( $void = $chanwRecordList.add(
                    $rs.getString( $col ) ) )
            #end
                
            #set( $void = $chanwGetRecordListFromResultSet.add( $chanwRecordList ) )
        #else
            #break
        #end
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetResultSet( $sql )《/code》
《p》Returns the result set associated with the SQL statement. The result set is stored in
《code》$chanwGetResultSet《/code》. Example:《/p》
《pre》
#chanwGetResultSet( "SELECT count(*) FROM CXML_ASSETFACTORY" )
《/pre》
《/documentation》
《macro id=“chanwGetResultSet”》
*#
#macro( chanwGetResultSet $sql )
    #if( !$chanwGetDatabasStatement )
        #chanwGetDatabaseStatement()
        #chanwCheckStatement( $chanwGetDatabaseStatement )
    #end
    
    #chanwCheckString( $sql "An SQL string is required." )
    
    #set( $chanwGetResultSet = "" )
    #set( $chanwGetResultSet = $chanwGetDatabaseStatement.executeQuery( $sql ) )
    
    #if( !$chanwGetResultSet )
        No result set returned
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetSiteIdBySiteName( $siteName )《/code》
《p》Returns the site id of the site so named.《/p》
《pre》
#chanwGetSiteIdBySiteName( "22q" )
$chanwGetSiteIdBySiteName
《/pre》
《/documentation》
《macro id=“chanwGetSiteIdBySiteName”》
*#
#macro( chanwGetSiteIdBySiteName $siteName )
    #set( $chanwGetSiteIdBySiteName = "" )
    #set( $chanwSql = "select id from cxml_site where name='$siteName'" )
    #chanwGetResultSet( $chanwSql )
    
    #if( $chanwGetResultSet.next() )
        #set( $chanwGetSiteIdBySiteName = $chanwGetResultSet.getString( 1 ) )
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetSiteNameBySiteId( $siteName )《/code》
《p》Returns the site id of the site so named.《/p》
《pre》
#chanwGetSiteNameBySiteId( "b4d831e88b7f085601ed95543b747ed6" )
$chanwGetSiteNameBySiteId
《/pre》
《/documentation》
《macro id=“chanwGetSiteNameBySiteId”》
*#
#macro( chanwGetSiteNameBySiteId $siteId )
    #set( $chanwGetSiteNameBySiteId = "" )
    #set( $chanwSql = "select name from cxml_site where id='$siteId'" )
    #chanwGetResultSet( $chanwSql )
    
    #if( $chanwGetResultSet.next() )
        #set( $chanwGetSiteNameBySiteId = $chanwGetResultSet.getString( 1 ) )
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetTableColumnNames( $table )《/code》
《p》Returns a list of column names of the table. Note that the table name must
in lowercase like "cxml_site" for MySql.《/p》
《pre》
#chanwGetTableColumnNames( "cxml_site" )
$chanwGetTableColumnNames
《/pre》
《/documentation》
《macro id=“chanwGetTableColumnNames”》
*#
#macro( chanwGetTableColumnNames $table )
    #chanwGetDatabaseStatement
    #chanwGetMetaDataRS( $table )
    #set( $chanwGetTableColumnNames = [] )

    ## Oracle
    #if( $chanwOracleDB )
        #set( $chanwSql = "select * from $table where 1 = 0" )
        #chanwGetResultSet( $chanwSql )
        #set( $chanwResultSetMetadata = $chanwGetResultSet.getMetaData() )
        #set( $chanwResultSetMetadataColumnCount = $chanwResultSetMetadata.getColumnCount() )
        
        #foreach( $num in [ 1..$chanwResultSetMetadataColumnCount ] )
            #set( $chanwColumnName = '"' + $chanwResultSetMetadata.getColumnLabel( $num ).toLowerCase() + '"' )
            #set( $void = $chanwGetTableColumnNames.add( $chanwColumnName ) )
        #end
    ## MySql
    #else
        #foreach( $row in [ 1..500 ] )
            #if( $chanwGetMetaDataRS.next() )
                #set( $chanwColumnName = '"' + $chanwGetMetaDataRS.getString( "COLUMN_NAME" ).toLowerCase() + '"' )
                #set( $void = $chanwGetTableColumnNames.add( $chanwColumnName ) )
            #else
                #break
            #end
        #end
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetUserCountAuditByActionDays( $action $days )《/code》
《p》Returns a list of usernames and counts from the audit table.
Acceptable actions are:《/p》
《pre》
activate_version
advance_workflow
assume_identity
copy
create
delete
edit
identity_assumed
identity_unassumed
login
login_failed
logout
move
publish
recycle
reference
start_workflow
startedit
unassume_identity
unpublish
《/pre》
《p》The 《pre》$days《/pre》 variable should store a negative integer.《/p》
《pre》
#chanwGetUserCountAuditByActionDays( "login_failed" -5 )
$chanwGetUserCountAuditByActionDays
《/pre》
《/documentation》
《macro id=“chanwGetUserCountAuditByActionDays”》
*#
#macro( chanwGetUserCountAuditByActionDays $action $days )
    #set( $chanwGetUserCountAuditByActionDays = [] )
    #set( $chanwPastCalendarObject = $chanwCalendarObject.clone() )
    $chanwPastCalendarObject.add( $chanwDayField, $days )
    #set( $chanwPastDateObject = $_DateTool.toDate( $chanwPastCalendarObject ) )
    #set( $chanwPastTimestamp = $chanwPastDateObject.getTime() )

    #set( $chanwSql = "select username, count(username) from cxml_audit " +
        "where action like '$action' and tstamp>$chanwPastTimestamp group by username" )
    #chanwGetResultSet( $chanwSql )
    #chanwGetRecordListFromResultSet( $chanwGetResultSet )
    #set( $chanwGetUserCountAuditByActionDays = $chanwGetRecordListFromResultSet )
#end
#*
《/macro》
《documentation id=“bottom”》
《/documentation》
《/code》
*#