#*doc
《code》
《copyright》
Authors: Wing Ming Chan
Copyright (c) 2017 Wing Ming Chan <chanw@upstate.edu>
MIT Licensed
Modification history:
8/31/2017 Rewrote chanwImportScript and fixed bugs in chanwLocateAsset.
8/29/2017 Added chanwConvertArrayListToArray.
8/25/2017 Added more code to chanwProcessDataDefinitionBlock to deal with legacy blocks.
8/24/2017 Added code in chanwProcessBlockChooser and chanwProcessDataDefinitionBlock to deal with Cascade API objects.
8/24/2017 Added #chanwInvokeMacroIfExists.
8/21/2017 Merged chanw_global_macros with this format.
8/7/2017 Started using macro names as namespace prefixes for local parameters.
7/19/2017 Renamed from chanw_object_creator. Added new global values and macros.
《/copyright》
《evaluate execute=“true”》
《div id=“hide-code1”》
《h2》Test Code and Results《/h2》
《pre》
=============================================================
${DOUBLE_HASH} code to be evaluated
#set( $code =
"${SINGLE_HASH}set( ${DOLLAR}myVar = 3 )
${SINGLE_HASH}macro( myMacro ${DOLLAR}var )
    $var
${SINGLE_HASH}end
${SINGLE_HASH}myMacro( ${DOLLAR}myVar )" )
${DOUBLE_HASH} display the code
#chanwDisplayEvaluateCode( $code false )
${DOUBLE_HASH} evaluate the code
#chanwDisplayEvaluateCode( $code true )
=============================================================
${SINGLE_HASH}chanwGetFolderContainedAssetName( ${DOLLAR}currentPage )
#chanwGetFolderContainedAssetName( $currentPage )
${DOLLAR}chanwGetFolderContainedAssetName: $chanwGetFolderContainedAssetName
=============================================================
${SINGLE_HASH}chanwGetConstructorByClassNameParamSize( 'org.jdom.Text' 1 )
#chanwGetConstructorByClassNameParamSize( 'org.jdom.Text' 1 )
${DOLLAR}chanwGetConstructorByClassNameParamSize.Class.Name: $chanwGetConstructorByClassNameParamSize.Class.Name
=============================================================
${SINGLE_HASH}chanwGetConstructorByClassNameParamTypeArray( 'java.lang.StringBuffer' [ 'int' ] )
#chanwGetConstructorByClassNameParamTypeArray( 'java.lang.StringBuffer' [ 'int' ] )
${DOLLAR}chanwGetConstructorByClassNameParamTypeArray.Class.Name: $chanwGetConstructorByClassNameParamTypeArray.Class.Name
=============================================================
${SINGLE_HASH}chanwGetConstantValueByClassNameConstantName( 'com.hannonhill.cascade.velocity.CascadeComparisonDateTool' 'MILLIS_PER_YEAR' )
#chanwGetConstantValueByClassNameConstantName( 'com.hannonhill.cascade.velocity.CascadeComparisonDateTool' 'MILLIS_PER_YEAR' )
${DOLLAR}chanwGetConstantValueByClassNameConstantName: $chanwGetConstantValueByClassNameConstantName
=============================================================
${SINGLE_HASH}chanwGetMethodByClassNameMethodNameParamTypes( "java.lang.Math" "abs" '$_FieldTool.in( "java.lang.Double" ).TYPE' )
#chanwGetMethodByClassNameMethodNameParamTypes( "java.lang.Math" "abs" '$_FieldTool.in( "java.lang.Double" ).TYPE' )
${DOLLAR}chanwGetMethodByClassNameMethodNameParamTypes.invoke( null, -2.5 ): $chanwGetMethodByClassNameMethodNameParamTypes.invoke( null, -2.5 )
=============================================================
${SINGLE_HASH}chanwGetObjectByClassName( "org.apache.commons.lang.BooleanUtils" )
#chanwGetObjectByClassName( "org.apache.commons.lang.BooleanUtils" )
${DOLLAR}chanwGetObjectByClassName.Class.Name: $chanwGetObjectByClassName.Class.Name
=============================================================
${SINGLE_HASH}chanwGetStaticMethodByClassNameMethodNameWithoutParams( "java.util.concurrent.ThreadLocalRandom"  "current" )
#chanwGetStaticMethodByClassNameMethodNameWithoutParams( "java.util.concurrent.ThreadLocalRandom"  "current" )
${DOLLAR}chanwGetStaticMethodByClassNameMethodNameWithoutParams.Class.Name: $chanwGetStaticMethodByClassNameMethodNameWithoutParams.Class.Name
=============================================================
${SINGLE_HASH}chanwIsInstanceOf( [] "java.util.concurrent.BlockingDeque" )
#chanwIsInstanceOf( [] "java.util.concurrent.BlockingDeque" )
${DOLLAR}chanwIsInstanceOf: $chanwIsInstanceOf
=============================================================
${SINGLE_HASH}chanwLocateAsset( "core/library/velocity/chanw" ${DOLLAR}chanw_framework_site_name "chanw_display_velocity_code" )
#chanwLocateAsset( "core/library/velocity/chanw" $chanw_framework_site_name "chanw_display_velocity_code" )
${DOLLAR}chanwLocateAsset.Class.Name: $chanwLocateAsset.Class.Name
=============================================================
${SINGLE_HASH}chanwLocateAssetWithFullPath( "core/library/velocity/chanw/chanw_initialization" ${DOLLAR}CASCADE_API_FORMAT_TYPE "_brisk" )
#chanwLocateAssetWithFullPath( "core/library/velocity/chanw/chanw_initialization" $CASCADE_API_FORMAT_TYPE "_brisk" )
${DOLLAR}chanwLocateAssetWithFullPath.Class.Name: $chanwLocateAssetWithFullPath.Class.Name
=============================================================
${SINGLE_HASH}chanwOutputErrorMsg( ${DOLLAR}CHANW_LIBRARY_FOLDER_PATH ${DOLLAR}chanw_framework_site_name ${DOLLAR}CHANW_INITIALIZATION_FORMAT_NAME "Should show a test string." "fri4;sglk4ikFIO;RK" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "Should show a test string." "fri4;sglk4ikFIO;RK" )
=============================================================
${SINGLE_HASH}chanwSetVariable( "myVar" "myValue" )
#chanwSetVariable( "myVar" "myValue" )## String value
${DOLLAR}myVar: $myVar
${SINGLE_HASH}chanwSetVariable( "myVar" 1 )
#chanwSetVariable( "myVar" 1 )## int value
${DOLLAR}myVar: $myVar
${SINGLE_HASH}chanwSetVariable( "locator" ${DOLLAR}_ )
#chanwSetVariable( "locator" $_ )## obj value
${DOLLAR}locator.Class.Name: $locator.Class.Name
${SINGLE_HASH}chanwSetVariable( "map" {} )
${SINGLE_HASH}chanwSetVariable( "map['state']" "NY" )
#chanwSetVariable( "map" {} )## obj value
#chanwSetVariable( "map['state']" "NY" )## a map as the variable
${DOLLAR}map: $map
=============================================================
${SINGLE_HASH}set( ${DOLLAR}xml = "<greetings>Hello, World!</greetings>" )
${SINGLE_HASH}chanwBuildXMLContentRoot( ${DOLLAR}xml )
#set( $xml = "《greetings》Hello, World!《/greetings》" )
#chanwBuildXMLContentRoot( $xml )
${DOLLAR}chanwBuildXMLContentRoot.Name: $chanwBuildXMLContentRoot.Name
${DOLLAR}chanwBuildXMLContentRoot.Value: $chanwBuildXMLContentRoot.Value
=============================================================
${SINGLE_HASH}set( ${DOLLAR}list = [] )
${SINGLE_HASH}set( ${DOLLAR}void = ${DOLLAR}list.add( "let's have " ) )
${SINGLE_HASH}chanwCallJavaMethod( 'list' 'add("fun")' )
#set( $list = [] )
#set( $void = $list.add( "let's have " ) )
#chanwCallJavaMethod( 'list' 'add("fun")' )
${DOLLAR}list: $list
=============================================================
${DOUBLE_HASH} Nothing to show here
${SINGLE_HASH}chanwCheckString( "hello" "Should not be here" )
#chanwCheckString( "hello" "Should not be here" )
=============================================================
${SINGLE_HASH}chanwConvertToPascalCase( "xml-group" "-" )
#chanwConvertToPascalCase( "xml-group" "-" )
${DOLLAR}chanwConvertToPascalCase: $chanwConvertToPascalCase
=============================================================
${SINGLE_HASH}if( ${DOLLAR}contentRoot )
${SINGLE_HASH}set( ${DOLLAR}f = ${DOLLAR}contentRoot.getChild( "system-folder" ) )
${SINGLE_HASH}chanwGetCascadeObjectFromElement( ${DOLLAR}f )
#if( $contentRoot )
#set( $f = $contentRoot.getChild( "system-folder" ) )
#chanwGetCascadeObjectFromElement( $f )
${DOLLAR}chanwGetCascadeObjectFromElement.Name:       $chanwGetCascadeObjectFromElement.Name
${DOLLAR}chanwGetCascadeObjectFromElement.Class.Name: $chanwGetCascadeObjectFromElement.Class.Name
#end
${SINGLE_HASH}end
=============================================================
${SINGLE_HASH}set( ${DOLLAR}myFile = "${SINGLE_HASH}chanwGetFilePath( 'images/computer-people-700x350.jpg' 'thomas-test' 'images/default.jpg' )" )
#set( $myFile = "#chanwGetFilePath( 'images/computer-people-700x350.jpg' 'thomas-test' 'images/default.jpg' )" )
${DOLLAR}myFile: $myFile
=============================================================
${SINGLE_HASH}set( ${DOLLAR}l = [ 1..10 ] )
${SINGLE_HASH}chanwGetListRandomized( ${DOLLAR}l )
#set( $l = [ 1..10 ] )
#chanwGetListRandomized( $l )
${DOLLAR}l:                      $l
${DOLLAR}chanwGetListRandomized: $chanwGetListRandomized
=============================================================
${SINGLE_HASH}set( ${DOLLAR}stateMap = { 'NY':'New York', 'MJ':'New Jersey' } )
${SINGLE_HASH}chanwGetMapKeyValueReversed( ${DOLLAR}stateMap )
#set( $stateMap = { 'NY':'New York', 'MJ':'New Jersey' } )
#chanwGetMapKeyValueReversed( $stateMap )
${DOLLAR}stateMap:                    $stateMap
${DOLLAR}chanwGetMapKeyValueReversed: $chanwGetMapKeyValueReversed
=============================================================
#set( $m = { 'folder':'system-folder' } )
#chanwGetNodeSets( $contentRoot $m )
#drulykgVarDump( $folder )
=============================================================
${SINGLE_HASH}set( ${DOLLAR}m = { 'folder':'system-folder' } )
${SINGLE_HASH}chanwGetNodeValues( ${DOLLAR}contentRoot ${DOLLAR}m )
#set( $m = { 'folder':'system-folder' } )
#chanwGetNodeValues( $contentRoot $m )
${SINGLE_HASH}drulykgVarDump( ${DOLLAR}folder ): #drulykgVarDump( $folder )$BR
=============================================================
${SINGLE_HASH}set( ${DOLLAR}strings = [ "one", "two", "three" ] )
${SINGLE_HASH}chanwGetParamListAsStrings( ${DOLLAR}strings )
#set( $strings = [ "one", "two", "three" ] )
#chanwGetParamListAsStrings( $strings )
${DOLLAR}chanwGetParamListAsStrings: $chanwGetParamListAsStrings
=============================================================
${SINGLE_HASH}set( ${DOLLAR}ints = [ 1, 2, 3, 4 ] )
${SINGLE_HASH}chanwGetParamListAsValues( ${DOLLAR}ints )
#set( $ints = [ 1, 2, 3, 4 ] )
#chanwGetParamListAsValues( $ints )
${DOLLAR}chanwGetParamListAsValues: $chanwGetParamListAsValues
=============================================================
${SINGLE_HASH}set( ${DOLLAR}int = 3 )
$DOUBLE_HASH a variable ${DOLLAR}myVar3 is created and assigned the value three
${SINGLE_HASH}chanwSetVariable( "myVar${DOLLAR}int" "three" )
${SINGLE_HASH}chanwReviveGlobalVariable( "myVar${DOLLAR}int" )
#set( $int = 3 )
#chanwSetVariable( "myVar$int" "three" )
#chanwReviveGlobalVariable( "myVar$int" )
${DOLLAR}chanwReviveGlobalVariable: $chanwReviveGlobalVariable
${DOLLAR}myVar3:                    $chanwReviveGlobalVariable
=============================================================
${SINGLE_HASH}chanwSetVariableToNonEmptyString( "var" [ " ", "", "content" ] )
#chanwSetVariableToNonEmptyString( "var" [ " ", "", "content" ] )
${DOLLAR}var: $var
=============================================================
#define( $myMacroExists )
    #macro( myMacro $var1 $var2 $var3 )
        #set( $str = $var1 + "-" + $var2 + "-" + $var3 )
        $str
    #end
#end
#set( $macroName = "myMacro" )
#set( $greetings = "Hello" )
#set( $fname     = "John" )
#set( $lname     = "Doe" )

##chanwInvokeMacroIfExists( "myMacro" [ "greetings", "fname", "lname" ] )
#set( $result = "#chanwInvokeMacroIfExists( ""myMacro"" [ ""greetings"", ""fname"", ""lname"" ] )" )
$result.trim()
=============================================================
#chanwGetConstructor( 'java.lang.StringBuffer' [ $_FieldTool.in( "java.lang.Integer" ).TYPE ] )
$chanwGetConstructor.Class.Name
=============================================================
#chanwGetMethod( 'java.lang.Math' 'abs' [ $_FieldTool.in( "java.lang.Double" ).TYPE ] )
$chanwGetMethod.Class.Name
=============================================================
《/pre》
《/div》
《/evaluate》
《documentation id=“top”》
《h2》Introduction《/h2》
《p》This format has no dependencies on other formats in the library.
It defines global values needed for initialization, global objects used by
the library, macros to retrieved constructors, and other supporting macros.《/p》
《/documentation》
《global-variables》
doc*###
#if( !$chanw_framework_site_name )
    #set( $chanw_framework_site_name = '_brisk' )
#end
#set( $CHANW_INITIALIZATION_FORMAT_NAME = "chanw_initialization" )
#set( $CHANW_LIBRARY_FOLDER_PATH        = "core/library/velocity/chanw" )
## number used in loops
#set( $INTEGER_MAX_VALUE = 50000 )
## special characters
#define( $chanwDOLLAR )$_EscapeTool.getD()#end
#define( $chanwDOUBLE_HASH )$_EscapeTool.getH()$_EscapeTool.getH()#end
#define( $chanwDOUBLE_QUOTE )$_EscapeTool.getQ()$_EscapeTool.getQ()#end
#define( $chanwNEWLINE )$_EscapeTool.n#end
#define( $chanwSINGLE_HASH )$_EscapeTool.getH()#end
#define( $chanwSINGLE_QUOTE )$_EscapeTool.getS()#end
#define( $DOLLAR )$_EscapeTool.getD()#end
#define( $DOUBLE_HASH )$_EscapeTool.getH()$_EscapeTool.getH()#end
#define( $DOUBLE_QUOTE )$_EscapeTool.getQ()#end
#define( $NEWLINE )$_EscapeTool.n#end
#define( $SINGLE_HASH )$_EscapeTool.getH()#end
#define( $SINGLE_QUOTE )$_EscapeTool.getS()#end
## HTML tags
#define( $BR )<br />#end
#define( $S_DIV )<div>#end
#define( $E_DIV )</div>#end
#define( $S_H1 )<h1>#end
#define( $E_H1 )</h1>#end
#define( $S_H2 )<h2>#end
#define( $E_H2 )</h2>#end
#define( $S_H3 )<h3>#end
#define( $E_H3 )</h3>#end
#define( $HR )<hr class="lightgray"/>#end
#define( $S_LI )<li>#end
#define( $E_LI )</li>#end
#define( $S_P )<p>#end
#define( $E_P )</p>#end
#define( $S_PRE )<pre>#end
#define( $E_PRE )</pre>#end
#define( $S_UL )<ul>#end
#define( $E_UL )</ul>#end
## java class names used for comparison
#set( $COM_CASCADE_DATA_BLOCK_API_CLASS_NAME         = "com.hannonhill.cascade.api.adapters.XHTMLDataDefinitionBlockAPIAdapter" )
#set( $COM_CASCADE_TEXT_BLOCK_API_CLASS_NAME         = "com.hannonhill.cascade.api.adapters.TextBlockAPIAdapter" )
#set( $COM_CASCADE_FOLDER_CONTAINED_ASSET_CLASS_NAME = "com.hannonhill.cascade.api.adapters.FolderContainedAssetAPIAdapter" )
#set( $COM_CASCADE_METADATA_CLASS_NAME               = "com.hannonhill.cascade.api.adapters.MetadataAPIAdapter" )
#set( $COM_CASCADE_PAGE_API_CLASS_NAME               = "com.hannonhill.cascade.api.adapters.PageAPIAdapter" )
#set( $COM_CASCADE_SCRIPT_FORMAT_CLASS_NAME          = "com.hannonhill.cascade.api.adapters.ScriptFormatAPIAdapter" )
#set( $COM_CASCADE_STRUCTURED_DATA_NODE_CLASS_NAME   = "com.hannonhill.cascade.api.adapters.StructuredDataNodeAPIAdapter" )
#set( $COM_CASCADE_STRUCTURED_DATA_LIST_CLASS_NAME   = "[Lcom.hannonhill.cascade.api.asset.common.StructuredDataNode;" )
#set( $JAVA_LANG_INTEGER_CLASS_NAME                  = 'java.lang.Integer' )
#set( $JAVA_LANG_BOOLEAN_CLASS_NAME                  = 'java.lang.Boolean' )
#set( $JAVA_LANG_STRING_CLASS_NAME                   = 'java.lang.String' )
#set( $JAVA_LANG_CLASS_CLASS_NAME                    = 'java.lang.Class' )
#set( $JAVA_SQL_STATEMENT_CLASS_NAME                 = 'java.sql.Statement' )
#set( $JAVA_SQL_RESULT_SET_CLASS_NAME                = 'java.sql.ResultSet' )
#set( $JAVA_TIME_LOCAL_DATE_CLASS_NAME               = 'java.time.LocalDate' )
#set( $JAVA_TIME_LOCAL_DATE_TIME_CLASS_NAME          = 'java.time.LocalDateTime' )
#set( $JAVA_UTIL_ARRAY_LIST_CLASS_NAME               = 'java.util.ArrayList' )
#set( $JAVA_UTIL_LINKEDHASHMAP_CLASS_NAME            = 'java.util.LinkedHashMap' )
#set( $JAVA_UTIL_HASHMAP_CLASS_NAME                  = 'java.util.HashMap' )
#set( $JAVA_UTIL_DATE_CLASS_NAME                     = 'java.util.Date' )
#set( $JAVA_UTIL_GREGORIAN_CALENDAR_CLASS_NAME       = 'java.util.GregorianCalendar' )
#set( $ORG_JDOM_DOCUMENT_CLASS_NAME                  = 'org.jdom.Document' )
#set( $ORG_JDOM_ELEMENT_CLASS_NAME                   = 'org.jdom.Element' )
## Cascade API types
#set( $CASCADE_API_BLOCK_TYPE     = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_BLOCK )
#set( $CASCADE_API_FILE_TYPE      = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_FILE )
#set( $CASCADE_API_FOLDER_TYPE    = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_FOLDER )
#set( $CASCADE_API_FORMAT_TYPE    = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_FORMAT )
#set( $CASCADE_API_LINKABLE_TYPE  = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_LINKABLE )
#set( $CASCADE_API_PAGE_TYPE      = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_PAGE )
#set( $CASCADE_API_REFERENCE_TYPE = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_REFERENCE )
#set( $CASCADE_API_SYMLINK_TYPE   = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_SYMLINK )
#set( $CASCADE_API_TEMPLATE_TYPE  = $_FieldTool.in( "com.hannonhill.cascade.model.dom.identifier.EntityTypes" ).TYPE_TEMPLATE )
#set( $CASCADE_TYPE_ELEMENT_MAP   = {
    'system-block'         : $CASCADE_API_BLOCK_TYPE,
    'system-index-block'   : $CASCADE_API_BLOCK_TYPE,
    'system-data-structure': $CASCADE_API_BLOCK_TYPE,
    'system-file'          : $CASCADE_API_FILE_TYPE,
    'system-folder'        : $CASCADE_API_FOLDER_TYPE,
    'system-page'          : $CASCADE_API_PAGE_TYPE,
    'system-symlink'       : $CASCADE_API_SYMLINK_TYPE
} )
## global utility objects
#set( $chanwTools = {
    'globalApacheBooleanUtils' :     'org.apache.commons.lang.BooleanUtils',
    'globalApacheClassUtils':        'org.apache.commons.lang.ClassUtils',
    'globalApacheClassTool' :        'org.apache.velocity.tools.generic.ClassTool',
    'globalApacheComparisonDateTool':'org.apache.velocity.tools.generic.ComparisonDateTool',
    'globalApacheConversionTool':    'org.apache.velocity.tools.generic.ConversionTool',
    'globalApacheLinkTool':          'org.apache.velocity.tools.generic.LinkTool',
    'globalApacheLoopTool':          'org.apache.velocity.tools.generic.LoopTool',
    'globalApacheMathTool':          'org.apache.velocity.tools.generic.MathTool',
    'globalApacheNumberTool':        'org.apache.velocity.tools.generic.NumberTool',
    'globalApacheNumberUtils':       'org.apache.commons.lang.math.NumberUtils',
    'globalApacheSortTool':          'org.apache.velocity.tools.generic.SortTool',
    'globalApacheStringUtils':       'org.apache.commons.lang.StringUtils',
    'globalApacheStringEscapeUtils': 'org.apache.commons.lang.StringEscapeUtils',
    'globalApacheWordUtils':         'org.apache.commons.lang.WordUtils',
    'globalSAXBuilder':              'org.jdom.input.SAXBuilder'
} )
##
#set( $chanwToolKeys = $chanwTools.keySet() )
##
## generate the global objects with default constructors
#foreach( $key in $chanwToolKeys )
#chanwGetObjectByClassName( $chanwTools[ $key ] )
#set( $chanwStmt = '#chanwSetVariable("' + $key + '" $chanwGetObjectByClassName)' )
#evaluate( $chanwStmt )
#end
##
## objects created with constructors with parameters
#chanwGetConstructorByClassNameParamSize( 'org.jdom.Text' 1 )
#set( $chanwConstructor = $chanwGetConstructorByClassNameParamSize )
#set( $globalJDOMText   = $chanwConstructor.newInstance( "" ) )
##
#chanwGetConstructorByClassNameParamTypeArray( 'java.lang.StringBuffer' [ 'int' ] )
#set( $chanwConstructor   = $chanwGetConstructorByClassNameParamTypeArray )
#set( $globalStringBuffer = $chanwConstructor.newInstance( 10000 ) )
##
#chanwGetConstructorByClassNameParamTypeArray( 'java.lang.StringBuilder' [ 'int' ] )
#set( $chanwConstructor    = $chanwGetConstructorByClassNameParamTypeArray )
#set( $globalStringBuilder = $chanwConstructor.newInstance( 10000 ) )
##
## objects created using static methods
#set( $chanwGlobalRandom = $_.Class.forName( "java.util.concurrent.ThreadLocalRandom" ).current() )
## cascade pseudo tags
#set( $S_SYSTEM_ASSET         = "[" + "system-asset]" )
#set( $E_SYSTEM_ASSET         = "[" + "/system-asset]" )
#set( $S_SYSTEM_ASSET_LOCAL   = "[" + "system-asset:local]" )
#set( $E_SYSTEM_ASSET_LOCAL   = "[" + "/system-asset:local]" )
#set( $S_SYSTEM_VIEW_INTERNAL = "[" + "system-view:internal]" )
#set( $E_SYSTEM_VIEW_INTERNAL = "[" + "/system-view:internal]" )
#set( $S_SYSTEM_VIEW_EXTERNAL = "[" + "system-view:external]" )
#set( $E_SYSTEM_VIEW_EXTERNAL = "[" + "/system-view:external]" )
#set( $S_PHP_PASSTHROUGH      = "<!--#" + "passthrough<?php " )
#set( $E_PHP_PASSTHROUGH      = " ?>#" + "passthrough-->" )
#set( $S_PROTECT              = "<!--#" + "protect" )
#set( $E_PROTECT              = "#" + "protect-->" )
## Cascade API Asset
#set( $DataBlockPropertyMap = {
    "DataBlockCreatedBy":             "CreatedBy",
    "DataBlockCreatedOn":             "CreatedOn",
    "DataBlockDataDefinitionPath":    "DataDefinitionPath",
    "DataBlockFolderOrder":           "FolderOrder",
    "DataBlockId":                    "Identifier.Id",
    "DataBlockIdentifier":            "Identifier",
    "DataBlockLastModified":          "LastModified",
    "DataBlockLastModifiedBy":        "LastModifiedBy",
    "DataBlockMetadata":              "Metadata",
    "DataBlockName":                  "Name",
    "DataBlockParentFolder":          "ParentFolder",
    "DataBlockParentFolderIdentifier":"ParentFolderIdentifier",
    "DataBlockPath":                  "Path",
    "DataBlockSiteId":                "SiteId",
    "DataBlockSiteName":              "SiteName",
    "DataBlockSiteStructuredData":    "StructuredData",
    "DataBlockType":                  "Identifier.Type",
    "DataBlockXHTML":                 "XHTML",
    "DataBlockXHTMLAsXMLElement":     "XHTMLAsXMLElement"
} )
##
#set( $FeedBlockPropertyMap = {
    "FeedBlockCreatedBy":             "CreatedBy",
    "FeedBlockCreatedOn":             "CreatedOn",
    "FeedBlockFeed":                  "Feed",
    "FeedBlockFeedURL":               "FeedURL",
    "FeedBlockFolderOrder":           "FolderOrder",
    "FeedBlockId":                    "Identifier.Id",
    "FeedBlockIdentifier":            "Identifier",
    "FeedBlockLastModified":          "LastModified",
    "FeedBlockLastModifiedBy":        "LastModifiedBy",
    "FeedBlockMetadata":              "Metadata",
    "FeedBlockName":                  "Name",
    "FeedBlockParentFolder":          "ParentFolder",
    "FeedBlockParentFolderIdentifier":"ParentFolderIdentifier",
    "FeedBlockPath":                  "Path",
    "FeedBlockSiteId":                "SiteId",
    "FeedBlockSiteName":              "SiteName",
    "FeedBlockType":                  "Identifier.Type"
} )
## FileData, FileText are left out; large files can crash the system
#set( $FilePropertyMap = {
    "FileCreatedBy":             "CreatedBy",
    "FileCreatedOn":             "CreatedOn",
    "FileFileSize":              "FileSize",
    "FileFolderOrder":           "FolderOrder",
    "FileId":                    "Identifier.Id",
    "FileIdentifier":            "Identifier",
    "FileLastModified":          "LastModified",
    "FileLastModifiedBy":        "LastModifiedBy",
    "FileLastPublishedBy":       "LastPublishedBy",
    "FileLastPublishedOn":       "LastPublishedOn",
    "FileLlink":                 "Link",
    "FileMetadata":              "Metadata",
    "FileName":                  "Name",
    "FileParentFolder":          "ParentFolder",
    "FileParentFolderIdentifier":"ParentFolderIdentifier",
    "FilePath":                  "Path",
    "FileShouldBeIndexed":       "ShouldBeIndexed",
    "FileShouldBePublished":     "ShouldBePublished",
    "FileSiteId":                "SiteId",
    "FileSiteName":              "SiteName",
    "FileType":                  "Identifier.Type"
} )
##
#set( $FolderPropertyMap = {
    "FolderChildren":              "Children",
    "FolderChildrenIdentifiers":   "ChildrenIdentifiers",
    "FolderChildrenSize":          "Children.size()",
    "FolderCreatedBy":             "CreatedBy",
    "FolderCreatedOn":             "CreatedOn",
    "FolderFolderOrder":           "FolderOrder",
    "FolderId":                    "Identifier.Id",
    "FolderIdentifier":            "Identifier",
    "FolderisNoWorkflowRequired":  "isNoWorkflowRequired()",
    "FolderLastModified":          "LastModified",
    "FolderLastModifiedBy":        "LastModifiedBy",
    "FolderLink":                  "Link",
    "FolderMetadata":              "Metadata",
    "FolderName":                  "Name",
    "FolderNoWorkflowRequired":    "NoWorkflowRequired",
    "FolderParentFolder":          "ParentFolder",
    "FolderParentFolderIdentifier":"ParentFolderIdentifier",
    "FolderPath":                  "Path",
    "FolderSiteId":                "SiteId",
    "FolderSiteName":              "SiteName",
    "FolderType":                  "Identifier.Type"
} )
##
#set( $PagePropertyMap = {
    "PageCreatedBy":             "CreatedBy",
    "PageCreatedOn":             "CreatedOn",
    "PageDataDefinitionPath":    "DataDefinitionPath",
    "PageFolderOrder":           "FolderOrder",
    "PageId":                    "Identifier.Id",
    "PageIdentifier":            "Identifier",
    "PageLastModified":          "LastModified",
    "PageLastModifiedBy":        "LastModifiedBy",
    "PageLastPublishedBy":       "LastPublishedBy",
    "PageLastPublishedOn":       "LastPublishedOn",
    "PageLink":                  "Link",
    "PageMetadata":              "Metadata",
    "PageName":                  "Name",
    "PageParentFolder":          "ParentFolder",
    "PageParentFolderIdentifier":"ParentFolderIdentifier",
    "PagePath":                  "Path",
    "PageShouldBeIndexed":       "ShouldBeIndexed",
    "PageShouldBePublished":     "ShouldBePublished",
    "PageSiteId":                "SiteId",
    "PageSiteName":              "SiteName",
    "PageSiteStructuredData":    "StructuredData",
    "PageType":                  "Identifier.Type",
    "PageXHTML":                 "XHTML",
    "PageXHTMLAsXMLElement":     "XHTMLAsXMLElement"
} )
##
#set( $ScriptFormatPropertyMap = {
    "ScriptFormatCreatedBy":             "CreatedBy",
    "ScriptFormatCreatedOn":             "CreatedOn",
    "ScriptFormatFolderOrder":           "FolderOrder",
    "ScriptFormatId":                    "Identifier.Id",
    "ScriptFormatIdentifier":            "Identifier",
    "ScriptFormatLastModified":          "LastModified",
    "ScriptFormatLastModifiedBy":        "LastModifiedBy",
    "ScriptFormatName":                  "Name",
    "ScriptFormatParentFolder":          "ParentFolder",
    "ScriptFormatParentFolderIdentifier":"ParentFolderIdentifier",
    "ScriptFormatPath":                  "Path",
    "ScriptFormatScript":                "Script",
    "ScriptFormatSiteId":                "SiteId",
    "ScriptFormatSiteName":              "SiteName",
    "ScriptFormatType":                  "Identifier.Type"
} )
##
#set( $SymlinkPropertyMap = {
    "SymlinkCreatedBy":             "CreatedBy",
    "SymlinkCreatedOn":             "CreatedOn",
    "SymlinkFolderOrder":           "FolderOrder",
    "SymlinkId":                    "Identifier.Id",
    "SymlinkIdentifier":            "Identifier",
    "SymlinkLastModified":          "LastModified",
    "SymlinkLastModifiedBy":        "LastModifiedBy",
    "SymlinkLink":                  "Link",
    "SymlinkMetadata":              "Metadata",
    "SymlinkName":                  "Name",
    "SymlinkParentFolder":          "ParentFolder",
    "SymlinkParentFolderIdentifier":"ParentFolderIdentifier",
    "SymlinkPath":                  "Path",
    "SymlinkSiteId":                "SiteId",
    "SymlinkSiteName":              "SiteName",
    "SymlinkType":                  "Identifier.Type"
} )
##
#set( $TextBlockPropertyMap = {
    "TextBlockCreatedBy":             "CreatedBy",
    "TextBlockCreatedOn":             "CreatedOn",
    "TextBlockFolderOrder":           "FolderOrder",
    "TextBlockId":                    "Identifier.Id",
    "TextBlockIdentifier":            "Identifier",
    "TextBlockLastModified":          "LastModified",
    "TextBlockLastModifiedBy":        "LastModifiedBy",
    "TextBlockMetadata":              "Metadata",
    "TextBlockName":                  "Name",
    "TextBlockParentFolder":          "ParentFolder",
    "TextBlockParentFolderIdentifier":"ParentFolderIdentifier",
    "TextBlockPath":                  "Path",
    "TextBlockSiteId":                "SiteId",
    "TextBlockSiteName":              "SiteName",
    "TextBlockText":                  "Text",
    "TextBlockType":                  "Identifier.Type"
} )
##
#set( $XMLBlockPropertyMap = {
    "XMLBlockCreatedBy":             "CreatedBy",
    "XMLBlockCreatedOn":             "CreatedOn",
    "XMLBlockFolderOrder":           "FolderOrder",
    "XMLBlockId":                    "Identifier.Id",
    "XMLBlockIdentifier":            "Identifier",
    "XMLBlockLastModified":          "LastModified",
    "XMLBlockLastModifiedBy":        "LastModifiedBy",
    "XMLBlockMetadata":              "Metadata",
    "XMLBlockName":                  "Name",
    "XMLBlockParentFolder":          "ParentFolder",
    "XMLBlockParentFolderIdentifier":"ParentFolderIdentifier",
    "XMLBlockPath":                  "Path",
    "XMLBlockSiteId":                "SiteId",
    "XMLBlockSiteName":              "SiteName",
    "XMLBlockType":                  "Identifier.Type",
    "XMLBlockXML":                   "Identifier.XML",
    "XMLBlockXMLAsXMLElement":       "XMLAsXMLElement"
} )
## a prefix used in macro names
#set( $MACRO_PREFIX = 'process' )
#*doc
《/global-variables》
《documentation》
《code》#chanwBuildXMLContentRoot( $xml_string )《/code》
《p》Creates an 《code》org.jdom.Element《/code》 object out of an XML string.
The variable 《code》$xml_string《/code》 should contain a valid XML string
with a root element. The resulting 《code》org.jdom.Element《/code》 object is
stored in the global variable
《code》$chanwBuildXMLContentRoot《/code》. Example:《/p》
《pre》
#chanwBuildXMLContentRoot( $xml )
#set( $contentRoot = $chanwBuildXMLContentRoot )
《/pre》
《/documentation》
《macro id=“chanwBuildXMLContentRoot”》
doc*###
#macro( chanwBuildXMLContentRoot $chanwBuildXMLContentRootXmlString )
#**##if( !$chanwBuildXMLContentRootXmlString || $chanwBuildXMLContentRootXmlString.Class.Name != $JAVA_LANG_STRING_CLASS_NAME || $chanwBuildXMLContentRootXmlString == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $CHANW_INITIALIZATION_FORMAT_NAME "An XML string is required." "nop4nvklvi4kln" )
#*    *##stop
#**##end
##
#**### create the string reader object
#**##chanwGetConstructorByClassNameParamSize( 'java.io.StringReader' 1 )
#**##set( $chanwConstructor  = $chanwGetConstructorByClassNameParamSize )
#**##set( $chanwStringReader = $chanwConstructor.newInstance( $chanwBuildXMLContentRootXmlString ) )
#**##set( $chanwBuildXMLContentRoot = "" )
#**### read the XML string, pass it into the sax builder, create XML tree, and
#**### return the object
#**##set( $chanwBuildXMLContentRoot = $globalSAXBuilder.build( $chanwStringReader ).RootElement )
#end
#*doc
《/macro》
《documentation》
《code》#chanwCallJavaMethod( $javaObjName $methodName )《/code》
《p》Calls the named method through the Java object. The second string can be
any string containing acceptable Java code. Examples:《/p》
《pre》
#chanwCallJavaMethod( '_DateTool' 'getCalendar()' )

#set( $list = [] )
#set( $void = $list.add( “let's have “ ) )
#chanwCallJavaMethod( 'list' 'add(“fun“)' )
《/pre》
《p》Note that since 《code》#evaluate《/code》 is used, the returned value of
the method, if there is one, will be ignored and not output.《/p》
《/documentation》
《macro id=“chanwCallJavaMethod”》
doc*###
#macro( chanwCallJavaMethod $chanwCallJavaMethodJavaObjName $chanwCallJavaMethodMethodName )
#**##set( $chanwStmt = '#set( $chanwCallJavaMethod=' + '$' + $chanwCallJavaMethodJavaObjName + '.' + $chanwCallJavaMethodMethodName + ')' )
#**##evaluate( $chanwStmt )
#end
#*doc
《/macro》
《documentation》
《code》#chanwCheckString( $str $message )《/code》
《p》Checks the variable 《code》$str《/code》 to ensure that it is defined and
its value is a non-empty string, else outputs the message and terminates the execution. Example:《/p》
《pre》
#chanwCheckString( $input $message )
《/pre》
《/documentation》
《macro id=“chanwCheckString”》
doc*###
#macro( chanwCheckString $chanwCheckStringStr $chanwCheckStringMsg )
#**##if( !$chanwCheckStringStr || $chanwCheckStringStr.Class.Name != $JAVA_LANG_STRING_CLASS_NAME || $chanwCheckStringStr == "" )
#*    *#$chanwCheckStringMsg
#*    *##stop
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwConvertArrayListToArray( $list $type )《/code》
《p》Converts an 《code》ArrayList《/code》 object to a 《code》Array《/code》 object. Example:《/p》
《pre》
#set( $folders = $_XPathTool.selectNodes( $contentRoot, "//system-folder" ) )
#chanwConvertArrayListToArray( $folders )
《/pre》
《/documentation》
《macro id=“chanwConvertArrayListToArray”》
doc*###
#macro( chanwConvertArrayListToArray $chanwConvertArrayListToArrayList $chanwConvertArrayListToArrayType )
    #set( $chanwConvertArrayListToArray = "" )
##
    #if( $chanwConvertArrayListToArrayList && $chanwConvertArrayListToArrayList.size() > 0 )
        #if( $chanwConvertArrayListToArrayType && $chanwConvertArrayListToArrayType.Class.Name == "java.lang.Class" )
            #set( $chanwType = $chanwConvertArrayListToArrayType )
        #else
            #set( $chanwType = $chanwConvertArrayListToArrayList[ 0 ].Class )
        #end
##
        #set( $chanwConvertArrayListToArray = $_.Class.forName( "java.lang.reflect.Array" ).getMethod(
            "newInstance", 
            $_.Class.forName( "java.lang.Class" ), $_FieldTool.in( "java.lang.Integer" ).TYPE ).invoke(
            null, $chanwType, $chanwConvertArrayListToArrayList.size() ) )
##
        #foreach( $num in [ 1..$chanwConvertArrayListToArrayList.size() ] )
            #set( $chanwConvertArrayListToArray[ $foreach.index ] = $chanwConvertArrayListToArrayList[ $foreach.index ] )
        #end
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwConvertToPascalCase( $chanwMacroName $chanwDelimiter )《/code》
《p》Converts a string, possibly with delimiters, into Pascal case. The
《code》$chanwDelimiter《/code》 variable is treated as a marker
of word boundaries. The result is stored in the variable
《code》$chanwConvertToPascalCase《/code》. Example:《/p》
《pre》
#chanwConvertToPascalCase( “xml-group“ “-“ )
$chanwConvertToPascalCase
## converting xml-group to XmlGroup
《/pre》
《/documentation》
《macro id=“chanwConvertToPascalCase”》
doc*###
#macro( chanwConvertToPascalCase $chanwConvertToPascalCaseMacroName $chanwConvertToPascalCaseDelimiter )
#**##if( $chanwConvertToPascalCaseMacroName.Class.Name != $JAVA_LANG_STRING_CLASS_NAME || $chanwConvertToPascalCaseMacroName.length() == 0 )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $CHANW_INITIALIZATION_FORMAT_NAME "A string is required." "4P4GIORIUBKMLKU" )
#*    *##stop
#**##end
##
#**##if( !$chanwConvertToPascalCaseDelimiter || $chanwConvertToPascalCaseDelimiter.class.name != $JAVA_LANG_STRING_CLASS_NAME )
#*    *##set( $chanwConvertToPascalCaseDelimiter = '' ) ## default to empty string
#**##end
##
#**##set( $chanwMacroName = $chanwConvertToPascalCaseMacroName.toLowerCase() )
#**##set( $chanwConvertToPascalCase = "" )
##
#**### there is a delimiter passed in
#**##if( $chanwConvertToPascalCaseDelimiter.length() > 0 )
#*    *### the delimiter does not exist in the string
#*    *##if( $chanwMacroName.indexOf( $chanwConvertToPascalCaseDelimiter ) < 0 )
#*        *##set( $chanwConvertToPascalCase = $globalApacheWordUtils.capitalize( $chanwConvertToPascalCaseMacroName ) )
#*    *### there are instances of the delimiter
#*    *##else
#*        *### replace delimiters with spaces
#*        *##set( $chanwMacroName = $chanwMacroName.replaceAll( $chanwConvertToPascalCaseDelimiter, ' ' ) )
#*        *### capitalize words
#*        *##set( $chanwMacroName = $globalApacheWordUtils.capitalize( $chanwMacroName ) )
#*        *### remove spaces
#*        *##set( $chanwConvertToPascalCase = $chanwMacroName.replaceAll( ' ', '' ) ) 
#*    *##end
#**### no delimiter passed in
#**##else
#*     *##set( $chanwConvertToPascalCase = $globalApacheWordUtils.capitalize( $chanwMacroName ) )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwDisplayEvaluateCode( $code $evaluate )《/code》
《p》Evaluates the code when 《code》$evaluate《/code》 is 《code》true《/code》,
or displays the code when 《code》$evaluate《/code》 is 《code》false《/code》.
Example:《/p》
《pre》
#set( $code =
"${SINGLE_HASH}set( ${DOLLAR}myVar = 3 )
${SINGLE_HASH}macro( myMacro ${DOLLAR}var )
    $var
${SINGLE_HASH}end
${SINGLE_HASH}myMacro( ${DOLLAR}myVar )" )
#chanwDisplayEvaluateCode( $code false )
#chanwDisplayEvaluateCode( $code true )
《/pre》
《/documentation》
《macro id=“chanwDisplayEvaluateCode”》
doc*###
#macro( chanwDisplayEvaluateCode $chanwDisplayEvaluateCodeCode $chanwDisplayEvaluateCodeEvaluate )
#if( $chanwDisplayEvaluateCodeCode.Class.Name == $JAVA_LANG_STRING_CLASS_NAME && $chanwDisplayEvaluateCodeCode != "" )
#if( $chanwDisplayEvaluateCodeEvaluate && $chanwDisplayEvaluateCodeEvaluate == true )
#set( $chanwCode = $chanwDisplayEvaluateCodeCode.replaceAll( "-aa-", "&&" ).replaceAll( "-lt-", "<" ).replaceAll( "-gt-", ">" ) )
#evaluate( $chanwCode )
#else
$_EscapeTool.xml( $chanwDisplayEvaluateCodeCode )
#end
#end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetCascadeObjectFromElement( $element )《/code》
《p》Creates a Cascade API object out of an 《code》org.jdom.Element《/code》
object. The resulting object is stored in
《code》$chanwGetCascadeObjectFromElement《/code》. Note that since a reference
only contains the path of the referenced asset, not its own path, this macro
does not work for references. Example:《/p》
《pre》
#set( $page = $_XPathTool.selectSingleNode(
    $contentRoot, "system-folder[6]/system-page" ) )
$page.getChild( "name" ).Value
#chanwGetCascadeObjectFromElement( $page )
$chanwGetCascadeObjectFromElement.Class.Name
-$chanwGetCascadeObjectFromElement-

#set( $folder = $contentRoot.getChild( "system-folder" ) )
#chanwGetCascadeObjectFromElement( $folder )
$chanwGetCascadeObjectFromElement.Name
$chanwGetCascadeObjectFromElement.Class.Name
《/pre》
《/documentation》
《macro id=“chanwGetCascadeObjectFromElement”》
doc*###
#macro( chanwGetCascadeObjectFromElement $chanwGetCascadeObjectFromElementElement )
#**##if( $chanwGetCascadeObjectFromElementElement.Class.Name != $ORG_JDOM_ELEMENT_CLASS_NAME )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $CHANW_INITIALIZATION_FORMAT_NAME "An org.jdom.Element object is required." "EDL NOI;rn;r" )
#*    *##stop
#**##end
##
#**### get the Cascade API type name
#**##set( $chanwCascadeType = $CASCADE_TYPE_ELEMENT_MAP.get( $chanwGetCascadeObjectFromElementElement.Name ) )
#**##set( $chanwGetCascadeObjectFromElement = "" )
##    
#**### locate the asset
#**##set( $chanwGetCascadeObjectFromElement = $_.locate( $chanwGetCascadeObjectFromElementElement.getChild( "path" ).Value.substring( 1 ), $chanwCascadeType, $chanwGetCascadeObjectFromElementElement.getChild( "site" ).Value ) )
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetFilePath( $file $site $default )《/code》
《p》Gets the valid file path or the default path. Invoke this macro in double
quotes in a set directive because the macro only outputs a string.
Created by Peter. Example:《/p》
《pre》
#set( $myFile = “#chanwGetFilePath(
    'images/computer-people-700x350.jpg' 'thomas-test' 'images/default.jpg' )“ )
《/pre》
《/documentation》
《macro id=“chanwGetFilePath”》
doc*###
#macro( chanwGetFilePath $chanwGetFilePathFile $chanwGetFilePathSite $chanwGetFilePathDefault )
#**##if( $_PropertyTool.isNull( $_.locateFile( $chanwGetFilePathFile, $chanwGetFilePathSite ) ) )
#*    *#$chanwGetFilePathDefault
#**##else
#*    *#$chanwGetFilePathFile
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetConstructor( $className $paramTypeList )《/code》
《p》Gets the constructor by matching the param type list. Example:《/p》
《pre》
#chanwGetConstructor( 'java.lang.StringBuffer' [ $_FieldTool.in( "java.lang.Integer" ).TYPE ] )
$chanwGetConstructor.newInstance( 10000 ).Class.Name
《/pre》
《/documentation》
《macro id=“chanwGetConstructor”》
doc*###
#macro( chanwGetConstructor $chanwGetConstructorClassName $chanwGetConstructorParamTypeList )
    #set( $chanwGetConstructor = "" )
    #chanwConvertArrayListToArray( $chanwGetConstructorParamTypeList )
    #set( $chanwGetConstructor = $_.Class.forName( $chanwGetConstructorClassName ).getConstructor( $chanwConvertArrayListToArray ) )
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetConstructorByClassNameParamSize( $chanwClassName $chanwParamSize )《/code》
《p》Returns the first constructor that accepts the specified number of parameters. Example:《/p》
《pre》
#chanwGetConstructorByClassNameParamSize( 'org.jdom.Text' 1 )
#set( $chanwConstructor = $chanwGetConstructorByClassNameParamSize )
#set( $globalJDOMText   = $chanwConstructor.newInstance( ““ ) )
《/pre》
《/documentation》
《macro id=“chanwGetConstructorByClassNameParamSize”》
doc*###
#macro( chanwGetConstructorByClassNameParamSize $chanwGetConstructorByClassNameParamSizeClassName $chanwGetConstructorByClassNameParamSizeParamSize )
    ## check the class name string
    #if( !$chanwGetConstructorByClassNameParamSizeClassName || $chanwGetConstructorByClassNameParamSizeClassName.Class.Name != "java.lang.String" || $chanwGetConstructorByClassNameParamSizeClassName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid class name is required." "msg4vi4bi" )
        #stop
    #end
##
    ## check the param size integer
    #if( $chanwGetConstructorByClassNameParamSizeParamSize.Class.Name != "java.lang.Integer" || $chanwGetConstructorByClassNameParamSizeParamSize < 0 )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "An integer larger than -1 is required." "msgb4gn4g" )
        #stop
    #end
##
    ## get all constructors
    #set( $chanwGetConstructorByClassNameParamSize = "" )
    #set( $chanwClassObj = $_.Class.forName( $chanwGetConstructorByClassNameParamSizeClassName ) )
    #set( $chanwConstructors  = $chanwClassObj.getConstructors() )
##
    ## find the one with the right param size
#foreach( $constructor in $chanwConstructors )
## found
#if( $constructor.getParameterTypes().size() == $chanwGetConstructorByClassNameParamSizeParamSize )
#set( $chanwGetConstructorByClassNameParamSize = $constructor )
#break
#end
#end
    ## not found, issue a warning
    #if( $chanwGetConstructorByClassNameParamSize == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "Constructor not found." "msglofio" )
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetConstructorByClassNameParamTypeArray( $chanwClassName $chanwTypeArray )《/code》
《p》Returns the constructor by matching the parameter list. Example:《/p》
《pre》
#chanwGetConstructorByClassNameParamTypeArray( 'java.lang.StringBuffer' [ 'int' ] )
#set( $chanwConstructor   = $chanwGetConstructorByClassNameParamTypeArray )
#set( $globalStringBuffer = $chanwConstructor.newInstance( 10000 ) )
《/pre》
《/documentation》
《macro id=“chanwGetConstructorByClassNameParamTypeArray”》
doc*###
#macro( chanwGetConstructorByClassNameParamTypeArray $chanwGetConstructorByClassNameParamTypeArrayClassName $chanwGetConstructorByClassNameParamTypeArrayTypeArray )
    ## check the class name string
    #if( !$chanwGetConstructorByClassNameParamTypeArrayClassName || $chanwGetConstructorByClassNameParamTypeArrayClassName.Class.Name != "java.lang.String" || $chanwGetConstructorByClassNameParamTypeArrayClassName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid class name is required." "msglf2h" )
        #stop
    #end
##
    ## check the param type array
    #if( !$chanwGetConstructorByClassNameParamTypeArrayTypeArray || !$chanwGetConstructorByClassNameParamTypeArrayTypeArray.size() )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "An array of types is required." ";io4;" )
        #stop
    #end
##
    ## get all constructors
    #set( $chanwGetConstructorByClassNameParamTypeArray = "" )
    #set( $chanwClassObj = $_PropertyTool.class.forName( $chanwGetConstructorByClassNameParamTypeArrayClassName ) )
    #set( $chanwConstructors  = $chanwClassObj.getConstructors() )
##
#foreach( $constructor in $chanwConstructors )
#set( $chanwParamsMatched = true )
#set( $chanwParamTypes    = $constructor.getParameterTypes() )
##
## match the size
#if( $chanwParamTypes.size() == $chanwGetConstructorByClassNameParamTypeArrayTypeArray.size() )
## match the types
#foreach( $type in $chanwParamTypes )
#if( !$type.getName().equals( $chanwGetConstructorByClassNameParamTypeArrayTypeArray[ $foreach.index ] ) )
#set( $chanwParamsMatched = false )
#end
#end
##
## found
#if( $chanwParamsMatched )
#set( $chanwGetConstructorByClassNameParamTypeArray = $constructor )
#break
#end
#end
#end
##
    ## not found, issue a warning
    #if( $chanwGetConstructorByClassNameParamTypeArray == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "Constructor not found." "b34bo4i" )
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetConstantValueByClassNameConstantName( $chanwClassName $chanwConstantName )《/code》
《p》Returns the field value of a field name defined in a class. Example:《/p》
《pre》
#chanwGetConstantValueByClassNameConstantName( 'com.hannonhill.cascade.velocity.CascadeComparisonDateTool' 'MILLIS_PER_YEAR' )
$chanwGetConstantValueByClassNameConstantName
《/pre》
《/documentation》
《macro id=“chanwGetConstantValueByClassNameConstantName”》
doc*###
#macro( chanwGetConstantValueByClassNameConstantName $chanwGetConstantValueByClassNameConstantNameClassName $chanwGetConstantValueByClassNameConstantNameConstantName )
    ## check the class name string
    #if( !$chanwGetConstantValueByClassNameConstantNameClassName || $chanwGetConstantValueByClassNameConstantNameClassName.Class.Name != "java.lang.String" || $chanwGetConstantValueByClassNameConstantNameClassName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid class name is required." "kfovm;34go;i" )
        #stop
    #end
##
    ## check the constant name string
    #if( !$chanwGetConstantValueByClassNameConstantNameConstantName || $chanwGetConstantValueByClassNameConstantNameConstantName.Class.Name != "java.lang.String" || $chanwGetConstantValueByClassNameConstantNameConstantName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid constant name is required." "lk34uo4jni" )
        #stop
    #end
##
    ## get the field value
    #set( $chanwGetConstantValueByClassNameConstantName = "" )
    #set( $chanwClassObj  = $_.Class.forName( $chanwGetConstantValueByClassNameConstantNameClassName ) )
    #set( $chanwFieldObj  = $chanwClassObj.getField( $chanwGetConstantValueByClassNameConstantNameConstantName ) )
    #set( $chanwGetConstantValueByClassNameConstantName = $chanwFieldObj.get( null ) )
##
    ## not found
    #if( $chanwGetConstantValueByClassNameConstantName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "The field is not found." "bu45vo4ubg" )
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetFolderContainedAssetName( $asset )《/code》
《p》Returns the name of the asset. The 《code》$asset《/code》 passed in should
be a Cascade API Adapter object. The name is stored in
《code》$chanwGetFolderContainedAssetName《/code》. Example:《/p》
《pre》
#chanwGetFolderContainedAssetName( $chanwGetCascadeObjectFromElement )
$chanwGetFolderContainedAssetName
《/pre》
《/documentation》
《macro id=“chanwGetFolderContainedAssetName”》
doc*###
#macro( chanwGetFolderContainedAssetName $chanwGetFolderContainedAssetNameAsset )
    #if( !$chanwGetFolderContainedAssetNameAsset )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "No asset passed in." "msgy84y3" )
    #stop
    #end
##
    ## check input
    #chanwIsInstanceOf( $chanwGetFolderContainedAssetNameAsset $COM_CASCADE_FOLDER_CONTAINED_ASSET_CLASS_NAME )
##
    #if( !$chanwIsInstanceOf )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "Not a folder contained asset." "msgriril" )
    #stop
    #end
##
    #set( $chanwGetFolderContainedAssetName = "" )
    #set( $chanwPathSegments = $chanwGetFolderContainedAssetNameAsset.Identifier.Path.PathSegments )
    #set( $chanwLastIndex = $chanwPathSegments.size() - 1 )
    #set( $chanwGetFolderContainedAssetName = $chanwPathSegments.get( $chanwLastIndex ) )
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetListRandomized( $chanwList )《/code》
《p》Returns a new list, containing all items of the original list but in random
order. The new list is stored in 《code》$chanwGetListRandomized《/code》.
Example:《/p》
《pre》
#chanwGetListRandomized( $states )
$chanwGetListRandomized
《/pre》
《/documentation》
《macro id=“chanwGetListRandomized”》
doc*###
#macro( chanwGetListRandomized $chanwGetListRandomizedList )
#**##set( $chanwGetListRandomized = $chanwGetListRandomizedList.clone() )
##
#**### does not do anything if no list passed in
#**##if( $chanwGetListRandomizedList.Class.Name == $JAVA_UTIL_ARRAY_LIST_CLASS_NAME && $chanwGetListRandomizedList.size() > 0 )
#*    *##set( $chanwMax       = $chanwGetListRandomized.size() - 1 )
#*    *##set( $chanwCountList = [ $chanwMax..0 ] )
##
#*    *### Fisher–Yates shuffle
#*    *##foreach( $num in $chanwCountList )
#*        *##set( $chanwNext  = $num + 1 )
#*        *##set( $chanwIndex = $chanwGlobalRandom.nextInt( $chanwNext ) )
#*        *##set( $chanwTemp  = $chanwGetListRandomized[ $chanwIndex ] )
#*        *##set( $chanwGetListRandomized[ $chanwIndex ] = $chanwGetListRandomized[ $num ] )
#*        *##set( $chanwGetListRandomized[ $num ] = $chanwTemp )
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetMapKeyValueReversed( $chanwMap )《/code》
《p》Returns a new map with keys of the original map as values, and values of
the original map as keys. This macro assumes that the values are unique.
The new map is stored in 《code》$chanwGetMapKeyValueReversed《/code》.
Example:《/p》
《pre》
#chanwGetMapKeyValueReversed( $stateMap )
$chanwGetMapKeyValueReversed
《/pre》
《/documentation》
《macro id=“chanwGetMapKeyValueReversed”》
doc*###
#macro( chanwGetMapKeyValueReversed $chanwGetMapKeyValueReversedMap )
#**##set( $chanwGetMapKeyValueReversed = {} )
##
#**### does not do anything if no map passed in
#**##if( ( $chanwGetMapKeyValueReversedMap.Class.Name == $JAVA_UTIL_LINKEDHASHMAP_CLASS_NAME || $chanwGetMapKeyValueReversedMap.Class.Name == $JAVA_UTIL_HASHMAP_CLASS_NAME ) && $chanwGetMapKeyValueReversedMap.size() > 0 )
#*    *##set( $chanwKeySet = $chanwGetMapKeyValueReversedMap.keySet() )
#*    *##foreach( $key in $chanwKeySet )
#*        *##set( $void = $chanwGetMapKeyValueReversed.put( $chanwGetMapKeyValueReversedMap.get( $key ), $key ) )
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetMethod( $className $methodName $paramTypeList )《/code》
《p》Gets the method by matching the param type list. Example:《/p》
《pre》

《/pre》
《/documentation》
《macro id=“chanwGetMethod”》
doc*###
#macro( chanwGetMethod $chanwGetMethodClassName $chanwGetMethodMethodName $chanwGetMethodParamTypeList )
    #set( $chanwGetMethod = "" )
    #chanwConvertArrayListToArray( $chanwGetMethodParamTypeList )
    #set( $chanwGetMethod = $_.Class.forName( $chanwGetMethodClassName ).getMethod( $chanwGetMethodMethodName, $chanwConvertArrayListToArray ) )
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetMethodByClassNameMethodNameParamTypes( $chanwClassName $chanwMethodName $chanwParamList )《/code》
《p》Returns the named method of a class. The 《code》$chanwParamList《/code》 must be a list of strings,
representing class objects, or a single class object. Example:《/p》
《pre》
#chanwGetMethodByClassNameMethodNameParamTypes( “java.lang.Math“ “abs“ '$_FieldTool.in( “java.lang.Double“ ).TYPE' )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( null, -2.5 )

#set( $paramList = [ '$_FieldTool.in( “java.lang.Double“ ).TYPE' ] )
#chanwGetMethodByClassNameMethodNameParamTypes( 'java.lang.Math' 'abs' $paramList )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( null, -3 )

#set( $paramList = [ '$_FieldTool.in( “java.lang.Double“ ).TYPE', '$_FieldTool.in( “java.lang.Double“ ).TYPE' ] )
#chanwGetMethodByClassNameMethodNameParamTypes( 'java.lang.Math' 'min' $paramList )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( null, -3, -4 )

#set( $str = ““ )
#set( $paramList = [ '$str.Class' ] )
#chanwGetMethodByClassNameMethodNameParamTypes( 'java.lang.String' 'concat' $paramList )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( “Hello, “, “World!” )

#chanwGetMethodByClassNameMethodNameParamTypes( 'java.lang.String' 'indexOf' $paramList )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( “Hello ”, “e” )
《/pre》
《/documentation》
《macro id=“chanwGetMethodByClassNameMethodNameParamTypes”》
doc*###
#macro( chanwGetMethodByClassNameMethodNameParamTypes $chanwGetMethodByClassNameMethodNameParamTypesClassName $chanwGetMethodByClassNameMethodNameParamTypesMethodName $chanwGetMethodByClassNameMethodNameParamTypesParamList )
    ## check the class name string
    #if( !$chanwGetMethodByClassNameMethodNameParamTypesClassName || $chanwGetMethodByClassNameMethodNameParamTypesClassName.Class.Name != "java.lang.String" || $chanwGetMethodByClassNameMethodNameParamTypesClassName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid class name is required." ";io45un;or" )
        #stop
    #end
##
    ## check the method name string
    #if( !$chanwGetMethodByClassNameMethodNameParamTypesMethodName || $chanwGetMethodByClassNameMethodNameParamTypesMethodName.Class.Name != "java.lang.String" || $chanwGetMethodByClassNameMethodNameParamTypesMethodName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid method name is required." ";bob4;b4" )
        #stop
    #end
##
    #set( $chanwClassObj  = $_.Class.forName( $chanwGetMethodByClassNameMethodNameParamTypesClassName ) )
    #set( $chanwGetMethodByClassNameMethodNameParamTypesParamListString = $_DisplayTool.list( $chanwGetMethodByClassNameMethodNameParamTypesParamList, "," ) )
##
    ## check the param list string
    #if( !$chanwGetMethodByClassNameMethodNameParamTypesParamListString )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A param list is required." ";o4b;4pobg4bi" )
        #stop
    #end
##
    #set( $chanwGetMethodByClassNameMethodNameParamTypes = "" )
##
    ## create and execute a statement
    #set( $chanwStmt = '#set($chanwGetMethodByClassNameMethodNameParamTypes = $chanwClassObj.getMethod( "' + $chanwGetMethodByClassNameMethodNameParamTypesMethodName + '"' )
##
    #if( $chanwGetMethodByClassNameMethodNameParamTypesParamListString && $chanwGetMethodByClassNameMethodNameParamTypesParamListString != "" )
        #set( $chanwStmt = $chanwStmt + ',' + $chanwGetMethodByClassNameMethodNameParamTypesParamListString )
    #end
##
    #set( $chanwStmt = $chanwStmt + '))' )
    #evaluate( $chanwStmt )
##
    ## not found, issue a warning
    #if( $chanwGetMethodByClassNameMethodNameParamTypes == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "Method not found." "ln;vr4gbNF4NO" )
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetNodeSets( $node $map )《/code》
《p》Dynamically creates variables assigned with node sets.《/p》
《/documentation》
《macro id=“chanwGetNodeSets”》
doc*###
#macro( chanwGetNodeSets $chanwGetNodeSetsNode $chanwGetNodeSetsMap )
#**##set( $chanwNameNodesMap = {} )
##
#**##foreach( $var in $chanwGetNodeSetsMap.keySet() )
#*    *##set( $chanwNodeSet = $_XPathTool.selectNodes( $chanwGetNodeSetsNode, $chanwGetNodeSetsMap[ $var ] ) )
##
#*    *##if( $_PropertyTool.isNull( $chanwNodeSet ) )
#*        *##set( $chanwNodeSet = "" )
#*    *##end
##
#*    *##set( $void = $chanwNameNodesMap.put( $chanwGetNodeSetsMap[ $var ], $chanwNodeSet ) )
#*    *##set( $chanwSetVarValStatement = '#' + "set(" + $DOLLAR + "$var = " + $DOLLAR + "chanwNameNodesMap[" + $_EscapeTool.D + "map["+ "'$var']])" )
#*    *##evaluate( $chanwSetVarValStatement )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetNodeValues( $node $map )《/code》
《p》Dynamically creates variables assigned with values. The value of 《code》$node《/code》
must be an 《code》org.jdom.Element《/code》 object. Keys in the map should be variable
names, whereas values should be names of child elements of 《code》$node《/code》.
This macro invokes 《code》#chanwSetVariable《/code》.《/p》
《/documentation》
《macro id=“chanwGetNodeValues”》
doc*###
#macro( chanwGetNodeValues $chanwGetNodeValuesNode $chanwGetNodeValuesMap )
#**##foreach( $var in $chanwGetNodeValuesMap.keySet() )
#*    *##set( $chanwChildNodes = $_XPathTool.selectNodes( $chanwGetNodeValuesNode, $chanwGetNodeValuesMap[ $var ] ) )
##
#*    *### the element exists
#*    *##if( $chanwChildNodes.size() > 0 )
#*        *### two possible cases: element containing elements, or text node
#*        *##set( $chanwChildNode = $chanwChildNodes[ 0 ] )
#*        *##set( $chanwGrandChildNodes = $chanwChildNode.Children )
##
#*        *##if( $chanwGrandChildNodes.size() > 0 )
#*            *##set( $chanwNodeValue = $chanwChildNodes )        ## a list
#*        *##else
#*            *##set( $chanwNodeValue = $chanwChildNode.Value )   ## a string
#*        *##end
#*    *##else
#*        *##set( $chanwNodeValue = "" )
#*    *##end
#*    *##chanwSetVariable( $var $chanwNodeValue )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetObjectByClassName( $className )《/code》
《p》Returns an object of the class, calling the default constructor. Example:《/p》
《pre》
#chanwGetObjectByClassName( 'org.apache.velocity.tools.generic.LinkTool' )
#set( $globalApacheLinkTool = $chanwGetObjectByClassName )
《/pre》
《/documentation》
《macro id=“chanwGetObjectByClassName”》
doc*###
#macro( chanwGetObjectByClassName $chanwGetObjectByClassNameClassName )
    ## check the class name string
    #if( !$chanwGetObjectByClassNameClassName || $chanwGetObjectByClassNameClassName.Class.Name != "java.lang.String" || $chanwGetObjectByClassNameClassName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid class name is required." "msg44n" )
        #stop
    #end
##
    #set( $chanwGetObjectByClassName = "" )## reinitialize the global variable
    ## retrieve the default constructor
    #chanwGetConstructorByClassNameParamSize( $chanwGetObjectByClassNameClassName 0 )
    #set( $chanwConstructor = $chanwGetConstructorByClassNameParamSize )
##
    ## found
    #if( $chanwConstructor )
        ## create and return the object
        #set( $chanwGetObjectByClassName = $chanwConstructor.newInstance() )
    #else## not found, clean up and issue a warning
        #set( $chanwGetObjectByClassName = "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "No default constructor is found." "msg4iu4ib" )
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetParamListAsStrings( $list )《/code》
《p》Converts a list of items into a CSV string, containing all items in the
list, each as a string value in quotes and separated by commas. The result
string is stored in 《code》$chanwGetParamListAsStrings《/code》. Example:《/p》
《pre》
#set( $strings = [ "one", "two", "three" ] )
#chanwGetParamListAsStrings( $strings )
$chanwGetParamListAsStrings ## output "one","two","three"
《/pre》
《/documentation》
《macro id=“chanwGetParamListAsStrings”》
doc*###
#macro( chanwGetParamListAsStrings $chanwGetParamListAsStringsList )
#**##if( $chanwGetParamListAsStringsList.Class.Name != $JAVA_UTIL_ARRAY_LIST_CLASS_NAME )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $CHANW_INITIALIZATION_FORMAT_NAME "A list is required." "FLK44NFKLJIRJKL" )
#*    *##stop
#**##end
##
#**##set( $chanwGetParamListAsStrings = '' )
##
#**##if( $chanwGetParamListAsStringsList.size() > 0 )
#*    *##foreach( $item in $chanwGetParamListAsStringsList )
#*        *##set( $chanwGetParamListAsStrings = $chanwGetParamListAsStrings + '"' + $item + '"' )
##
#*        *##if( $foreach.count < $chanwGetParamListAsStringsList.size() )
#*            *##set( $chanwGetParamListAsStrings = $chanwGetParamListAsStrings + ',' )
#*        *##end
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetParamListAsValues( $list )《/code》
《p》Converts a list of items into a string, containing all items in the list,
each as a value separated by commas. The result string is stored in
《code》$chanwGetParamListAsValues《/code》. Example:《/p》
《pre》
#set( $ints = [ 1, 2, 3, 4 ] )
#chanwGetParamListAsValues( $ints )
$chanwGetParamListAsValues ## output 1,2,3,4 as a string
《/pre》
《/documentation》
《macro id=“chanwGetParamListAsValues”》
doc*###
#macro( chanwGetParamListAsValues $chanwGetParamListAsValuesList )
#**##if( $chanwGetParamListAsValuesList.Class.Name != $JAVA_UTIL_ARRAY_LIST_CLASS_NAME )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $CHANW_INITIALIZATION_FORMAT_NAME "A list is required." "L;V4INO4IOPH ,GRI;" )
#*    *##stop
#**##end
##
#**##set( $chanwGetParamListAsValues = '' )
##
#**##if( $chanwGetParamListAsValuesList.size() > 0 )
#*    *##foreach( $item in $chanwGetParamListAsValuesList )
#*        *##set( $chanwGetParamListAsValues = $chanwGetParamListAsValues + $item )
##
#*        *##if( $foreach.count < $chanwGetParamListAsValuesList.size() )
                #set( $chanwGetParamListAsValues = $chanwGetParamListAsValues + ',' )
#*        *##end
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwGetStaticMethodByClassNameMethodNameWithoutParams( $chanwClassName $chanwMethodName )《/code》
《p》Returns the static method of the class.《/p》
《pre》
#chanwGetStaticMethodByClassNameMethodNameWithoutParams(
    "java.util.concurrent.ThreadLocalRandom"  "current"
)
$chanwGetStaticMethodByClassNameMethodNameWithoutParams.Class.Name
《/pre》
《/documentation》
《macro id=“chanwGetStaticMethodByClassNameMethodNameWithoutParams”》
doc*###
#macro( chanwGetStaticMethodByClassNameMethodNameWithoutParams $chanwGetStaticMethodByClassNameMethodNameWithoutParamsClassName $chanwGetStaticMethodByClassNameMethodNameWithoutParamsMethodName )
    ## check the class name string
    #if( !$chanwGetStaticMethodByClassNameMethodNameWithoutParamsClassName || $chanwGetStaticMethodByClassNameMethodNameWithoutParamsClassName.Class.Name != "java.lang.String" || $chanwGetStaticMethodByClassNameMethodNameWithoutParamsClassName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid class name is required." "4B4K;ENI" )
        #stop
    #end
##
    ## check the method name string
    #if( !$chanwGetStaticMethodByClassNameMethodNameWithoutParamsMethodName || $chanwGetStaticMethodByClassNameMethodNameWithoutParamsMethodName.Class.Name != "java.lang.String" || $chanwGetStaticMethodByClassNameMethodNameWithoutParamsMethodName == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid method name is required." "KN;4I4GNN;KLBOK4" )
        #stop
    #end
##
    #set( $chanwClassObj  = $_.Class.forName( $chanwGetStaticMethodByClassNameMethodNameWithoutParamsClassName ) )
    #set( $chanwGetStaticMethodByClassNameMethodNameWithoutParams = "" )
    #set( $chanwGetStaticMethodByClassNameMethodNameWithoutParams = $_.Class.forName( $chanwGetStaticMethodByClassNameMethodNameWithoutParamsClassName ).getMethod( $chanwGetStaticMethodByClassNameMethodNameWithoutParamsMethodName ) )
##
    ## not found, issue a warning
    #if( $chanwGetStaticMethodByClassNameMethodNameWithoutParams == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "Method not found." "94BBRKIOU" )
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwImportScript( $folderPath $siteName $scriptName )《/code》
《p》Returns a boolean, indicating whether the script format is imported successfully.
《code》$folderPath《/code》 should be the path string of the parent folder containing the format.《/p》
《p》Examples:《/p》
《pre》
## look for the setup format in the Base Folder of a site
#chanwImportScript( "/" "cascade-admin" "setup" )

#if( !$chanwImportScript || !$upstateSiteTitle || $upstateSiteTitle == "" )
    ## if not defined in a site, supply a default value
    #set( $upstateSiteTitle = "Cascade Administration" )
#end
《/pre》
《/documentation》
《macro id=“chanwImportScript”》
doc*#
#macro( chanwImportScript $chanwImportScriptFolderPath $chanwImportScriptSiteName $chanwImportScriptScriptName )
    #set( $chanwImportScript = false )
    #set( $chanwFolderPath = $chanwImportScriptFolderPath )
    ## add slaches to folder path
    #if( !$chanwFolderPath.startsWith( "/" ) )
        #set( $chanwFolderPath = "/" + $chanwFolderPath )
    #end
    #if( !$chanwFolderPath.endsWith( "/" ) )
        #set( $chanwFolderPath = $chanwFolderPath + "/" )
    #end
##
	#set( $chanwLocatePath = $chanwFolderPath + $chanwImportScriptScriptName )
	#set( $chanwScriptFormat = "" )
	#set( $chanwScriptFormat = $_.locate( $chanwLocatePath, $CASCADE_API_FORMAT_TYPE, $chanwImportScriptSiteName ) )
##
	#if( $chanwScriptFormat != "" )
        #set( $chanwScriptPath = "site://" + $chanwImportScriptSiteName + $chanwFolderPath + $chanwImportScriptScriptName )
        #set( $chanwImportScriptPathStmt = '#import("' + $chanwScriptPath + '")' )
        ## must use evaluate here; cannot use #import directly
        #evaluate( $chanwImportScriptPathStmt )
        #set( $chanwImportScript = true )
    #end
#end
#*doc   
《/macro》
《documentation》
《code》#chanwInvokeMacro( $chanwMacroName $chanwMacroParams )《/code》
《p》Invokes a macro with the name and parameters passed in. The parameters
should be in a list. Example:《/p》
《pre》
#set( $file    = 'images/computer-people-700x350.jpg' )
#set( $site    = 'thomas-test' )
#set( $default = 'images/default.jpg' )
#set( $myFile  =
    “#chanwInvokeMacro('chanwGetFilePath' ['file', 'site', 'default'] )“ )
《/pre》
《/documentation》
《macro id=“chanwInvokeMacro”》
doc*###
#macro( chanwInvokeMacro $chanwInvokeMacroMacroName $chanwInvokeMacroMacroParams )
#**##if( $chanwInvokeMacroMacroName.Class.Name == $JAVA_LANG_STRING_CLASS_NAME )
#*    *##set( $chanwStmt = "#$chanwInvokeMacroMacroName(" )
##
#*    *##if( $chanwInvokeMacroMacroParams.Class.Name == $JAVA_UTIL_ARRAY_LIST_CLASS_NAME )
#*        *##if( $chanwInvokeMacroMacroParams.size() > 0 )
#*            *##foreach( $macroParam in $chanwInvokeMacroMacroParams )
#*                *##if( $macroParam.Class.Name == $JAVA_LANG_STRING_CLASS_NAME )
#*                    *##set( $chanwStmt = $chanwStmt + "$" + $macroParam + " " )
#*                *##end
#*            *##end
#*        *##end
#*    *##end
##
#*    *##set( $chanwStmt = $chanwStmt.trim() )
#*    *##set( $chanwStmt = $chanwStmt + ")" )
#*    *##evaluate( $chanwStmt )
#**##end
#end
#*doc   
《/macro》
《documentation》
《code》#chanwInvokeMacroIfExists( $chanwInvokeMacroIfExistsMacroName $chanwInvokeMacroIfExistsListOfParams )《/code》
《p》Invokes a macro with the name and parameters passed in, if the named macro exists. The parameters
should be in a list. This macro invokes 《code》#chanwInvokeMacro《/code》. The named macro to be invoked
should be defined in a specific way like this:《/p》
《pre》
#define( $myMacroExists )
    #macro( myMacro $var1 $var2 $var3 )
        $var1 $var2 $var3
    #end
#end
《/pre》
《p》The macro definition should be wrapped inside the 《code》#define《/code》 directive, and the name of the variable
to be defined should be the macro name plus the suffix 《code》Exists《/code》. Example:《/p》
《pre》
#define( $myMacroExists )
    #macro( myMacro $var1 $var2 $var3 )
        $var1 $var2 $var3
    #end
#end

#set( $macroName = "myMacro" )
#set( $greetings = "Hello" )
#set( $fname     = "John" )
#set( $lname     = "Doe" )

#chanwInvokeMacroIfExists( "myMacro" [ "greetings", "fname", "lname" ] )
《/pre》
《/documentation》
《macro id=“chanwInvokeMacroIfExists”》
doc*###
#macro( chanwInvokeMacroIfExists $chanwInvokeMacroIfExistsMacroName $chanwInvokeMacroIfExistsListOfParams )
    #if( !$chanwInvokeMacroIfExistsListOfParams.Class.Name )
        #set( $chanwParamString = "" )
    #elseif( $chanwInvokeMacroIfExistsListOfParams.Class.Name == $JAVA_UTIL_ARRAY_LIST_CLASS_NAME && $chanwInvokeMacroIfExistsListOfParams.size() > 0 )
        #set( $chanwParamString = "[" )
##
        #foreach( $varName in $chanwInvokeMacroIfExistsListOfParams  )
            #set( $chanwParamString = $chanwParamString + """" + $varName.toString() + """" )
            #if( $foreach.count < $chanwInvokeMacroIfExistsListOfParams.size() )
                #set( $chanwParamString = $chanwParamString + "," )
            #end
        #end
        #set( $chanwParamString = $chanwParamString + "]" )
    #else
        #set( $chanwParamString = "[]" )
    #end
##
    #set( $chanwStmt = "${SINGLE_HASH}if(${DOLLAR}${macroName}Exists)${SINGLE_HASH}chanwInvokeMacro(""$macroName"" $chanwParamString)${SINGLE_HASH}end" )
    #evaluate( $chanwStmt )
#end
#*doc   
《/macro》
《documentation》
《code》#chanwInvokeMacroWithVarForString( $macroName $macroParams $varName )《/code》
《p》Invokes a macro with the name and parameters passed in and stores the resulting
output to the supplied variable. Example:《/p》
《pre》
《/pre》
《/documentation》
《macro id=“chanwInvokeMacroWithVarForString”》
doc*###
#macro( chanwInvokeMacroWithVarForString $chanwInvokeMacroWithVarForStringMacroName $chanwInvokeMacroWithVarForStringMacroParams $chanwInvokeMacroWithVarForStringVarName )
#**##set( $chanwInvokeMacroWithVarForString = "" )
##
#**##if( $chanwInvokeMacroWithVarForStringMacroName.Class.Name == $JAVA_LANG_STRING_CLASS_NAME )
#*    *##set( $chanwStmt = "#$chanwInvokeMacroWithVarForStringMacroName(" )
##
#*    *##if( $chanwInvokeMacroWithVarForStringMacroParams.Class.Name == $JAVA_UTIL_ARRAY_LIST_CLASS_NAME )
#*        *##if( $chanwInvokeMacroWithVarForStringMacroParams.size() > 0 )
#*            *##foreach( $macroParam in $chanwInvokeMacroWithVarForStringMacroParams )
#*                *##if( $macroParam.Class.Name == $JAVA_LANG_STRING_CLASS_NAME )
#*                    *##set( $chanwStmt = $chanwStmt + "$" + $macroParam + " " )
#*                *##end
#*            *##end
#*        *##end
#*    *##end
##
#*    *##set( $chanwStmt = $chanwStmt.trim() )
#*    *##set( $chanwStmt = $chanwStmt + ")" )
#*    *##set( $chanwStmt = '#set($' + $chanwInvokeMacroWithVarForStringVarName + '="' + $chanwStmt + '")' )
$chanwStmt
#*    *##evaluate( $chanwStmt )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwIsInstanceOf( $obj $className )《/code》
《p》Returns a boolean string, indicating whether the object is an instance of
the suppled class name. The result is stored in
《code》$chanwIsInstanceOf《/code》. Example:《/p》
《pre》
#chanwIsInstanceOf( $list “java.util.concurrent.BlockingDeque“ )
$chanwIsInstanceOf$BR## output false
《/pre》
《/documentation》
《macro id=“chanwIsInstanceOf”》
doc*###
#macro( chanwIsInstanceOf $chanwIsInstanceOfObj $chanwIsInstanceOfClassName )
#if( $_PropertyTool.isNull( $chanwIsInstanceOfObj ) )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "The object cannot be null." "msg487548" )
#stop
#end
##
#if( !$chanwIsInstanceOfClassName || $chanwIsInstanceOfClassName.Class.Name != $JAVA_LANG_STRING_CLASS_NAME )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A valid class name is required." "9065jeiwhrjklhiwj r jgj ." )
#stop
#end
##
#set( $chanwIsInstanceOf = "" )
##
## matching the class name passed in
#if( $chanwIsInstanceOfClassName.equals( $chanwIsInstanceOfObj.Class.Name ) )
#set( $chanwIsInstanceOf = true )
#else
#set( $chanwInterfaces   = $globalApacheClassUtils.getAllInterfaces( $chanwIsInstanceOfObj.Class ) )
#set( $chanwSuperclasses = $globalApacheClassUtils.getAllSuperclasses( $chanwIsInstanceOfObj.Class ) )
##
## check interfaces
#foreach( $interface in $chanwInterfaces )
#if( $chanwIsInstanceOfClassName.equals( $interface.Name ) )
#set( $chanwIsInstanceOf = true )
#break
#end
#end
##
## check superclasses
#if( $chanwIsInstanceOf == "" )
#foreach( $superclass in $chanwSuperclasses )
#if( $chanwIsInstanceOfClassName.equals( $superclass.Name ) )
#set( $chanwIsInstanceOf = true )
#break
#end
#end
#end
##
## still no match
#if( $chanwIsInstanceOf == "" )
#set( $chanwIsInstanceOf = false )
#end
#end
#end
#*doc
《/macro》
《documentation》
《code》#chanwLocateAsset( $folderPath $siteName $assetName $stop )《/code》
《p》Locates the named asset. The asset located is stored in
《code》$chanwLocateAsset《/code》. If the asset cannot be located, and if
《code》$stop《/code》 is not set to true, then 《code》$chanwLocateAsset《/code》
will store the empty string. Example:《/p》
《pre》
#chanwLocateAsset( "formats/library/velocity" "_core" "chanw_display_velocity_code" )
#set( $code = $chanwLocateAsset.Script )
《/pre》
《/documentation》
《macro id=“chanwLocateAsset”》
doc*###
#macro ( chanwLocateAsset $chanwLocateAssetFolderPath $chanwLocateAssetSiteName $chanwLocateAssetAssetName $chanwLocateAssetStop )
    #if( !$chanwLocateAssetFolderPath || !$chanwLocateAssetSiteName || !$chanwLocateAssetAssetName )
$CHANW_INITIALIZATION_FORMAT_NAME, chanwLocateAsset: Three non-empty strings are required: folder path, site name, and asset name.
        #stop
    #end
##
    #if( $chanwLocateAssetFolderPath.Class.Name != $JAVA_LANG_STRING_CLASS_NAME ||
        $chanwLocateAssetFolderPath == "" || $chanwLocateAssetSiteName.Class.Name != $JAVA_LANG_STRING_CLASS_NAME ||
        $chanwLocateAssetSiteName == "" || $chanwLocateAssetAssetName.Class.Name != $JAVA_LANG_STRING_CLASS_NAME ||
        $chanwLocateAssetAssetName == "" )
$CHANW_INITIALIZATION_FORMAT_NAME, chanwLocateAsset: Three non-empty strings are required: folder path, site name, and asset name.
        #stop
    #end
##
    #set( $chanwFolderPath = $chanwLocateAssetFolderPath )
##
    ## fix the folder path
    #if( $chanwFolderPath.endsWith( '/' ) )
        #set( $chanwEndIndex = $chanwFolderPath.length() - 1 )
        #set( $chanwFolderPath = $chanwFolderPath.substring( 0, $chanwEndIndex ) )
    #end
##
    #set( $chanwFolderAPI = "" )
    #set( $chanwFolderAPI   = $_.locateFolder( $chanwFolderPath, $chanwLocateAssetSiteName ) )
    #set( $chanwLocateAsset = "" )
##
    #if( $chanwFolderAPI != "" ) ## the folder cannot be located
    ## Cannot call chanwOutputErrorMsg due to recursion cap.
chanw_initialization, chanwLocateAsset: The folder $chanwFolderPath in site $chanwLocateAssetSiteName cannot be located.
        #if( $chanwLocateAssetStop == true )
            #stop
        #end
    #else
        #set( $chanwFolderAPIChildren = $chanwFolderAPI.getChildren() )
##
        #if( !$chanwFolderAPIChildren )
##chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "The folder has no children." "I4345NF." )
            #if( $chanwLocateAssetStop == true )
                #stop
            #end
        #else
            ## check every child and match the name
            #if( $chanwFolderAPIChildren.size() > 0 )
#foreach( $chanwFolderAPIChild as $chanwFolderAPIChildren )
#chanwGetFolderContainedAssetName( $chanwFolderAPIChild )
#if( $chanwGetFolderContainedAssetName == $chanwLocateAssetAssetName )
#set( $chanwLocateAsset = $chanwFolderAPIChild )
#break
#end
#end
            #end        
        #end
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwLocateAssetInAncestorFolder( $folderPath $siteName $type $name )《/code》
《p》Locates the asset by matching the type and name, starting from the supplied folder path.
《code》$folderPath《/code》 should be the path string of a folder containing the asset.
If the asset cannot be found, then look for the asset in the grandparent folder, and so on.《/p》
《p》Examples:《/p》
《pre》
#chanwLocateAssetInAncestorFolder(
    $currentPage.ParentFolder.Path $currentPageSiteName "block" "_site-info" )
$chanwLocateAssetInAncestorFolder.Name
《/pre》
《/documentation》
《macro id=“chanwLocateAssetInAncestorFolder”》
doc*#
#macro( chanwLocateAssetInAncestorFolder $chanwLocateAssetInAncestorFolderFolderPath $chanwLocateAssetInAncestorFolderSiteName $chanwLocateAssetInAncestorFolderType $chanwLocateAssetInAncestorFolderName )
    #set( $chanwLocateAssetInAncestorFolder = "" )
    #set( $chanwFolder = $_.locateFolder( $chanwLocateAssetInAncestorFolderFolderPath, $chanwLocateAssetInAncestorFolderSiteName ) )

    #if( $chanwFolder )
        #set( $chanwChildren = $chanwFolder.Children )
        
        #foreach( $child in $chanwChildren )
            #if( $child.Identifier.Type == $chanwLocateAssetInAncestorFolderType && $child.Name == $chanwLocateAssetInAncestorFolderName )
                #set( $chanwLocateAssetInAncestorFolder = $child )
                #break
            #end
        #end
        
        #set( $chanwFolderParentPath = "" )
        
        #if( $chanwLocateAssetInAncestorFolder == "" )
            #set( $chanwFolderParentPath = 
                $chanwFolder.ParentFolderIdentifier.Path.PathAsString )

            ## recursive call
            #if( $chanwFolderParentPath != "" )
                #chanwLocateAssetInAncestorFolder(
                    $chanwFolderParentPath $chanwLocateAssetInAncestorFolderSiteName $chanwLocateAssetInAncestorFolderType $chanwLocateAssetInAncestorFolderName )
            #end
        #end
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwLocateAssetWithFullPath( $path $type $siteName )《/code》
《p》Locates the asset by calling 《code》$_.locate《/code》. The asset located is stored in
《code》$chanwLocateAssetWithFullPath《/code》. If the asset cannot be located, then
《code》$chanwLocateAssetWithFullPath《/code》 will store the empty string. Example:《/p》
《pre》
#chanwLocateAssetWithFullPath( "core/library/velocity/chanw/chanw_initialization" $CASCADE_API_FORMAT_TYPE "_brisk" )
#set( $code = $chanwLocateAssetWithFullPath.Script )
《/pre》
《/documentation》
《macro id=“chanwLocateAssetWithFullPath”》
doc*###
#macro ( chanwLocateAssetWithFullPath $chanwLocateAssetWithFullPathPath $chanwLocateAssetWithFullPathType $chanwLocateAssetWithFullPathSiteName )
    #set( $chanwLocateAssetWithFullPath = "" )
    #set( $chanwLocateAssetWithFullPath = $_.locate( $chanwLocateAssetWithFullPathPath, $chanwLocateAssetWithFullPathType, $chanwLocateAssetWithFullPathSiteName ) )
#end
#*doc
《/macro》
《documentation》
《code》#chanwOutputErrorMsg( $parentPath $siteName $formatName $msg $uniqueId )《/code》
《p》Locates the named assets. The asset located is stored in
《code》$chanwLocateAsset《/code》. Example:《/p》
《pre》
#chanwLocateAsset( "formats/library/velocity" "_core" "chanw_display_velocity_code" )
#set( $code = $chanwLocateAsset.Script )
《/pre》
《/documentation》
《macro id=“chanwOutputErrorMsg”》
doc*###
#macro( chanwOutputErrorMsg $chanwOutputErrorMsgParentPath $chanwOutputErrorMsgSiteName $chanwOutputErrorMsgFormatName $chanwOutputErrorMsgMsg $chanwOutputErrorMsgUniqueId )
    #chanwLocateAsset( $chanwOutputErrorMsgParentPath $chanwOutputErrorMsgSiteName $chanwOutputErrorMsgFormatName )
    #set( $chanwScript = $chanwLocateAsset.Script )
    #set( $chanwScriptArray = $chanwScript.split( "\r" ) )
##
#foreach( $line in $chanwScriptArray )
#if( $line.contains( $chanwOutputErrorMsgUniqueId ) )
$chanwOutputErrorMsgParentPath/$chanwOutputErrorMsgFormatName, line $foreach.count: $chanwOutputErrorMsgMsg
#break
#end
#end
#end
#*doc
《/macro》
《documentation》
《code》#chanwProcessBlockChooser( $content )《/code》
《p》Processes a block chooser or a region. When it is a region, what is passed
in is a Document object. Otherwise, it is an Element whose name is content.
Why parent of the root element is passed in: a text block may not have a root
element.《/p》
《/documentation》
《macro id=“chanwProcessBlockChooser”》
doc*###
#macro( chanwProcessBlockChooser $chanwProcessBlockChooserContent )
    #chanwIsInstanceOf( $chanwProcessBlockChooserContent "com.hannonhill.cascade.api.adapters.BlockAPIAdapter" )
    #set( $chanwIsBlockAPIAdapter = $chanwIsInstanceOf )
    
    #if( $chanwIsBlockAPIAdapter )
        #set( $chanwBlockAPIAdapterClassName = $chanwProcessBlockChooserContent.Class.Name )
    #else
        #set( $chanwBlockAPIAdapterClassName = "" )
    #end

#**### switch between Docuement and Element
#**##if( $chanwProcessBlockChooserContent.Class.Name == $ORG_JDOM_DOCUMENT_CLASS_NAME )
        #set( $chanwContentChildren = $chanwProcessBlockChooserContent.getContent() )
#**##else
        #set( $chanwContentChildren = $chanwProcessBlockChooserContent.getChildren() )
#**##end
##
#**### plain text or code
#**##if( $chanwContentChildren.size() == 0 )
#*    *#$_SerializerTool.serialize( $chanwProcessBlockChooserContent, true )
    #elseif( $chanwBlockAPIAdapterClassName == "com.hannonhill.cascade.api.adapters.TextBlockAPIAdapter" )
        $chanwProcessBlockChooserContent.Text
#**### at least one child
#**##elseif( $chanwContentChildren.size() > 0 || $chanwIsBlockAPIAdapter )
        #if( !$chanwIsBlockAPIAdapter && $chanwContentChildren.size() > 0 )
#*    *### create a global variable storing the first child
#*    *### normally the root element
#*        *##set( $chanwFirstChild = $chanwContentChildren.get( 0 ) )
#*        *##set( $chanwChildName  = $chanwFirstChild.Name )
#*        *##set( $chanwChildPath  = $chanwProcessBlockChooserContent.getParent().getChild( 'path' ).Value )
#*        *##set( $chanwBlockName  = $chanwChildPath )
##
#*        *### there is at least one slash in the path
#*        *##set( $chanwLastIndexOfSlash = $chanwBlockName.lastIndexOf( '/' ) + 1 )
##
#*        *### get the name of the block
#*        *##if( $chanwLastIndexOfSlash > -1 )
#*            *##set( $chanwBlockName = $chanwBlockName.substring( $chanwLastIndexOfSlash ) )
#*        *##end
        #else
#*        *##set( $chanwFirstChild = "" )
#*        *##set( $chanwChildName  = "" )
#*        *##set( $chanwChildPath  = "" )
#*        *##set( $chanwBlockName  = "" )
            #set( $chanwBlockName = $chanwProcessBlockChooserContent.Name )
        #end
##
#*    *##if( $chanwBlockName.endsWith( 'dd-macro' ) )
#*        *##chanwInvokeMacro( "chanwProcessDDBlockWithMacro" [ "chanwFirstChild" ] )
#*    *### macro blocks
#*    *##elseif( $chanwBlockName.endsWith( 'Macro' ) || $chanwBlockName.endsWith( 'macro' ) )
#*        *##chanwInvokeMacro( "chanwProcessBlockWithMacro" [ "chanwFirstChild" ] )
#*    *### text blocks
#*    *##elseif( $chanwBlockName.endsWith( 'Text' ) || $chanwBlockName.endsWith( 'text' ) ) 
#*        *#$_SerializerTool.serialize( $chanwProcessBlockChooserContent, true )
#*    *### script blocks
#*    *##elseif( $chanwBlockName.endsWith( 'Script' ) || $chanwBlockName.endsWith( 'script' )  )
#*        *##chanwInvokeMacro( "chanwProcessScript" [ "chanwFirstChild" ] )
#*    *### data definition blocks
#*    *##elseif( $chanwChildName == $cascadeXML_ELEMENT_SYSTEM_DATA_STRUCTURE )
#*        *##chanwProcessDataDefinitionBlock( $chanwFirstChild )
        #elseif( $chanwBlockAPIAdapterClassName == "com.hannonhill.cascade.api.adapters.XHTMLDataDefinitionBlockAPIAdapter" )
            #chanwProcessDataDefinitionBlock( $chanwProcessBlockChooserContent )
#*    *### index block
#*    *##elseif( $chanwChildName == $cascadeXML_ELEMENT_SYSTEM_INDEX_BLOCK ) 
#*        *##chanwProcessIndexBlock( $chanwBlockName $chanwFirstChild )
#*    *### others, preferably having -xml, -feed suffixes
#*    *##else
#*        *##chanwConvertToPascalCase( $chanwBlockName "-" )
#*        *##set( $chanwMacroName = $MACRO_PREFIX + $chanwConvertToPascalCase )
#*        *##chanwInvokeMacro( $chanwMacroName [ "chanwFirstChild" ] )
#*    *##end
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwProcessBlockWithMacro( $chanwFirstChild )《/code》
《p》Processes a block containing a macro name in a dynamic field. This macro is
used by 《code》#chanwProcessBlockChooser《/code》. Note that when a block is
attached to a region, metadata of the block cannot be recovered. Therefore,
this macro only works for blocks attached to block choosers, not blocks attached
to regions.《/p》
《/documentation》
《macro id=“chanwProcessBlockWithMacro”》
doc*###
#macro( chanwProcessBlockWithMacro $chanwProcessBlockWithMacroFirstChild )
#**##set( $chanwMacroName = "" )
#**##set( $chanwDynamicMetadata = "" )
#**##set( $chanwDynamicMetadata = $_XPathTool.selectSingleNode( $chanwProcessBlockWithMacroFirstChild.Parent.Parent, "dynamic-metadata[name='macro']" ) )
##
#**##if( $chanwDynamicMetadata != "" )
#*    *##set( $chanwMacroName = $chanwDynamicMetadata.getChild( 'value' ).Value )
#**##end
##
#**##if( $chanwMacroName == "" )
#*    *##set( $chanwMacroName = "processUnknown" )
#**##end
##
#**##chanwInvokeMacro( $chanwMacroName [ "chanwFirstChild" ] )
#end
#*doc
《/macro》
《documentation》
《code》#chanwProcessDataDefinitionBlock( $systemDataStructure )《/code》
《p》Processes a data definition block with type information. The type is turned
into a macro name. This macro is used by 《code》#chanwProcessBlockChooser《/code》.《/p》
《/documentation》
《macro id=“chanwProcessDataDefinitionBlock”》
doc*###
#macro( chanwProcessDataDefinitionBlock $chanwProcessDataDefinitionBlockSystemDataStructure )
    #set( $chanwGroupName = "" )
##
    #if( $chanwProcessDataDefinitionBlockSystemDataStructure.Class.Name == $ORG_JDOM_ELEMENT_CLASS_NAME )
        #set( $chanwTopLevelElementSize = $chanwProcessDataDefinitionBlockSystemDataStructure.Children.size() )
        #set( $chanwTypeInfoElement     = "" )
        #set( $chanwTypeInfoElement     = $chanwProcessDataDefinitionBlockSystemDataStructure.getChild( 'block-type' ) )
        #set( $chanwDisplayElement      = $chanwProcessDataDefinitionBlockSystemDataStructure.getChild( 'display' ) )
##
#*    *##if( $chanwDisplayElement.Value.toLowerCase() == 'yes' )

#*    *### determine the group to be processed
#*        *##if( $chanwTopLevelElementSize == 2 && $chanwTypeInfoElement == "" )
#*            *##set( $chanwGroupToBeProcessed = $_XPathTool.selectSingleNode( $chanwDisplayElement, "following-sibling::node()" ) )
#*            *##set( $chanwGroupName = $chanwGroupToBeProcessed.Name )
#*        *##elseif( $chanwTopLevelElementSize > 2 && $chanwTypeInfoElement == "" )
#*            *##set( $chanwGroupName = $chanwProcessDataDefinitionBlockSystemDataStructure.Children[ 1 ].Value + "-group" )
            ## old block type
            #elseif( $chanwTypeInfoElement != "" )
                #set( $chanwGroupName = $chanwTypeInfoElement.Value )
                #chanwConvertToPascalCase( $chanwGroupName "-" )
                #set( $chanwMacroName = $MACRO_PREFIX + $chanwConvertToPascalCase )
                #chanwInvokeMacro( $chanwMacroName [ "chanwProcessDataDefinitionBlockSystemDataStructure" ] )
                #break
#*        *##else
#*            *##set( $chanwGroupName = "unknown" )
#*        *##end

##
#*    *### data retrieval
#*        *##set( $chanwPath = $chanwProcessDataDefinitionBlockSystemDataStructure.Parent.Parent.getChild( "path" ).Value )
#*        *##set( $chanwSite = $chanwProcessDataDefinitionBlockSystemDataStructure.Parent.Parent.getChild( "site" ).Value )
#*        *##set( $chanwGroupNode = $_.locateBlock( $chanwPath, $chanwSite ).getStructuredDataNodes( $chanwGroupName )[ 0 ] )
            #chanwGetFQINodeMap( $chanwGroupNode $chanwProcessDataDefinitionBlockSystemDataStructure )
        #end
    #elseif( $chanwProcessDataDefinitionBlockSystemDataStructure.Class.Name == $COM_CASCADE_DATA_BLOCK_API_CLASS_NAME )
        #chanwGetFQINodeMap( $chanwProcessDataDefinitionBlockSystemDataStructure.StructuredData )
        ## multi-functional
        #if( $chanwGetFQINodeMap[ "choose-type" ][ $KEY_DATA ] )
            #set( $chanwGroupName = $chanwGetFQINodeMap[ "choose-type" ][ $KEY_DATA ] + "-group" )
        ## for single functional block, there is only one group, which is the second node
        #else
            #set( $chanwGroupName = $chanwProcessDataDefinitionBlockSystemDataStructure.StructuredData[ 1 ].Identifier )
        #end
    #end
##
#*    *### compute macro name from group name
#**##chanwConvertToPascalCase( $chanwGroupName "-" )
#**##set( $chanwMacroName = $MACRO_PREFIX + $chanwConvertToPascalCase )
##
#**### invoke macro
#**##chanwInvokeMacro( $chanwMacroName [ "chanwGetFQINodeMap" ] )
#**###else
#*    *### do nothing if no
#**###end
#end
#*doc
《/macro》
《documentation》
《code》#chanwProcessDDBlockWithMacro( $systemDataStructure )《/code》
《p》Processes a data definition block with macro name. The macro name should
be contained in a field named 《code》macro《/code》, which should be a root
field. This macro is used by 《code》#chanwProcessBlockChooser《/code》.《/p》
《/documentation》
《macro id=“chanwProcessDDBlockWithMacro”》
doc*###
#macro( chanwProcessDDBlockWithMacro $chanwProcessDDBlockWithMacroSystemDataStructure )
#**##set( $chanwMacroName = "processUnknown" )
#**##set( $chanwMacroName = $chanwProcessDDBlockWithMacroSystemDataStructure.getChild( 'macro' ).Value )
#**##chanwInvokeMacro( $chanwMacroName [ "systemDataStructure" ] )
#end
#*doc
《/macro》
《documentation》
《code》#chanwProcessIndexBlock( $chanwBlockName $chanwFirstChild )《/code》
《p》Processes an index block. The name of the block is turned into a macro name.
This macro is used by 《code》#chanwProcessBlockChooser《/code》.《/p》
《/documentation》
《macro id=“chanwProcessIndexBlock”》
doc*###
#macro( chanwProcessIndexBlock $chanwProcessIndexBlockBlockName $chanwProcessIndexBlockFirstChild )
#**##chanwConvertToPascalCase( $chanwProcessIndexBlockBlockName "-" )
#**##set( $chanwMacroName = $MACRO_PREFIX + $chanwConvertToPascalCase )
#**##chanwInvokeMacro( $chanwMacroName [ "chanwProcessIndexBlockFirstChild" ] )
#end
#*doc
《/macro》
《documentation》
《code》#chanwProcessParams( $chanwStmt $params )《/code》
《p》Creates the param lists as a string and attaches it to the statement passed
in. Note that the global variable 《code》$chanwStmt《/code》 is passed in.
This macro is used by 《code》#chanwProcessScript《/code》.《/p》
《/documentation》
《macro id=“chanwProcessParams”》
doc*###
#macro( chanwProcessParams $chanwProcessParamsStmt $chanwProcessParamsParams )
#**##set( $chanwParamsChildren = $chanwProcessParamsParams.getChildren() )
##
#**##if( $chanwParamsChildren.size() > 0 )
#*    *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + "(" )
##
#*    *##foreach( $child in $chanwParamsChildren )
#*        *##if( $child.Name == "param" )
#*            *##if( $child.Value.trim() != "" )
#*                *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + "'" + $child.Value.trim() + "' " )
#*            *##end
#*        *##elseif( $child.Name == "variable" )
#*            *##if( $child.Value.trim() != "" )
#*                *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + "$" + $child.Value.trim() + " " )
#*            *##end
#*        *##elseif( $child.Name == "list" )
#*            *##set( $chanwListChildren = $child.getChildren() )
##
#*            *##if( $chanwListChildren.size() > 0 )
#*                *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + "[" )
##
#*                *##foreach( $list_child in $chanwListChildren )
#*                    *##if( $list_child.Name == "param" )
#*                        *##if( $list_child.Value.trim() != "" )
#*                            *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + "'" + $list_child.Value.trim() + "', " )
#*                        *##end
#*                    *##elseif( $list_child.Name == "variable" )
#*                        *##if( $list_child.Value.trim() != "" )
#*                            *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + "$" + $list_child.Value.trim() + ", " )
#*                        *##end
#*                    *##end
#*                *##end
##
#*                *### remove last comma
#*                *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt.trim() )
##
#*                *##if( $chanwProcessParamsStmt.endsWith( "," ) )
#*                    *##set( $chanwEndIndex = $chanwProcessParamsStmt.length() - 1 )
#*                    *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt.substring( 0, $chanwEndIndex ) )
#*                *##end
##
#*                *##set( $chanwProcessParamsStmt = " " + $chanwProcessParamsStmt + "]" )
#*            *##end
#*        *##elseif( $child.Name == "map" )
#*            *##set( $chanwMapPairs = $child.getChildren() )
##
#*            *##if( $chanwMapPairs.size() > 0 )
#*                *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + "{" )
##
#*                *##foreach( $map_pair in $chanwMapPairs )
#*                    *##set( $chanwKey = $map_pair.getChild( "key" ) )
#*                    *##set( $chanwValue = $map_pair.getChild( "value" ) )
##
#*                    *##if( $chanwKey )
#*                        *##set( $chanwKey = $chanwKey.Value.trim() )
#*                    *##end
##
#*                    *##if( $chanwValue )
#*                        *##set( $chanwValue = $chanwValue.Value.trim() )
#*                    *##end
##
#*                    *##if( $chanwKey != "" && $chanwValue != "" )
#*                        *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + "'$chanwKey':'$chanwValue'," )
#*                    *##end
#*                *##end
#*                *### remove last comma
#*                *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt.trim() )
##
#*                *##if( $chanwProcessParamsStmt.endsWith( "," ) )
#*                    *##set( $chanwEndIndex = $chanwProcessParamsStmt.length() - 1 )
#*                    *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt.substring( 0, $chanwEndIndex ) )
#*                *##end
##
#*                *##set( $chanwProcessParamsStmt = " " + $chanwProcessParamsStmt + "}" )
#*            *##end
#*        *##end
#*    *##end
##
#*    *##set( $chanwProcessParamsStmt = $chanwProcessParamsStmt + ")" )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwProcessScript( $chanwFirstChild )《/code》
《p》Processes a script block. A script block is an XML block whose name must
have a '-script' suffix. The 《code》$chanwFirstChild《/code》 is the
《code》scripts《/code》 element. The 《code》scripts《/code》 should contain
a single 《code》code《/code》 element, which can contain any Velocity code.
Code inside cannot contain 《code》<《/code》, 《code》>《/code》 and
《code》&&《/code》. Use 《code》&lt;《/code》, 《code》&gt;《/code》 and
《code》-aa-《/code》 instead. Example:《/p》
《pre》
<scripts>
    <code>
#import( "site://_core/formats/library/velocity/chanw_display_velocity_code" )
#chanwGetMacroCode( "chanw_object_creator" "formats/library/velocity" "_core" "chanwGetObjectByClassName" )
#chanwDisplayHideVelocityCode( $chanwGetMacroCode "hide-code1" "true" "false" )
    </code>
</scripts>
《/pre》
《/documentation》
《macro id=“chanwProcessScript”》
doc*###
#macro( chanwProcessScript $chanwProcessScriptFirstChild )
#**### allow only one code element, and process it first
#**##set( $chanwCode = $chanwProcessScriptFirstChild.getChild( 'code' ) )
##
#**##if( $chanwCode )
#*    *##set( $chanCodeStmt = $chanwCode.Value.replaceAll(  '&lt;', '<' ).replaceAll( '&gt;', '>' ).replaceAll( '-aa-', '&&' ) )
#*    *##evaluate( $chanCodeStmt )
#**##end
#end
#*doc
《/macro》
《documentation》
《code》#chanwReinitializeListOfVariables( $list )《/code》
《p》Reinitializes the list of global variables, all assigned the empty string.
The list passed in should be variable names without the dollar signs. Example:《/p》
《pre》
#chanwReinitializeListOfVariables( [ “first“, “second“, “third“ ] )
《/pre》
《/documentation》
《macro id=“chanwReinitializeListOfVariables”》
doc*###
#macro( chanwReinitializeListOfVariables $chanwReinitializeListOfVariablesList )
    #if( $chanwReinitializeListOfVariablesList.class.name != $JAVA_UTIL_ARRAY_LIST_CLASS_NAME )
        A list of variable names is required.
        #stop
    #end
    #if( $chanwReinitializeListOfVariablesList.size() > 0 )
        #foreach( $var in $chanwReinitializeListOfVariablesList )
            #chanwSetVariable( $var "" )
        #end
    #end
#end
#*doc
《/macro》
《documentation》
《code》#chanwReviveGlobalVariable( $globalVarName $ns )《/code》
《p》Accepting a global variable name, and possibly a namespace, stores the value
of the global varaible in 《code》$chanwReviveGlobalVariable《/code》. Example:《/p》
《pre》
#chanwReviveGlobalVariable( "SiteTitle" $namespace )
$chanwReviveGlobalVariable
《/pre》
《/documentation》
《macro id=“chanwReviveGlobalVariable”》
doc*###
#macro( chanwReviveGlobalVariable $chanwReviveGlobalVariableGlobalVarName $chanwReviveGlobalVariableNs )
    #set( $chanwReviveGlobalVariable = "" )
    #set( $chanwGlobalVarName = $chanwReviveGlobalVariableGlobalVarName )
##
    #if( $chanwReviveGlobalVariableNs.Class.Name == $JAVA_LANG_STRING_CLASS_NAME && $chanwReviveGlobalVariableNs != "" )
        #set( $chanwGlobalVarName = $chanwReviveGlobalVariableNs + $chanwReviveGlobalVariableGlobalVarName )
    #end
##
    #set( $chanwStmt = '#' + 'set($chanwReviveGlobalVariable=' + "$$chanwGlobalVarName" + ')' )
    #evaluate( $chanwStmt )
#end
#*doc
《/macro》
《documentation》
《code》#chanwSetVariable( $var $val $escape )《/code》
《p》Dynamically turns 《code》$var《/code》 into a variable assigned with the value
《code》$val《/code》. The value of 《code》$var《/code》 should be a variable name
without the dollar sign. Note that because the value of 《code》$val《/code》 can be
a String that contains characters like "<", which cannot be displayed on a page,
《code》$_EscapeTool.xml《/code》 will need to be called to escape unacceptable characters
in the String before it is assigned to the variable. Therefore, 《code》$escape《/code》
is set to 《code》false《/code》 by default. If no escaping is needed, pass in a
《code》true《/code》.《/p》
《pre》
#chanwSetVariable( "myVar" "myValue" )## String value
$myVar

#chanwSetVariable( "myVar" 1 )## int value
$myVar

#chanwSetVariable( "locator" $_ )## obj value
$locator.Class.Name

#chanwSetVariable( "map" {} )## obj value
#chanwSetVariable( "map['state']" "NY" )## a map as the variable
$map
《/pre》
《/documentation》
《macro id=“chanwSetVariable”》
doc*###
#macro( chanwSetVariable $chanwSetVariableVar $chanwSetVariableVal $chanwSetVariableEscape )
    ## check the variable name
    #if( !$chanwSetVariableVar || $chanwSetVariableVar.class.name != "java.lang.String" || $chanwSetVariableVar == "" )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "The variable name $chanwSetVariableVar is not acceptable." "ln;4V84GBIUBJKLV" )
        #stop
    #end
##
    ## escape defaulted to true
    #if( $_PropertyTool.isNull( $chanwSetVariableEscape ) || $chanwSetVariableEscape )
        #set( $chanwEscapeValue = true )
    #else
        #set( $chanwEscapeValue = false )
    #end
##
    #if( $_PropertyTool.isNull( $chanwSetVariableVal ) )
        #set( $chanwValue = "" )## default value
    #elseif( $chanwSetVariableVal.class.name == "java.lang.String" )
        #if( $chanwEscapeValue )
            #set( $chanwValue = $_EscapeTool.xml( $chanwSetVariableVal ).trim() )
        #else
            #set( $chanwValue = $chanwSetVariableVal.trim() )
        #end
    ## this is an object
    #else
        #set( $chanwValue = 'chanwSetVariableVal' )
    #end
##
    #if( !$chanwValue.equals( 'chanwSetVariableVal' ) )
        #set( $chanwSetVarValStatement = '#' + "set(" + "$" + "$chanwSetVariableVar = '$chanwValue')" )
    #else
        #set( $chanwSetVarValStatement = '#' + "set(" + "$" + "$chanwSetVariableVar = $" + $chanwValue + ")" )## object assignment
    #end
##
    #evaluate( $chanwSetVarValStatement )
#end
#*doc
《/macro》
《documentation》
《code》#chanwSetVariableToNonEmptyString( $var $list )《/code》
《p》Selects the first non-empty string and assigns it to the global variable.
Example:《/p》
《pre》
## $var assigned “content“
#chanwSetVariableToNonEmptyString( “var“ [ “ “, ““, “content“ ] )  
《/pre》
《/documentation》
《macro id=“chanwSetVariableToNonEmptyString”》
doc*###
#macro( chanwSetVariableToNonEmptyString $chanwSetVariableToNonEmptyStringVar $chanwSetVariableToNonEmptyStringList )
#**##if( $chanwSetVariableToNonEmptyStringList.class.name != $JAVA_UTIL_ARRAY_LIST_CLASS_NAME )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A list of strings is required." "3nipv4knvjkn" )
        #stop
#**##end
##
#**##set( $chanwSize = $chanwSetVariableToNonEmptyStringList.size() )
##
#**##if( $chanwSize == 0 )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "A list of strings is required." "MLRVIOUGOJKNY" )
        #stop
#**##end
##
#**##set( $chanwValue = "" ) ## empty string, the last resort
##
#foreach( $num in [ 1..$chanwSize ] )
#set( $chanwIndex = $num - 1 )
#if( $chanwSetVariableToNonEmptyStringList[ $chanwIndex ].class.name != $JAVA_LANG_STRING_CLASS_NAME )
#chanwOutputErrorMsg( $CHANW_LIBRARY_FOLDER_PATH $chanw_framework_site_name $CHANW_INITIALIZATION_FORMAT_NAME "Not a string." "bijog5iojnbm.gl" )
#stop
#end
#if( $chanwSetVariableToNonEmptyStringList[ $chanwIndex ].trim() != "" )
#set( $chanwValue = $chanwSetVariableToNonEmptyStringList[ $chanwIndex ].trim() )
#break
#end
#end
##
#chanwSetVariable( $chanwSetVariableToNonEmptyStringVar $chanwValue )
#end
#*doc
《/macro》
《documentation》
《code》#drulykgImportPassThrough ( $path )《/code》
《p》Cascade CMS does not allow the submission of a format if the #import directive points to an invalid path.
This macro circumvents this feature. It either imports the specified format or crashes to show a detailed
message.《/p》
《/documentation》
《macro id=“drulykgImportPassThrough”》
doc*###
#macro( drulykgImportPassThrough $drulykgImportPassThroughPath )
    #import( $drulykgImportPassThroughPath )
#end
#*doc
《/macro》
《documentation》
《code》thomaspeGetFeedPhoto $site $fileList《/code》
《p》Returns a file name from a list of file names, such that the file name is
the first name associated with an available file.
Example: 《/p》
《pre》
#set( $regularFile = "images/case-study-square-text.jpg")
#set( $smallerFile = "images/case-study-square.jpg" )
#set( $defaultFile = "images/news-family.jpg" )
## a list of file names
#set( $fileList = [ $regularFile, $smallerFile, $defaultFile ] )
#thomaspeGetFeedPhoto( "bioethics-in-brief" $fileList  )
$thomaspeGetFeedPhoto
《/pre》
《/documentation》
《macro id=“thomaspeGetFeedPhoto”》
doc*###
#macro( thomaspeGetFeedPhoto $thomaspeGetFeedPhotoSite $thomaspeGetFeedPhotoFiles )
    #if( $thomaspeGetFeedPhotoSite.Class.Name != $JAVA_LANG_STRING_CLASS_NAME ||
        $thomaspeGetFeedPhotoSite == "" )
        A site name is required.
        #stop
    #end
##
    #if( !$thomaspeGetFeedPhotoFiles ||
        $thomaspeGetFeedPhotoFiles.Class.Name != $JAVA_UTIL_ARRAY_LIST_CLASS_NAME ||
        $thomaspeGetFeedPhotoFiles.size() < 1 )
        A non-empty list of variable names is required.
        #stop
    #end
##
    #set( $thomaspeGetFeedPhoto = "" )
##
    #foreach( $file in $fileList )
        #if( !$_PropertyTool.isNull( $_.locateFile( $file , $thomaspeGetFeedPhotoSite ) ) )
            #set( $thomaspeGetFeedPhoto = $file )
            #break
        #end
    #end
#end
#*doc
《/macro》
《documentation》
《code》#thomaspeGetSrcSetCode ( $imagePath $imageSiteName $map )《/code》
《p》Returns a string of code in a variable for use in srcset images. Using
the parameters of an image path, image site location, and a custom map of values,
it finds if srcset image exists. If so it adds them, if not, it moves on.
Example: 《/p》
《pre》
#import("site://_core/formats/custom_macros")
#set( $image ="/images/computer-people.jpg" )
#set( $site = "thomas-test" )

#thomaspeSrcSetValues
#thomaspeGetSrcSetCode( $image $site $thomaspeSrcSetValues)
$thomaspeGetSrcSetCode
《/pre》
《/documentation》
《macro id=“thomaspeGetSrcSetCode”》
doc*###
#macro( thomaspeGetSrcSetCode $thomaspeGetSrcSetCodeImagePath $thomaspeGetSrcSetCodeImageSiteName $thomaspeGetSrcSetCodeMap )
    ## replace ".jpg" with array of replacements in order of priority
    ##set( $thomaspeGetSrcSetCode = "srcset='" )
    #set( $thomaspeEachImage = [] )
##
    #foreach( $imageOptions in $thomaspeGetSrcSetCodeMap.keySet()  )
        #set( $thomaspeImageOptionsFound = false )   
        #foreach( $imageSize in $thomaspeGetSrcSetCodeMap[ $imageOptions ] )
            #set( $thomaspeNewImagePath = $thomaspeGetSrcSetCodeImagePath.replaceAll( ".jpg", $imageSize ) )
            #if( !$_PropertyTool.isNull(
                $_.locateFile( $thomaspeNewImagePath, $thomaspeGetSrcSetCodeImageSiteName ) ) &&
                !$thomaspeImageOptionsFound )
                #set( $thomaspeImageOptionsFound = true )
                #set( $thomaspeWrittenOut =  " " )
                #set( $thomaspeWrittenOut =  " " + $S_SYSTEM_ASSET_LOCAL +
                    "site://" + $thomaspeGetSrcSetCodeImageSiteName + "/" +
                    $thomaspeNewImagePath + $E_SYSTEM_ASSET_LOCAL + " " +
                    $imageOptions )    
                #set( $void = $thomaspeEachImage.add( $thomaspeWrittenOut ) )
                ##set( $thomaspeGetSrcSetCode =
                ##    $thomaspeGetSrcSetCode + " " + $S_SYSTEM_ASSET_LOCAL +
                ##    "site://" + $thomaspeGetSrcSetCodeImageSiteName +
                ##    $thomaspeNewImagePath + $E_SYSTEM_ASSET_LOCAL + " " +
                ##    $imageOptions + ", ")
            #end
        #end
    #end
##
    #set( $thomaspeGetSrcSetCode = "" )
    #if ($thomaspeEachImage.size() > 1)
        #set( $thomaspeGetSrcSetCode = "srcset='" )
        #foreach ( $thomaspeImage in $thomaspeEachImage )
             #set( $thomaspeGetSrcSetCode = $thomaspeGetSrcSetCode + $thomaspeImage )
             #if($foreach.count != $thomaspeEachImage.size())
                #set( $thomaspeGetSrcSetCode = $thomaspeGetSrcSetCode + "," )
             #end
        #end
        #set( $thomaspeGetSrcSetCode = $thomaspeGetSrcSetCode + "'" )
    #end
    ##set( $thomaspeGetSrcSetCode = $thomaspeGetSrcSetCode + "'" )
#end ##end macro
#*doc
《/macro》
《documentation id=“bottom“》
《h2》References《/h2》
《ul》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/01%20basics/list.vm“》ArrayList examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheBooleanUtils.vm“》BooleanUtils examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/02%20numbers_strings_dates/calendar.vm“》Calendar examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheClassTool.vm“》ClassTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheClassUtils.vm“》ClassUtils examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheConversionTool.vm“》ConversionTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/02%20numbers_strings_dates/date.vm“》Date and DateTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tools/display_tool.vm“》DisplayTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tools/escape_tool.vm“》$_EscapeTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/01%20basics/map.vm“》HashMap examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheMathTool.vm“》MathTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/02%20numbers_strings_dates/number_and_array.vm“》Number and array examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheNumberTool.vm“》NumberTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheNumberUtils.vm“》NumberUtils examples《/a》《/li》
《li》SAXBuilder example
《ul》
《li》《a href=“https://github.com/wingmingchan/php-cascade-ws-ns-examples/blob/master/xml_feed/index_block_xml.php“》A web service program to produce a feed, containing XML from an index block《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/03%20working_with_block_xml/create_content_root_from_feed.vm“》A format that uses the LocatorTool to read indexed XML from a feed block《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/library/chanw_initialization.vm“》The library macro 《code》#chanw_initialization.vm《/code》《/a》《/li》
《/ul》
《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tools/sort_tool.vm“》SortTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/02%20numbers_strings_dates/string_and_array.vm“》String and array examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheStringUtils.vm“》StringUtils examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheStringEscapeUtils.vm“》StringEscapeUtils examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheWordUtils.vm“》WordUtils examples《/a》《/li》
《/ul》
《/documentation》
《/code》
doc*###