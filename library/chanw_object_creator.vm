#*
《code》
《copyright》
Author: Wing Ming Chan
Copyright (c) 2017 Wing Ming Chan <chanw@upstate.edu>
MIT Licensed
Modification history:
5/12/2017 Updated documentation.
2/6/2017 Fixed an error in documentation of chanwSetVariable.
《/copyright》
《documentation id=“top”》
《h2》Introduction《/h2》
《p》This format provides macros to create objects and to retrieve constructors,
field values, and methods, using Java reflection. These macros then are used to create
a whole set of global utility objects.《/p》
《/documentation》
《global-variables》
*#
#set( $chanwObjectCreatorGlobalVariables = [
    "chanwClassObj",
    "chanwClassStaticMethodMap",
    "chanwClassStaticMethodMapKeySet",
    "chanwConstructor",
    "chanwConstructors",
    "chanwFieldObj",
    "chanwGetConstantValueByClassNameConstantName",
    "chanwGetConstructorByClassNameParamSize",
    "chanwGetConstructorByClassNameParamTypeArray",
    "chanwGetMethodByClassNameMethodNameParamTypes",
    "chanwGetObjectByClassName",
    "chanwGetStaticMethodByClassNameMethodNameWithoutParams",
    "chanwParamListString",
    "chanwParamsMatched",
    "chanwParamTypes",
    "chanwSetVarValStatement",
    "chanwStmt",
    "chanwToolKeys",
    "chanwTools",
    "chanwValue"
] )
#*
《/global-variables》
《documentation》
《code》#chanwGetObjectByClassName( $className )《/code》
《p》Returns an object of the class, calling the default constructor. Example:《/p》
《pre》
#chanwGetObjectByClassName( 'org.apache.velocity.tools.generic.LinkTool' )
#set( $globalApacheLinkTool = $chanwGetObjectByClassName )
《/pre》
《/documentation》
《macro id=“chanwGetObjectByClassName”》
*#
#macro( chanwGetObjectByClassName $className )
    ## check the class name string
    #if( !$className || $className.Class.Name != "java.lang.String" || $className == "" )
        A valid class name is required.<br />
        #stop
    #end

    #set( $chanwGetObjectByClassName = "" ) ## reinitialize the global variable
    ## retrieve the default constructor
    #chanwGetConstructorByClassNameParamSize( $className 0 )
    #set( $chanwConstructor = $chanwGetConstructorByClassNameParamSize )
    
    ## found
    #if( $chanwConstructor )
        ## create and return the object
        #set( $chanwGetObjectByClassName = $chanwConstructor.newInstance() )
    #else ## not found, clean up and issue a warning
        #set( $chanwGetObjectByClassName = "" )
        No default constructor is found.<br />
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetConstructorByClassNameParamSize( $chanwClassName $chanwParamSize )《/code》
《p》Returns the first constructor that accepts the specified number of parameters. Example:《/p》
《pre》
#chanwGetConstructorByClassNameParamSize( 'org.jdom.Text' 1 )
#set( $chanwConstructor = $chanwGetConstructorByClassNameParamSize )
#set( $globalJDOMText   = $chanwConstructor.newInstance( ““ ) )
《/pre》
《/documentation》
《macro id=“chanwGetConstructorByClassNameParamSize”》
*#
#macro( chanwGetConstructorByClassNameParamSize $chanwClassName $chanwParamSize )
    ## check the class name string
    #if( !$chanwClassName || $chanwClassName.Class.Name != "java.lang.String" || $chanwClassName == "" )
        A valid class name is required.<br />
        #stop
    #end

    ## check the param size integer
    #if( $chanwParamSize.Class.Name != "java.lang.Integer" || $chanwParamSize < 0 )
        An integer larger than -1 is required.<br />
        #stop
    #end

    ## get all constructors
    #set( $chanwGetConstructorByClassNameParamSize = "" )
    #set( $chanwClassObj = $_.Class.forName( $chanwClassName ) )
    #set( $chanwConstructors  = $chanwClassObj.getConstructors() )
  
    ## find the one with the right param size
    #foreach( $constructor in $chanwConstructors )
        ## found
        #if( $constructor.getParameterTypes().size() == $chanwParamSize )
            #set( $chanwGetConstructorByClassNameParamSize = $constructor )
            #break
        #end
    #end
    ## not found, issue a warning
    #if( $chanwGetConstructorByClassNameParamSize == "" )
    Constructor not found.<br />
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetConstructorByClassNameParamTypeArray( $chanwClassName $chanwTypeArray )《/code》
《p》Returns the constructor by matching the parameter list. Example:《/p》
《pre》
#chanwGetConstructorByClassNameParamTypeArray( 'java.lang.StringBuffer' [ 'int' ] )
#set( $chanwConstructor   = $chanwGetConstructorByClassNameParamTypeArray )
#set( $globalStringBuffer = $chanwConstructor.newInstance( 10000 ) )
《/pre》
《/documentation》
《macro id=“chanwGetConstructorByClassNameParamTypeArray”》
*#
#macro( chanwGetConstructorByClassNameParamTypeArray $chanwClassName $chanwTypeArray )
    ## check the class name string
    #if( !$chanwClassName || $chanwClassName.Class.Name != "java.lang.String" || $chanwClassName == "" )
        A valid class name is required.<br />
        #stop
    #end
    
    ## check the param type array
    #if( !$chanwTypeArray || !$chanwTypeArray.size() )
        An array of types is required.<br />
        #stop
    #end

    ## get all constructors
    #set( $chanwGetConstructorByClassNameParamTypeArray = "" )
    #set( $chanwClassObj = $_PropertyTool.class.forName( $chanwClassName ) )
    #set( $chanwConstructors  = $chanwClassObj.getConstructors() )
  
    #foreach( $constructor in $chanwConstructors )
        #set( $chanwParamsMatched = true )
        #set( $chanwParamTypes    = $constructor.getParameterTypes() )

        ## match the size
        #if( $chanwParamTypes.size() == $chanwTypeArray.size() )
            ## match the types
            #foreach( $type in $chanwParamTypes )
                #if( !$type.getName().equals( $chanwTypeArray[ $foreach.index ] ) )
                    #set( $chanwParamsMatched = false )
                #end
            #end
            
            ## found
            #if( $chanwParamsMatched )
                #set( $chanwGetConstructorByClassNameParamTypeArray = $constructor )
                #break
            #end
        #end
    #end
    
    ## not found, issue a warning
    #if( $chanwGetConstructorByClassNameParamTypeArray == "" )
    Constructor not found.<br />
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetConstantValueByClassNameConstantName( $chanwClassName $chanwConstantName )《/code》
《p》Returns the field value of a field name defined in a class. Example:《/p》
《pre》
#chanwGetConstantValueByClassNameConstantName( 'com.hannonhill.cascade.velocity.CascadeComparisonDateTool' 'MILLIS_PER_YEAR' )
$chanwGetConstantValueByClassNameConstantName
《/pre》
《/documentation》
《macro id=“chanwGetConstantValueByClassNameConstantName”》
*#
#macro( chanwGetConstantValueByClassNameConstantName $chanwClassName $chanwConstantName )
    ## check the class name string
    #if( !$chanwClassName || $chanwClassName.Class.Name != "java.lang.String" || $chanwClassName == "" )
        A valid class name is required.
        #stop
    #end

    ## check the constant name string
    #if( !$chanwConstantName || $chanwConstantName.Class.Name != "java.lang.String" || $chanwConstantName == "" )
        A valid constant name is required.<br />
        #stop
    #end

    ## get all fields
    #set( $chanwGetConstantValueByClassNameConstantName = "" )
    #set( $chanwClassObj  = $_.Class.forName( $chanwClassName ) )
    #set( $chanwFieldObj  = $chanwClassObj.getField( $chanwConstantName ) )
    #set( $chanwGetConstantValueByClassNameConstantName = $chanwFieldObj.get( null ) )

    ## not found
    #if( $chanwGetConstantValueByClassNameConstantName == "" )
    The field is not found.<br />
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwGetMethodByClassNameMethodNameParamTypes( $chanwClassName $chanwMethodName $chanwParamList )《/code》
《p》Returns the named method of a class. The 《code》$chanwParamList《/code》 must be a list of strings,
representing class objects, or a single class object. Example:《/p》
《pre》
#chanwGetMethodByClassNameMethodNameParamTypes( “java.lang.Math“ “abs“ '$_FieldTool.in( “java.lang.Double“ ).TYPE' )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( null, -2.5 )

#set( $paramList = [ '$_FieldTool.in( “java.lang.Double“ ).TYPE' ] )
#chanwGetMethodByClassNameMethodNameParamTypes( 'java.lang.Math' 'abs' $paramList )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( null, -3 )

#set( $paramList = [ '$_FieldTool.in( “java.lang.Double“ ).TYPE', '$_FieldTool.in( “java.lang.Double“ ).TYPE' ] )
#chanwGetMethodByClassNameMethodNameParamTypes( 'java.lang.Math' 'min' $paramList )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( null, -3, -4 )

#set( $str = ““ )
#set( $paramList = [ '$str.Class' ] )
#chanwGetMethodByClassNameMethodNameParamTypes( 'java.lang.String' 'concat' $paramList )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( “Hello, “, “World!” )

#chanwGetMethodByClassNameMethodNameParamTypes( 'java.lang.String' 'indexOf' $paramList )
$chanwGetMethodByClassNameMethodNameParamTypes.invoke( “Hello ”, “e” )
《/pre》
《/documentation》
《macro id=“chanwGetMethodByClassNameMethodNameParamTypes”》
*#
#macro( chanwGetMethodByClassNameMethodNameParamTypes $chanwClassName $chanwMethodName $chanwParamList )
    ## check the class name string
    #if( !$chanwClassName || $chanwClassName.Class.Name != "java.lang.String" || $chanwClassName == "" )
        A valid class name is required.<br />
        #stop
    #end

    ## check the method name string
    #if( !$chanwMethodName || $chanwMethodName.Class.Name != "java.lang.String" || $chanwMethodName == "" )
        A valid method name is required.<br />
        #stop
    #end

    #set( $chanwClassObj  = $_.Class.forName( $chanwClassName ) )
    #set( $chanwParamListString = $_DisplayTool.list( $chanwParamList, "," ) )
    
    ## check the param list string
    #if( !$chanwParamListString )
        A param list is required.<br />
        #stop
    #end
    
    #set( $chanwGetMethodByClassNameMethodNameParamTypes = "" )
    
    ## create and execute a statement
    #set( $chanwStmt = '#set($chanwGetMethodByClassNameMethodNameParamTypes = $chanwClassObj.getMethod( "' + $chanwMethodName + '"' )
    
    #if( $chanwParamListString && $chanwParamListString != "" )
        #set( $chanwStmt = $chanwStmt + ',' + $chanwParamListString )
    #end
    
    #set( $chanwStmt = $chanwStmt + '))' )
    #evaluate( $chanwStmt )
    
    ## not found, issue a warning
    #if( $chanwGetMethodByClassNameMethodNameParamTypes == "" )
    Method not found.<br />
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwSetVariable( $var $val )《/code》
《p》Dynamically turns 《code》$var《/code》 into a variable assigned with the value
《code》$val《/code》. The value of 《code》$var《/code》 should be a variable name
without the dollar sign. Note that because the value of 《code》$val《/code》 can be
a String that contains characters like "<", which cannot be displayed on a page,
《code》$_EscapeTool.xml《/code》 must be called to escape unacceptable characters
in the String before it is assigned to the variable. This means that quotes are also
escaped. If the String is intended to be used as code, then the escaped characters
must be turned back to its original version.《/p》
《pre》
#set( $chanwStmt = '#chanwSetVariable("' + $key + '" $chanwGetObjectByClassName)' )
#evaluate( $chanwStmt )
《/pre》
《/documentation》
《macro id=“chanwSetVariable”》
*#
#macro( chanwSetVariable $var $val )
    ## check the variable name
    #if( !$var || $var.class.name != "java.lang.String" || $var == "" )
        The variable name $var is not acceptable
        #stop
    #end

    #if( $_PropertyTool.isNull( $val ) )
        #set( $chanwValue = "" ) ## default value
    #elseif( $val.class.name == "java.lang.String" )
        #set( $chanwValue = $_EscapeTool.xml( $val ).trim() )
    ## this is an object
    #else
        #set( $chanwValue = 'val' )
    #end
    
    #if( !$chanwValue.equals( 'val' ) )
        #set( $chanwSetVarValStatement = '#' + "set(" + "$" + "$var = '$chanwValue')" )
    #else
        #set( $chanwSetVarValStatement = '#' + "set(" + "$" + "$var = $" + $chanwValue + ")" ) ## object assignment
    #end

    #evaluate( $chanwSetVarValStatement )
#end
#*
《/macro》
《documentation》
《code》#chanwGetStaticMethodByClassNameMethodNameWithoutParams( $chanwClassName $chanwMethodName )《/code》
《p》Returns the static method of the class.《/p》
《pre》
#chanwGetStaticMethodByClassNameMethodNameWithoutParams(
    "java.util.concurrent.ThreadLocalRandom"  "current"
)
$chanwGetStaticMethodByClassNameMethodNameWithoutParams.Class.Name
《/pre》
《/documentation》
《macro id=“chanwGetStaticMethodByClassNameMethodNameWithoutParams”》
*#
#macro( chanwGetStaticMethodByClassNameMethodNameWithoutParams $chanwClassName $chanwMethodName )
    ## check the class name string
    #if( !$chanwClassName || $chanwClassName.Class.Name != "java.lang.String" || $chanwClassName == "" )
        A valid class name is required.<br />
        #stop
    #end

    ## check the method name string
    #if( !$chanwMethodName || $chanwMethodName.Class.Name != "java.lang.String" || $chanwMethodName == "" )
        A valid method name is required.<br />
        #stop
    #end

    #set( $chanwClassObj  = $_.Class.forName( $chanwClassName ) )
    #set( $chanwGetStaticMethodByClassNameMethodNameWithoutParams = "" )
    #set( $chanwGetStaticMethodByClassNameMethodNameWithoutParams = 
        $_.Class.forName( $chanwClassName ).getMethod( $chanwMethodName ) )

    ## not found, issue a warning
    #if( $chanwGetStaticMethodByClassNameMethodNameWithoutParams == "" )
    Method not found.<br />
    #end
#end
#*
《/macro》
*#
## classes with a default constructor
#set( $chanwTools = {
    'globalApacheBooleanUtils' :     'org.apache.commons.lang.BooleanUtils',
    'globalApacheClassUtils':        'org.apache.commons.lang.ClassUtils',
    'globalApacheClassTool' :        'org.apache.velocity.tools.generic.ClassTool',
    'globalApacheComparisonDateTool':'org.apache.velocity.tools.generic.ComparisonDateTool',
    'globalApacheConversionTool':    'org.apache.velocity.tools.generic.ConversionTool',
    'globalApacheLinkTool':          'org.apache.velocity.tools.generic.LinkTool',
    'globalApacheMathTool':          'org.apache.velocity.tools.generic.MathTool',
    'globalApacheNumberTool':        'org.apache.velocity.tools.generic.NumberTool',
    'globalApacheNumberUtils':       'org.apache.commons.lang.math.NumberUtils',
    'globalApacheSortTool':          'org.apache.velocity.tools.generic.SortTool',
    'globalApacheStringUtils':       'org.apache.commons.lang.StringUtils',
    'globalApacheStringEscapeUtils': 'org.apache.commons.lang.StringEscapeUtils',
    'globalApacheWordUtils':         'org.apache.commons.lang.WordUtils',
    'globalSAXBuilder':              'org.jdom.input.SAXBuilder'
} )

#set( $chanwToolKeys = $chanwTools.keySet() )

## generate the global objects with default constructors
#foreach( $key in $chanwToolKeys )
    #chanwGetObjectByClassName( $chanwTools[ $key ] )
    #set( $chanwStmt = '#chanwSetVariable("' + $key + '" $chanwGetObjectByClassName)' )
    #evaluate( $chanwStmt )
#end

## objects created with constructors with parameters
#chanwGetConstructorByClassNameParamSize( 'org.jdom.Text' 1 )
#set( $chanwConstructor = $chanwGetConstructorByClassNameParamSize )
#set( $globalJDOMText   = $chanwConstructor.newInstance( "" ) )

#chanwGetConstructorByClassNameParamTypeArray( 'java.lang.StringBuffer' [ 'int' ] )
#set( $chanwConstructor   = $chanwGetConstructorByClassNameParamTypeArray )
#set( $globalStringBuffer = $chanwConstructor.newInstance( 10000 ) )

#chanwGetConstructorByClassNameParamTypeArray( 'java.lang.StringBuilder' [ 'int' ] )
#set( $chanwConstructor    = $chanwGetConstructorByClassNameParamTypeArray )
#set( $globalStringBuilder = $chanwConstructor.newInstance( 10000 ) )

## objects created using static methods
#set( $chanwClassStaticMethodMap = {
    "chanwGlobalRandom":[ "java.util.concurrent.ThreadLocalRandom", "current" ]
} )

#set( $chanwClassStaticMethodMapKeySet = $chanwClassStaticMethodMap.keySet() )

#foreach( $key in $chanwClassStaticMethodMapKeySet )
    #set( $chanwStmt = '#set($chanwMethod=$_.Class.forName("' +
        $chanwClassStaticMethodMap[ $key ][ 0 ] + '").getMethod("' +
        $chanwClassStaticMethodMap[ $key ][ 1 ] + '"))' +
        '#set($' + $key + '=$chanwMethod.invoke(null))' )
    #evaluate( $chanwStmt )
#end

#*
《documentation id=“bottom“》
《h2》References《/h2》
《ul》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/01%20basics/list.vm“》ArrayList examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheBooleanUtils.vm“》BooleanUtils examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/02%20numbers_strings_dates/calendar.vm“》Calendar examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheClassTool.vm“》ClassTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheClassUtils.vm“》ClassUtils examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheConversionTool.vm“》ConversionTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/02%20numbers_strings_dates/date.vm“》Date and DateTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tools/display_tool.vm“》DisplayTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tools/escape_tool.vm“》$_EscapeTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/01%20basics/map.vm“》HashMap examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheMathTool.vm“》MathTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/02%20numbers_strings_dates/number_and_array.vm“》Number and array examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheNumberTool.vm“》NumberTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheNumberUtils.vm“》NumberUtils examples《/a》《/li》
《li》SAXBuilder example
《ul》
《li》《a href=“https://github.com/wingmingchan/php-cascade-ws-ns-examples/blob/master/xml_feed/index_block_xml.php“》A web service program to produce a feed, containing XML from an index block《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/03%20working_with_block_xml/create_content_root_from_feed.vm“》A format that uses the LocatorTool to read indexed XML from a feed block《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/library/chanw_global_velocity.vm“》The library macro 《code》#chanwBuildXMLContentRoot《/code》《/a》《/li》
《/ul》
《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tools/sort_tool.vm“》SortTool examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/tutorials/02%20numbers_strings_dates/string_and_array.vm“》String and array examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheStringUtils.vm“》StringUtils examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheStringEscapeUtils.vm“》StringEscapeUtils examples《/a》《/li》
《li》《a href=“https://github.com/wingmingchan/velocity/blob/master/using_global_objects/using_globalApacheWordUtils.vm“》WordUtils examples《/a》《/li》
《/ul》
《/documentation》
《/code》
*#