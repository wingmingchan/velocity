#*
《code》
《documentation id=“top”》
《h2》Introduction《/h2》
《p》This format defines macros to process an index block.
Do not process the entire block. Instead, select 《code》system-page《/code》,
《code》system-folder《/code》, etc, and process each individual page/folder object
(《code》org.jdom.Element《/code》 objects).《/p》
《p》Example code:《/p》
《pre》
#import( 'site://_common_assets/formats/library/velocity/chanw_process_index_block' )

#set( $page = $_XPathTool.selectSingleNode( $contentRoot, "calling-page/system-page" ) )
#chanwProcessSystemPage( $page )
$S_PRE

$systemPageName
$systemPageIsPublished

$chanwDynamicMetatdataNameValuesMap.get( "exclude-from-menu" )
$E_PRE

#set( $folder = $_XPathTool.selectSingleNode( $contentRoot, "system-folder" ) )
#chanwProcessSystemFolder( $folder )
$S_PRE

$systemFolderName
$systemFolderIsPublished

$chanwDynamicMetatdataNameValuesMap.get( "exclude-from-left" )
$E_PRE
《/pre》
《p》Output:《/p》
《pre》
test-process-index-block
true

[Yes]

/
true

[]
《/pre》
《/documentation》
*#
#import( 'formats/library/velocity/chanw_global_values' )
#*
《documentation》
《code》#chanwProcessDynamicData( $dynamicDataNode )《/code》
《p》Processes the dynamic fields of the metadata and stores the name-value-list pairs in
a variable named 《code》$chanwDynamicMetatdataNameValuesList《/code》.《/p》
《/documentation》
《macro id=“chanwProcessDynamicData”》
*#
#macro( chanwProcessDynamicData $dynamicDataNode )
    #if( $dynamicDataNode.name != $cascadeXML_ELEMENT_DYNAMIC_METADATA )
        Not a dynamic data!!!$BR
        #stop
    #end
    
    #set( $chanwDynamicMetatdataNameValuesList = [] )
    #set( $chanwDynamicMetatdataValues         = $dynamicDataNode.getChildren( 'value' ) )
    
    #foreach( $value in $chanwDynamicMetatdataValues )
        #set( $void = $chanwDynamicMetatdataNameValuesList.add( $value.value ) )
    #end
    
    #set( $void = $chanwDynamicMetatdataNameValuesMap.put( 
        $dynamicDataNode.getChild( 'name' ).value,
        $chanwDynamicMetatdataNameValuesList ) )
#end
#*
《/macro》
《documentation》
There is code and a code template used to generate four macros: 《code》#chanwProcessRSSItem《/code》,
《code》#chanwProcessSystemBlock《/code》, 《code》#chanwProcessSystemFile《/code》, and 《code》#chanwProcessSystemSymlink《/code》.
《/documentation》
《macro id=“generatedCode”》
*#
## generate macros that process rss item, system-block, system-file, system-symlink
#set( $index_block_element_map = {
    "chanwProcessRSSItem" :        [ "item",    "rssXML_ELEMENT_ITEM",               "rssItemVarElementMap" ],
    "chanwProcessSystemBlock" :    [ "block",   "cascadeXML_ELEMENT_SYSTEM_BLOCK",   "systemBlockVarElementMap" ],
    "chanwProcessSystemFile" :     [ "file",    "cascadeXML_ELEMENT_SYSTEM_FILE",    "systemFileVarElementMap" ],
    "chanwProcessSystemSymlink" :  [ "symlink", "cascadeXML_ELEMENT_SYSTEM_SYMLINK", "systemSymlinkVarElementMap" ]
} )

#set( $indexBlockMapKeys = $index_block_element_map.keySet() )

#foreach( $macro_name in $indexBlockMapKeys )
    #set( $macro_list = $index_block_element_map[ $macro_name ] )
    #set( $chanwStatement = $index_block_code.replaceAll( "-macro_name-", $macro_name ).replaceAll(
        "-node_type-", $macro_list[ 0 ] ).replaceAll( "-element_name-", $macro_list[ 1 ] ).replaceAll(
        "-map_name-", $macro_list[ 2 ] ) )
    #evaluate( $chanwStatement )
#end
#*
《/macro》
《documentation》
《code》#chanwProcessSystemFolder( $folderNode )《/code》
《p》Processes a 《code》system-folder《/code》 object, stores values
in a set of variables, and processes the dynamic fields, if there are any.《/p》
《/documentation》
《macro id=“chanwProcessSystemFolder”》
*#
#macro( chanwProcessSystemFolder $folderNode )
    #if( !$folderNode )
        The folder element is not defined.$BR
    #elseif( $folderNode.name != $cascadeXML_ELEMENT_SYSTEM_FOLDER )
        $folderNode.name is not a folder element!!!$BR
        #stop
    #end
    #chanwGetNodeValues( $folderNode $systemFolderVarElementMap )
    #chanwGetNodeSets( $folderNode, { 
        'systemFolderDynamicMetadata':$cascadeXML_ELEMENT_DYNAMIC_METADATA, 
        'systemFolderSystemBlock':    $cascadeXML_ELEMENT_SYSTEM_BLOCK,
        'systemFolderSystemFile':     $cascadeXML_ELEMENT_SYSTEM_FILE,
        'systemFolderSystemFolder':   $cascadeXML_ELEMENT_SYSTEM_FOLDER,
        'systemFolderSystemPage':     $cascadeXML_ELEMENT_SYSTEM_PAGE,
        'systemFolderSystemSymlink':  $cascadeXML_ELEMENT_SYSTEM_SYMLINK } )
        
    #set( $chanwDynamicMetatdataNameValuesMap  = {} )
    
    #if( $systemFolderDynamicMetadata.size() > 0 )
        #foreach( $dmd in $systemFolderDynamicMetadata )
            #chanwProcessDynamicData( $dmd )
        #end
    #end
    
    #set( $chanwSystemFolderChildren = [] )
    
    #foreach( $child in $folderNode.Children )
        #if( $chanwFolderContainedAssets.contains( $child.name ) )
            #set( $void = $chanwSystemFolderChildren.add( $child ) )
        #end
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwProcessSystemPage( $pageNode )《/code》
《p》Processes a 《code》system-page《/code》 object, stores values
in a set of variables, and processes the dynamic fields, if there are any.《/p》
《/documentation》
《macro id=“chanwProcessSystemPage”》
*#
#macro( chanwProcessSystemPage $pageNode )
    #if( !$pageNode )
        The page element is not defined.$BR
    #elseif( $pageNode.name != $cascadeXML_ELEMENT_SYSTEM_PAGE )
        $pageNode.name is not a page element!!!$BR
        #stop
    #end
    #chanwGetNodeValues( $pageNode $systemPageVarElementMap )
    
    #chanwGetNodeSets( $pageNode, { 
        'systemPageDynamicMetadata':    $cascadeXML_ELEMENT_DYNAMIC_METADATA,
        'systemPageSystemDataStructure':$cascadeXML_ELEMENT_SYSTEM_DATA_STRUCTURE } )
        
    #set( $chanwDynamicMetatdataNameValuesMap  = {} )
    
    #if( $systemPageDynamicMetadata.size() > 0 )
        #foreach( $dmd in $systemPageDynamicMetadata )
            #chanwProcessDynamicData( $dmd )
        #end
    #end
#end
#*
《/macro》
《documentation id=“bottom”》
《/documentation》
《/code》
*#