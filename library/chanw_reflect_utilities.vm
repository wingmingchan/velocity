#*
《code》
《documentation id=“top”》
《h2》Introduction《/h2》
《p》This format provides utility macros for reflection.
The 《code》#chanwDisplayClassAPI《/code》 macro can accept three params, the second and third are optional. Example:《/p》
《pre》
#chanwDisplayClassAPI( "java.lang.Math", "h3", "true" ) ## pass in a class name
#chanwDisplayClassAPI( $_, "h3", "true" )               ## pass in an object
#chanwDisplayClassAPI( $_.Class, "h3", "true" )         ## pass in a java.lang.Class object
#chanwDisplayClassAPI( $_ )                             ## pass in an object
《/pre》
《/documentation》
*#
#import( '/formats/library/velocity/chanw_object_creator' )
#*
《documentation》
《code》#chanwDisplayClassAPI( $obj $heading $withH2 )《/code》
《p》Displays essential information of a class, including a list of constructors and methods. Use this macro
as the entry point to this library format.《/p》
《/documentation》
《macro id=“chanwDisplayClassAPI”》
*#
#macro( chanwDisplayClassAPI $obj $heading $withH2 )
    #if( $_PropertyTool.isNull( $obj ) )
        No parameter supplied.
        #stop
    #end
    
    #if( !$heading || $heading.Class.Name != $JAVA_LANG_STRING_CLASS_NAME )
        #set( $chanwHeading = "h3" )
    #else
        #set( $chanwHeading = $heading )
    #end
    
    #if( !$withH2 )
        #set( $chanwWithH2 = true )
    #else
        #set( $chanwWithH2 = $withH2 )
    #end
    
    #chanwDisplayObjClass( $obj $chanwHeading $chanwWithH2 )
#end
#*
《/macro》
《documentation》
《code》#chanwDisplayObjClass( $obj $heading $withH2 )《/code》
《p》Calls other macros and displays class information.《/p》
《/documentation》
《macro id=“chanwDisplayObjClass”》
*#
#macro( chanwDisplayObjClass $obj $heading $withH2 )
    #set( $objString = "" )
    #set( $objType = $obj.Class.Name )
 
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $objString = $obj )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $objString = $obj.Name )
    #else                                              ## obj of other types
        #set( $objString = $obj.Class.Name )
    #end
    
    #set( $chanwSuffix = "" )
    #set( $chanwClassString = $objString )
    
    #if( $objString.indexOf( "," ) > -1 )
        #set( $chanwIndex = $objString.indexOf( "," ) )
        #set( $chanwClassString = $objString.substring( 0, $chanwIndex ) )
        #set( $chanwSuffix = $objString.substring( $chanwIndex ) )
        #set( $chanwSuffix = $chanwSuffix.substring( 1 ) ) ## remove comma
        #set( $chanwSuffix = "&lt;" + $chanwSuffix + "&gt;" )
    #end
    
    #if( $withH2 )$S_H2$chanwClassString$chanwSuffix$E_H2#end
   
    #chanwDisplaySuperClass( $chanwClassString $heading )
    #chanwDisplayFields( $chanwClassString $heading )
    #chanwDisplayConstructors( $chanwClassString $heading )
    #chanwDisplayMethods( $chanwClassString $heading )
    $HR
#end
#*
《/macro》
《documentation》
《code》#chanwDisplayConstructors( $obj $heading )《/code》
《p》Displays a list of constructors.《/p》
《/documentation》
《macro id=“chanwDisplayConstructors”》
*#
#macro( chanwDisplayConstructors $obj $heading )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $chanwClassObj = $_PropertyTool.class.forName( $obj ) )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $chanwClassObj = $obj )
    #else                                              ## obj of other types
        #set( $chanwClassObj = $obj.Class )
    #end
    
    #if( $chanwClassObj )
        #set( $constructors = $chanwClassObj.getConstructors() )
        
        #if( $constructors && $constructors.size() > 0 )
            <$heading>Constructors</$heading>
            $S_UL
            #foreach( $constructor in $constructors )
                $S_LI## print modifiers
                $_.class.forName( "java.lang.reflect.Modifier" ).getMethod( 
                    "toString", $_FieldTool.in( 
                    "java.lang.Integer" ).TYPE ).invoke( 
                    null, $constructor.getModifiers() )
                $constructor.Name
                    
                #set( $chanwParamTypes = $constructor.getGenericParameterTypes() )
                #set( $paramTypesString = "( " )

                #if( $chanwParamTypes && $chanwParamTypes.size() > 0 )
                    #foreach( $chanwParamType in $chanwParamTypes )
                        #if( $chanwParamType.Name )
                            #set( $paramTypesString = $paramTypesString + $chanwParamType.Name )
                        #elseif( $chanwParamType.getTypeName() )
                            #set( $paramTypesString = $paramTypesString + $chanwParamType.getTypeName().replaceAll( "<", "&lt;" ) )
                        #end
                        
                        #if( $foreach.count < $chanwParamTypes.size() )
                            #set( $paramTypesString = $paramTypesString + ", " )
                        #end
                        
                    #end
                #end
                
                #set( $paramTypesString = $paramTypesString + " )" )
                #set( $paramTypesString = $paramTypesString.trim() )
                $paramTypesString$E_LI
            #end
            $E_UL
        #else
            ## No constructors found.
        #end
    #else
        ## No constructors found.
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwDisplayMethods( $obj $heading )《/code》
《p》Displays a list of methods.《/p》
《/documentation》
《macro id=“chanwDisplayMethods”》
*#
#macro( chanwDisplayMethods $obj $heading )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $chanwClassObj = $_PropertyTool.class.forName( $obj ) )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $chanwClassObj = $obj )
    #else                                              ## obj of other types
        #set( $chanwClassObj = $obj.Class )
    #end
    
    #if( $chanwClassObj )
        #set( $methods = $chanwClassObj.getDeclaredMethods() )
        
        #if( $methods && $methods.size() > 0 )
            <$heading>Methods</$heading>
            $S_UL
            #foreach( $method in $methods )
                $S_LI
                #set( $chanwModifier = $_.class.forName( "java.lang.reflect.Modifier" ).getMethod( 
                    "toString", $_FieldTool.in( 
                    "java.lang.Integer" ).TYPE ).invoke( 
                    null, $method.getModifiers() ) )
                    
                    #set( $chanwReturnType = $method.getGenericReturnType().getTypeName().replaceAll( "<", "&lt;" ).trim() )
                    
                    
                    #set( $chanwParamTypes = $method.getGenericParameterTypes() )
                    #set( $paramTypesString = $chanwModifier + " " + $chanwReturnType + " " + $method.Name.trim() + "( " )
                    
                    #if( $chanwParamTypes && $chanwParamTypes.size() > 0 )
                        #foreach( $chanwParamType in $chanwParamTypes )
                            #if( $chanwParamType.Name )
                                #set( $paramTypesString = $paramTypesString + $chanwParamType.Name )
                            #elseif( $chanwParamType.getTypeName() )
                                #set( $paramTypesString = $paramTypesString + $chanwParamType.getTypeName().replaceAll( "<", "&lt;" ) )
                            #end
                            
                            #if( $foreach.count < $chanwParamTypes.size() )
                                #set( $paramTypesString = $paramTypesString + ", " )
                            #end
                        #end
                    #end
                    
                    #set( $paramTypesString = $paramTypesString + " )" )
                    #set( $paramTypesString = " " + $paramTypesString.trim() )
                    #set( $paramTypesString = $paramTypesString.replaceAll( " \(", "(" ) )
                     $paramTypesString
                $E_LI
            #end
            $E_UL
        #else
            ## No methods.
        #end
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwDisplayFields( $obj $heading )《/code》
《p》Displays a list of fields and values.《/p》
《/documentation》
《macro id=“chanwDisplayFields”》
*#
#macro( chanwDisplayFields $obj $heading )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $chanwClassObj = $_PropertyTool.class.forName( $obj ) )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $chanwClassObj = $obj )
    #else                                              ## obj of other types
        #set( $chanwClassObj = $obj.Class )
    #end
    
    #if( $chanwClassObj )
        #set( $fields = $chanwClassObj.getFields() )
        
        #if( $fields && $fields.size() > 0 )
            <$heading>Fields</$heading>
            $S_UL
            #foreach( $field in $fields )
                $S_LI$field.getName().replaceAll( '&', '&amp;' ): $_EscapeTool.xml( $field.get( null ) )$E_LI
            #end
            $E_UL
        #else
            ## No fields.
        #end
    #end
#end
#*
《/macro》
《documentation》
《code》#chanwDisplaySuperClass( $obj $heading )《/code》
《p》Displays the parent class name.《/p》
《/documentation》
《macro id=“chanwDisplaySuperClass”》
*#
#macro( chanwDisplaySuperClass $obj $heading )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $chanwClassObj = $_PropertyTool.class.forName( $obj ) )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $chanwClassObj = $obj )
    #else                                              ## obj of other types
        #set( $chanwClassObj = $obj.Class )
    #end
      
    #if( $chanwClassObj )
        #set( $parent = $chanwClassObj.getGenericSuperclass() )
        
        #if( $parent )
        <$heading>Parent Class</$heading>$S_P$parent.toString().replaceAll( "<", "&lt;" )$E_P
        #end
    #end
#end
#*
《/macro》
《documentation id=“bottom”》
《/documentation》
《/code》
*#