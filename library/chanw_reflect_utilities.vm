#*
This format provides utility macros for reflection.

Example:
#chanwDisplayClassAPI( "java.lang.Math", "h3", "true" ) ## pass in a class name
#chanwDisplayClassAPI( $_, "h3", "true" )               ## pass in an object
#chanwDisplayClassAPI( $_.Class, "h3", "true" )         ## pass in a java.lang.Class object
*#
#import( '/formats/library/velocity/chanw_object_creator' )

#macro( chanwDisplayClassAPI $obj $heading $withH2 )
    #if( $_PropertyTool.isNull( $obj ) )
        No parameter supplied.
        #stop
    #end
    
    #chanwDisplayObjClass( $obj $withH2 )
#end

#macro( chanwDisplayObjClass $obj $withH2 )
    #set( $objString = "" )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $objString = $obj )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $objString = $obj.Name )
    #else                                              ## obj of other types
        #set( $objString = $obj.Class.Name )
    #end
    
    #set( $chanwSuffix = "" )
    #set( $chanwClassString = $objString )
    
    #if( $objString.indexOf( "," ) > -1 )
        #set( $chanwIndex = $objString.indexOf( "," ) )
        #set( $chanwClassString = $objString.substring( 0, $chanwIndex ) )
        #set( $chanwSuffix = $objString.substring( $chanwIndex ) )
        #set( $chanwSuffix = $chanwSuffix.substring( 1 ) ) ## remove comma
        #set( $chanwSuffix = "&lt;" + $chanwSuffix + "&gt;" )
    #end
    
    #if( $withH2 )<h2>$chanwClassString$chanwSuffix</h2>#end
    
    #chanwDisplaySuperClass( $chanwClassString $heading )
    #chanwDisplayFields( $chanwClassString $heading )
    #chanwDisplayConstructors( $chanwClassString $heading )
    #chanwDisplayMethods( $chanwClassString $heading )
    $HR    
#end

#macro( chanwDisplayConstructors $obj $heading )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $chanwClassObj = $_PropertyTool.class.forName( $obj ) )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $chanwClassObj = $obj )
    #else                                              ## obj of other types
        #set( $chanwClassObj = $obj.Class )
    #end
    
    #if( $chanwClassObj )
        #set( $constructors = $chanwClassObj.getConstructors() )
        
        #if( $constructors && $constructors.size() > 0 )
            <$heading>Constructors</$heading>
            <ul>
            #foreach( $constructor in $constructors )
                <li>## print modifiers
                $_.class.forName( "java.lang.reflect.Modifier" ).getMethod( 
                    "toString", $_FieldTool.in( 
                    "java.lang.Integer" ).TYPE ).invoke( 
                    null, $constructor.getModifiers() )
                $constructor.Name
                    
                #set( $chanwParamTypes = $constructor.getGenericParameterTypes() )
                #set( $paramTypesString = "( " )

                #if( $chanwParamTypes && $chanwParamTypes.size() > 0 )
                    #foreach( $chanwParamType in $chanwParamTypes )
                        #if( $chanwParamType.Name )
                            #set( $paramTypesString = $paramTypesString + $chanwParamType.Name )
                        #elseif( $chanwParamType.getTypeName() )
                            #set( $paramTypesString = $paramTypesString + $chanwParamType.getTypeName().replaceAll( "<", "&lt;" ) )
                        #end
                        
                        #if( $foreach.count < $chanwParamTypes.size() )
                            #set( $paramTypesString = $paramTypesString + ", " )
                        #end
                        
                    #end
                #end
                
                #set( $paramTypesString = $paramTypesString + " )" )
                #set( $paramTypesString = $paramTypesString.trim() )
                $paramTypesString</li>
            #end
            </ul>
        #else
            ## No constructors found.
        #end
    #else
        ## No constructors found.
    #end
#end

#macro( chanwDisplayMethods $obj $heading )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $chanwClassObj = $_PropertyTool.class.forName( $obj ) )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $chanwClassObj = $obj )
    #else                                              ## obj of other types
        #set( $chanwClassObj = $obj.Class )
    #end
    
    #if( $chanwClassObj )
        #set( $methods = $chanwClassObj.getDeclaredMethods() )
        
        #if( $methods && $methods.size() > 0 )
            <$heading>Methods</$heading>
            <ul>
            #foreach( $method in $methods )
                <li>
                #set( $chanwModifier = $_.class.forName( "java.lang.reflect.Modifier" ).getMethod( 
                    "toString", $_FieldTool.in( 
                    "java.lang.Integer" ).TYPE ).invoke( 
                    null, $method.getModifiers() ) )
                    
                    #set( $chanwReturnType = $method.getGenericReturnType().getTypeName().replaceAll( "<", "&lt;" ).trim() )
                    
                    
                    #set( $chanwParamTypes = $method.getGenericParameterTypes() )
                    #set( $paramTypesString = $chanwModifier + " " + $chanwReturnType + " " + $method.Name.trim() + "( " )
                    
                    #if( $chanwParamTypes && $chanwParamTypes.size() > 0 )
                        #foreach( $chanwParamType in $chanwParamTypes )
                            #if( $chanwParamType.Name )
                                #set( $paramTypesString = $paramTypesString + $chanwParamType.Name )
                            #elseif( $chanwParamType.getTypeName() )
                                #set( $paramTypesString = $paramTypesString + $chanwParamType.getTypeName().replaceAll( "<", "&lt;" ) )
                            #end
                            
                            #if( $foreach.count < $chanwParamTypes.size() )
                                #set( $paramTypesString = $paramTypesString + ", " )
                            #end
                        #end
                    #end
                    
                    #set( $paramTypesString = $paramTypesString + " )" )
                    #set( $paramTypesString = " " + $paramTypesString.trim() )
                    #set( $paramTypesString = $paramTypesString.replaceAll( " \(", "(" ) )
                     $paramTypesString
                </li>
            #end
            </ul>
        #else
            ## No methods.
        #end
    #end
#end

#macro( chanwDisplayFields $obj $heading )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $chanwClassObj = $_PropertyTool.class.forName( $obj ) )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $chanwClassObj = $obj )
    #else                                              ## obj of other types
        #set( $chanwClassObj = $obj.Class )
    #end
    
    #if( $chanwClassObj )
        #set( $fields = $chanwClassObj.getFields() )
        
        #if( $fields && $fields.size() > 0 )
            <$heading>Fields</$heading>
            <ul>
            #foreach( $field in $fields )
                <li>$field.getName().replaceAll( '&', '&amp;' ): $_EscapeTool.xml( $field.get( null ) )</li>
            #end
            </ul>
        #else
            ## No fields.
        #end
    #end
#end

#macro( chanwDisplaySuperClass $obj $heading )
    #set( $objType = $obj.Class.Name )
    
    #if( $objType == $JAVA_LANG_STRING_CLASS_NAME )    ## class name
        #set( $chanwClassObj = $_PropertyTool.class.forName( $obj ) )
    #elseif( $objType == $JAVA_LANG_CLASS_CLASS_NAME ) ## class obj
        #set( $chanwClassObj = $obj )
    #else                                              ## obj of other types
        #set( $chanwClassObj = $obj.Class )
    #end
    
    #if( $chanwClassObj )
        #set( $parent = $chanwClassObj.getGenericSuperclass() )
        
        #if( $parent )
        <$heading>Parent Class</$heading><p>$parent.toString().replaceAll( "<", "&lt;" )</p>
        #end
    #end
#end