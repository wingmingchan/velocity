#import( 'formats/library/velocity/chanw_macro_utilities' )
#import( 'formats/library/velocity/upstate_process_dd_group' )
#import( 'formats/library/velocity/upstate_process_site_map' )

#*
Generates the required macros.
*#

## These are single-group blocks, put block type info here, and do not use '-group' in type info.
## The group identifier should be {type-info}-group.
#set( $single_group_names = [ "wysiwyg", "instruction-block" ] )

## These are multi-group blocks, and put the required dispatch macro names here.
#set( $multi_macro_names = [ "processDesignerProBlock", "processMegablock", "processMultimedia", "processNewsBlock" ] )

## These are various names of macros invoking the same macro to generate site maps.
#set( $site_map_macro_names = [ "processSiteMapIndex", "processWsMapIndex" ] )

## These are map-code pairs used to generate macros to generate macros.
#set( $map_code_pairs = { "multi_macro_names"    : "multi_group_code", 
                          "site_map_macro_names" : "site_map_code" } )

## generate macros that generate macros
#set( $chanw_map_code_keys = $map_code_pairs.keySet() )

#foreach( $key in $chanw_map_code_keys )
    #set( $chanw_map_statement = $macro_foreach_code.replaceAll( "-map_name-", $key ).replaceAll( "-code_name-", $map_code_pairs[ $key ] ) )
    #evaluate( $chanw_map_statement )
#end

#foreach( $single_group_name in $single_group_names )
    #chanwConvertToPascalCase( $single_group_name "-" )
    #set( $dispatch_macro_name = $MACRO_PREFIX + $chanwConvertToPascalCase )
    #set( $single_group_name   = $single_group_name + "-group" )
    #set( $chanw_statement     = $single_group_code.replaceAll( 
        "-dispatch_macro_name-", $dispatch_macro_name ).replaceAll( "-single_group_name-", $single_group_name ) )
    #evaluate( $chanw_statement )
#end

#*
Processes a data definition block with type information.
The type is turned into a macro name.
*#
#macro( processDataDefinitionBlock $systemDataStructure )
    #set( $isDisplay = $systemDataStructure.getChild( 'display' ).value )
    
    #if( $isDisplay.toLowerCase() == 'yes' )
        #set( $type = $systemDataStructure.getChild( 'block-type' ).value )
        #chanwConvertToPascalCase( $type "-" )
        #set( $macroName = $MACRO_PREFIX + $chanwConvertToPascalCase )
        #chanwInvokeMacro( $macroName [ "systemDataStructure" ] )
    #end
#end

#*
Processes an index block.
The name of the block is turned into a macro name.
*#
#macro( processIndexBlock $firstChild )
    #set( $blockName = $firstChild.getAttribute( 'name' ).value )
    #chanwConvertToPascalCase( $blockName "-" )
    #set( $macroName = $MACRO_PREFIX + $chanwConvertToPascalCase )
    #chanwInvokeMacro( $macroName [ "firstChild" ] )
#end

#* === process legacy blocks == *#
#macro( processPhpStaticInclude $systemDataStructure )
    #set( $groupToBeProcessed = $systemDataStructure.getChild( "block-group" ) )
    #chanwConvertToPascalCase( "block-group" "-" )
    #set( $macroName = $MACRO_PREFIX + $chanwConvertToPascalCase )
    #chanwInvokeMacro( $macroName [ "groupToBeProcessed" ] )
#end

#*
Processes a block chooser or a region.
When it is a region, what is passed in is a Document object.
Otherwise, it is an Element whose name is content.
Why parent of the root element is passed in: a text block may not have a root element.
*#
#macro( processBlockChooser $content )
    #if( $content.class.name == $ORG_JDOM_DOCUMENT_CLASS_NAME )
        #set( $contentChildren = $content.getContent() )
    #else
        #set( $contentChildren = $content.getChildren() )
    #end
    
    #if( $contentChildren.size() == 0 )
        $_SerializerTool.serialize( $content, true )  ## plain text or code
    #elseif( $contentChildren.size() > 0 )
        #set( $firstChild = $contentChildren.get( 0 ) )
        #set( $childName  = $firstChild.name )
        #set( $childPath  = $content.getParent().getChild( 'path' ).value )
    
        #if( $childName == $cascadeXML_ELEMENT_SYSTEM_DATA_STRUCTURE )
            #processDataDefinitionBlock( $firstChild )
        #elseif( $childName == $cascadeXML_ELEMENT_SYSTEM_INDEX_BLOCK )
            #processIndexBlock( $firstChild )
        #else
            #set( $blockName = $childPath )
            #set( $lastIndexOfSlash = $blockName.lastIndexOf( '/' ) + 1 )
                
            #if( $lastIndexOfSlash > -1 )
                #set( $blockName = $blockName.substring( $lastIndexOfSlash ) )
                   
                ## text block containing html markups
                #if( $blockName.endsWith( 'Text' ) || $blockName.endsWith( 'text' ) ) 
                    $_SerializerTool.serialize( $content, true )
                ## XML blocks containing instructions
                #elseif( $blockName.endsWith( 'Script' ) || $blockName.endsWith( 'script' )  )
                    #chanwInvokeMacro( "processScript" [ "firstChild" ] )
                ## preferably having -xml, -feed suffixes
                #else
                    #chanwConvertToPascalCase( $blockName "-" )
                    #set( $macroName = $MACRO_PREFIX + $chanwConvertToPascalCase )
                    #chanwInvokeMacro( $macroName [ "firstChild" ] )
                #end
            #end
        #end
    #end
#end




#macro( processNewsArticlePreviousNext $systemDataStructure )
    
    #set( $articleIndexBlock = $systemDataStructure.getChild("article-index-block").getChild("content").getChild("system-index-block") )

    #set( $articles = $_XPathTool.selectNodes( $articleIndexBlock,
        "system-folder/system-page[name!='index']" ) )

    
    #import( 'site://_common_assets/formats/library/velocity/chanw_process_index_block' )
   
    ## get all articles, aka any page on the site that has a start date:
    ##set ( $articles = $_XPathTool.selectNodes( $findIndexBlock, "system-page[name]" ) )
    ##set ( $articles = $_XPathTool.selectNodes( $findIndexBlock, "//system-page[start-date]" ) )
    $_SortTool.addSortCriterion( "start-date", "", "number", "ascending", "upper-first" )
    $_SortTool.sort( $articles )

    ## find current article:
    #foreach( $eachArticle in $articles )
        #if( $eachArticle.getAttribute( "current" ) )
            #chanwProcessSystemPage( $eachArticle )
            #set( $prevIndex    = $articles.indexOf( $eachArticle ) - 1 )
            #set( $nextIndex    = $articles.indexOf( $eachArticle ) + 1 )
            #set( $systemPageSite           = $systemPageSite.replaceAll("-dev","") )
            #set( $systemPageTitleURLd      = $systemPageTitle.replaceAll('&amp;amp;','&amp;').replaceAll(' ','%20') )
            #set( $systemPageSummaryURLd    = $systemPageSummary.replaceAll("&amp;amp;","&amp;").replaceAll(' ','%20') )
              
              
            ##get current artcle date and email link:
            ##<div id="hide-whatever">
                <div>
                Published on: $_DateTool.format( 'EEEEE, MMMM d, yyyy', $_DateTool.getDate( $systemPageStartDate ) ) &#160;
                <a href="mailto:?subject=Upstate.edu:%20$systemPageTitleURLd&amp;body=Hi,%20I%20found%20this%20website%20and%20thought%20you%20might%20find%20it%20interesting:%0D%0D$systemPageTitleURLd%0Dhttp://www.upstate.edu/$systemPageSite${systemPagePath}.php%20%0D%0D$systemPageSummaryURLd.."><img alt="Send to a Friend" class="imagerollover" src="site://Upstate-Globals/assets/images/email-rwd.gif" title="Send to a Friend" width="30" height="30"/></a>
                <a href="#" onclick="window.print()"><img alt="Print Page" class="imagerollover" src="site://Upstate-Globals/assets/images/print-rwd.gif" title="Print Page" width="30" height="30" /></a>
                </div>
            
    
    
            ##get previous and next array listings:
            #set( $prevNextList = [ $prevIndex, $nextIndex ] )
    
            ##create previous and next previews:
            #foreach( $prevNextCount in $prevNextList )
                #if( $prevNextCount >= 0 && $prevNextCount < $articles.size() )
                    #chanwProcessSystemPage( $articles[ $prevNextCount ] )
                    #set ($previewArticleYear      = $articles[$prevNextCount].getParent().getChild("name").value )
                    #set( $previewPreviousNextText = "Previous" )
                    
                    #if( $foreach.count == 2 )
                        #set( $previewPreviousNextText = "Next" )
                    #end
        
                    <div class="col-4xs-6 padleft3 padright3 padbottom3 padtop9">
                        <p class="padleft5"><strong>$previewPreviousNextText Article:</strong></p>
                        <div class="newsfeed-item">
                            <a href="$systemPageLink">
                                <div class="pad5">
                                    <img alt="$systemPageTitle.replaceAll('&amp;amp;','&amp;')" src="images/$previewArticleYear/${systemPageName}.jpg" class="img-responsive padtop5 padbottom5" />
                                    <h3>$systemPageTitle.replaceAll("&amp;amp;","&amp;")</h3>
                                    <p>$systemPageSummary.replaceAll("&amp;amp;","&amp;")</p>
                                </div>
                                <div class="clr"></div>
                            </a>   
                        </div>
                    </div>
                #end
            #end
            ##</div>
        #end
    #end    
  
#end